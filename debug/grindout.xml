<?xml version="1.0"?>

<valgrindoutput>

<protocolversion>4</protocolversion>
<protocoltool>memcheck</protocoltool>

<preamble>
  <line>Memcheck, a memory error detector</line>
  <line>Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.</line>
  <line>Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info</line>
  <line>Command: /usr/bin/mogu-server --docroot /home/tom/dev/ffportal/phase2 --http-address 0.0.0.0 --http-port 9090 --gdb</line>
</preamble>

<pid>17890</pid>
<ppid>17889</ppid>
<tool>memcheck</tool>

<args>
  <vargv>
    <exe>/usr/bin/valgrind.bin</exe>
    <arg>--suppressions=/usr/lib/valgrind/debian-libc6-dbg.supp</arg>
    <arg>--tool=memcheck</arg>
    <arg>--xml=yes</arg>
    <arg>--xml-file=grindout.xml</arg>
  </vargv>
  <argv>
    <exe>/usr/bin/mogu-server</exe>
    <arg>--docroot</arg>
    <arg>/home/tom/dev/ffportal/phase2</arg>
    <arg>--http-address</arg>
    <arg>0.0.0.0</arg>
    <arg>--http-port</arg>
    <arg>9090</arg>
    <arg>--gdb</arg>
  </argv>
</args>

<status>
  <state>RUNNING</state>
  <time>00:00:00:00.280 </time>
</status>

<error>
  <unique>0x2</unique>
  <tid>2</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x4430D1</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Nodes::NodeValue::getString()</fn>
      <dir>/home/tom/dev/Mogu/src/Types</dir>
      <file>NodeValue.cpp</file>
      <line>53</line>
    </frame>
    <frame>
      <ip>0x41FE4D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::directListeners(Events::BroadcastMessage*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>249</line>
    </frame>
    <frame>
      <ip>0x41F91B</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::submitBroadcast(Events::BroadcastMessage*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>135</line>
    </frame>
    <frame>
      <ip>0x415FCE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::handleVoidSignal(Enums::SignalTriggers::SignalTrigger)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>106</line>
    </frame>
    <frame>
      <ip>0x4160E0</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::mouseoverSlot()</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>131</line>
    </frame>
    <frame>
      <ip>0x41AF81</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::_mfi::mf0&lt;void, Events::EventBindery&gt;::operator()(Events::EventBindery*) const</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>mem_fn_template.hpp</file>
      <line>49</line>
    </frame>
    <frame>
      <ip>0x41AA3D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>void boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt;::operator()&lt;boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;Wt::WMouseEvent&amp;&gt; &gt;(boost::_bi::type&lt;void&gt;, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;&amp;, boost::_bi::list1&lt;Wt::WMouseEvent&amp;&gt;&amp;, int)</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>bind.hpp</file>
      <line>253</line>
    </frame>
    <frame>
      <ip>0x41A599</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>void boost::_bi::bind_t&lt;void, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt; &gt;::operator()&lt;Wt::WMouseEvent&gt;(Wt::WMouseEvent&amp;)</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>bind_template.hpp</file>
      <line>32</line>
    </frame>
    <frame>
      <ip>0x419FBC</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::detail::function::void_function_obj_invoker1&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt; &gt;, void, Wt::WMouseEvent&gt;::invoke(boost::detail::function::function_buffer&amp;, Wt::WMouseEvent)</fn>
      <dir>/usr/include/boost/function</dir>
      <file>function_template.hpp</file>
      <line>153</line>
    </frame>
    <frame>
      <ip>0x520063F</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::signal1&lt;void, Wt::WMouseEvent, boost::last_value&lt;void&gt;, int, std::less&lt;int&gt;, boost::function1&lt;void, Wt::WMouseEvent&gt; &gt;::operator()(Wt::WMouseEvent)</fn>
    </frame>
    <frame>
      <ip>0x5200A01</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::EventSignal&lt;Wt::WMouseEvent&gt;::processDynamic(Wt::JavaScriptEvent const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x52C383E</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::processSignal(Wt::EventSignalBase*, std::string const&amp;, Wt::WebRequest const&amp;, Wt::WebSession::SignalKind)</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x1467d008 is 8 bytes inside a block of size 24 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x443011</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Nodes::NodeValue::~NodeValue()</fn>
      <dir>/home/tom/dev/Mogu/src/Types</dir>
      <file>NodeValue.cpp</file>
      <line>25</line>
    </frame>
    <frame>
      <ip>0x41F23A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventNodeProcessor::~EventNodeProcessor()</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>EventNodeProcessor.cpp</file>
      <line>45</line>
    </frame>
    <frame>
      <ip>0x41F27B</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventNodeProcessor::~EventNodeProcessor()</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>EventNodeProcessor.cpp</file>
      <line>48</line>
    </frame>
    <frame>
      <ip>0x41B8D8</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::BroadcastMessage::BroadcastMessage(Goo::Moldable*, Events::EventNodeProcessor*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>BroadcastMessage.cpp</file>
      <line>67</line>
    </frame>
    <frame>
      <ip>0x420C7C</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::generateNewBroadcast(Goo::Moldable*, Events::EventNodeExtractor&amp;, Events::EventNodeProcessor*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>482</line>
    </frame>
    <frame>
      <ip>0x420D8C</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::generateNewBroadcast(Goo::Moldable*, Events::EventNodeExtractor&amp;)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>494</line>
    </frame>
    <frame>
      <ip>0x415FC6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::handleVoidSignal(Enums::SignalTriggers::SignalTrigger)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>106</line>
    </frame>
    <frame>
      <ip>0x4160E0</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::mouseoverSlot()</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>131</line>
    </frame>
    <frame>
      <ip>0x41AF81</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::_mfi::mf0&lt;void, Events::EventBindery&gt;::operator()(Events::EventBindery*) const</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>mem_fn_template.hpp</file>
      <line>49</line>
    </frame>
    <frame>
      <ip>0x41AA3D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>void boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt;::operator()&lt;boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;Wt::WMouseEvent&amp;&gt; &gt;(boost::_bi::type&lt;void&gt;, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;&amp;, boost::_bi::list1&lt;Wt::WMouseEvent&amp;&gt;&amp;, int)</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>bind.hpp</file>
      <line>253</line>
    </frame>
    <frame>
      <ip>0x41A599</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>void boost::_bi::bind_t&lt;void, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt; &gt;::operator()&lt;Wt::WMouseEvent&gt;(Wt::WMouseEvent&amp;)</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>bind_template.hpp</file>
      <line>32</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x3</unique>
  <tid>2</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x4430D5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Nodes::NodeValue::getString()</fn>
      <dir>/home/tom/dev/Mogu/src/Types</dir>
      <file>NodeValue.cpp</file>
      <line>53</line>
    </frame>
    <frame>
      <ip>0x41FE4D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::directListeners(Events::BroadcastMessage*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>249</line>
    </frame>
    <frame>
      <ip>0x41F91B</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::submitBroadcast(Events::BroadcastMessage*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>135</line>
    </frame>
    <frame>
      <ip>0x415FCE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::handleVoidSignal(Enums::SignalTriggers::SignalTrigger)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>106</line>
    </frame>
    <frame>
      <ip>0x4160E0</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::mouseoverSlot()</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>131</line>
    </frame>
    <frame>
      <ip>0x41AF81</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::_mfi::mf0&lt;void, Events::EventBindery&gt;::operator()(Events::EventBindery*) const</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>mem_fn_template.hpp</file>
      <line>49</line>
    </frame>
    <frame>
      <ip>0x41AA3D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>void boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt;::operator()&lt;boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;Wt::WMouseEvent&amp;&gt; &gt;(boost::_bi::type&lt;void&gt;, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;&amp;, boost::_bi::list1&lt;Wt::WMouseEvent&amp;&gt;&amp;, int)</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>bind.hpp</file>
      <line>253</line>
    </frame>
    <frame>
      <ip>0x41A599</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>void boost::_bi::bind_t&lt;void, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt; &gt;::operator()&lt;Wt::WMouseEvent&gt;(Wt::WMouseEvent&amp;)</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>bind_template.hpp</file>
      <line>32</line>
    </frame>
    <frame>
      <ip>0x419FBC</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::detail::function::void_function_obj_invoker1&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt; &gt;, void, Wt::WMouseEvent&gt;::invoke(boost::detail::function::function_buffer&amp;, Wt::WMouseEvent)</fn>
      <dir>/usr/include/boost/function</dir>
      <file>function_template.hpp</file>
      <line>153</line>
    </frame>
    <frame>
      <ip>0x520063F</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::signal1&lt;void, Wt::WMouseEvent, boost::last_value&lt;void&gt;, int, std::less&lt;int&gt;, boost::function1&lt;void, Wt::WMouseEvent&gt; &gt;::operator()(Wt::WMouseEvent)</fn>
    </frame>
    <frame>
      <ip>0x5200A01</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::EventSignal&lt;Wt::WMouseEvent&gt;::processDynamic(Wt::JavaScriptEvent const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x52C383E</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::processSignal(Wt::EventSignalBase*, std::string const&amp;, Wt::WebRequest const&amp;, Wt::WebSession::SignalKind)</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x1467d060 is 0 bytes inside a block of size 16 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x442FD2</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Nodes::NodeValue::~NodeValue()</fn>
      <dir>/home/tom/dev/Mogu/src/Types</dir>
      <file>NodeValue.cpp</file>
      <line>23</line>
    </frame>
    <frame>
      <ip>0x443005</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Nodes::NodeValue::~NodeValue()</fn>
      <dir>/home/tom/dev/Mogu/src/Types</dir>
      <file>NodeValue.cpp</file>
      <line>25</line>
    </frame>
    <frame>
      <ip>0x41F23A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventNodeProcessor::~EventNodeProcessor()</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>EventNodeProcessor.cpp</file>
      <line>45</line>
    </frame>
    <frame>
      <ip>0x41F27B</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventNodeProcessor::~EventNodeProcessor()</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>EventNodeProcessor.cpp</file>
      <line>48</line>
    </frame>
    <frame>
      <ip>0x41B8D8</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::BroadcastMessage::BroadcastMessage(Goo::Moldable*, Events::EventNodeProcessor*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>BroadcastMessage.cpp</file>
      <line>67</line>
    </frame>
    <frame>
      <ip>0x420C7C</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::generateNewBroadcast(Goo::Moldable*, Events::EventNodeExtractor&amp;, Events::EventNodeProcessor*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>482</line>
    </frame>
    <frame>
      <ip>0x420D8C</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::generateNewBroadcast(Goo::Moldable*, Events::EventNodeExtractor&amp;)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>494</line>
    </frame>
    <frame>
      <ip>0x415FC6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::handleVoidSignal(Enums::SignalTriggers::SignalTrigger)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>106</line>
    </frame>
    <frame>
      <ip>0x4160E0</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::mouseoverSlot()</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>131</line>
    </frame>
    <frame>
      <ip>0x41AF81</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::_mfi::mf0&lt;void, Events::EventBindery&gt;::operator()(Events::EventBindery*) const</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>mem_fn_template.hpp</file>
      <line>49</line>
    </frame>
    <frame>
      <ip>0x41AA3D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>void boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt;::operator()&lt;boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;Wt::WMouseEvent&amp;&gt; &gt;(boost::_bi::type&lt;void&gt;, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;&amp;, boost::_bi::list1&lt;Wt::WMouseEvent&amp;&gt;&amp;, int)</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>bind.hpp</file>
      <line>253</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x8</unique>
  <tid>2</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x4430D1</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Nodes::NodeValue::getString()</fn>
      <dir>/home/tom/dev/Mogu/src/Types</dir>
      <file>NodeValue.cpp</file>
      <line>53</line>
    </frame>
    <frame>
      <ip>0x41FE4D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::directListeners(Events::BroadcastMessage*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>249</line>
    </frame>
    <frame>
      <ip>0x41F91B</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::submitBroadcast(Events::BroadcastMessage*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>135</line>
    </frame>
    <frame>
      <ip>0x41F7DE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::submitBroadcast(Events::BroadcastMessage*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>101</line>
    </frame>
    <frame>
      <ip>0x41F790</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::submitBroadcast(Events::BroadcastMessage*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x415FCE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::handleVoidSignal(Enums::SignalTriggers::SignalTrigger)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>106</line>
    </frame>
    <frame>
      <ip>0x4160C0</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::clickSlot()</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x41AF81</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::_mfi::mf0&lt;void, Events::EventBindery&gt;::operator()(Events::EventBindery*) const</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>mem_fn_template.hpp</file>
      <line>49</line>
    </frame>
    <frame>
      <ip>0x41AA3D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>void boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt;::operator()&lt;boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;Wt::WMouseEvent&amp;&gt; &gt;(boost::_bi::type&lt;void&gt;, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;&amp;, boost::_bi::list1&lt;Wt::WMouseEvent&amp;&gt;&amp;, int)</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>bind.hpp</file>
      <line>253</line>
    </frame>
    <frame>
      <ip>0x41A599</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>void boost::_bi::bind_t&lt;void, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt; &gt;::operator()&lt;Wt::WMouseEvent&gt;(Wt::WMouseEvent&amp;)</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>bind_template.hpp</file>
      <line>32</line>
    </frame>
    <frame>
      <ip>0x419FBC</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::detail::function::void_function_obj_invoker1&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt; &gt;, void, Wt::WMouseEvent&gt;::invoke(boost::detail::function::function_buffer&amp;, Wt::WMouseEvent)</fn>
      <dir>/usr/include/boost/function</dir>
      <file>function_template.hpp</file>
      <line>153</line>
    </frame>
    <frame>
      <ip>0x520063F</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::signal1&lt;void, Wt::WMouseEvent, boost::last_value&lt;void&gt;, int, std::less&lt;int&gt;, boost::function1&lt;void, Wt::WMouseEvent&gt; &gt;::operator()(Wt::WMouseEvent)</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x147951c8 is 8 bytes inside a block of size 24 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x443011</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Nodes::NodeValue::~NodeValue()</fn>
      <dir>/home/tom/dev/Mogu/src/Types</dir>
      <file>NodeValue.cpp</file>
      <line>25</line>
    </frame>
    <frame>
      <ip>0x41F23A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventNodeProcessor::~EventNodeProcessor()</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>EventNodeProcessor.cpp</file>
      <line>45</line>
    </frame>
    <frame>
      <ip>0x41F27B</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventNodeProcessor::~EventNodeProcessor()</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>EventNodeProcessor.cpp</file>
      <line>48</line>
    </frame>
    <frame>
      <ip>0x41B8D8</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::BroadcastMessage::BroadcastMessage(Goo::Moldable*, Events::EventNodeProcessor*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>BroadcastMessage.cpp</file>
      <line>67</line>
    </frame>
    <frame>
      <ip>0x420C7C</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::generateNewBroadcast(Goo::Moldable*, Events::EventNodeExtractor&amp;, Events::EventNodeProcessor*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>482</line>
    </frame>
    <frame>
      <ip>0x420D8C</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::generateNewBroadcast(Goo::Moldable*, Events::EventNodeExtractor&amp;)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>494</line>
    </frame>
    <frame>
      <ip>0x415FC6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::handleVoidSignal(Enums::SignalTriggers::SignalTrigger)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>106</line>
    </frame>
    <frame>
      <ip>0x4160C0</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::clickSlot()</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x41AF81</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::_mfi::mf0&lt;void, Events::EventBindery&gt;::operator()(Events::EventBindery*) const</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>mem_fn_template.hpp</file>
      <line>49</line>
    </frame>
    <frame>
      <ip>0x41AA3D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>void boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt;::operator()&lt;boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;Wt::WMouseEvent&amp;&gt; &gt;(boost::_bi::type&lt;void&gt;, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;&amp;, boost::_bi::list1&lt;Wt::WMouseEvent&amp;&gt;&amp;, int)</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>bind.hpp</file>
      <line>253</line>
    </frame>
    <frame>
      <ip>0x41A599</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>void boost::_bi::bind_t&lt;void, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt; &gt;::operator()&lt;Wt::WMouseEvent&gt;(Wt::WMouseEvent&amp;)</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>bind_template.hpp</file>
      <line>32</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x9</unique>
  <tid>2</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x4430D5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Nodes::NodeValue::getString()</fn>
      <dir>/home/tom/dev/Mogu/src/Types</dir>
      <file>NodeValue.cpp</file>
      <line>53</line>
    </frame>
    <frame>
      <ip>0x41FE4D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::directListeners(Events::BroadcastMessage*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>249</line>
    </frame>
    <frame>
      <ip>0x41F91B</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::submitBroadcast(Events::BroadcastMessage*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>135</line>
    </frame>
    <frame>
      <ip>0x41F7DE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::submitBroadcast(Events::BroadcastMessage*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>101</line>
    </frame>
    <frame>
      <ip>0x41F790</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::submitBroadcast(Events::BroadcastMessage*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x415FCE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::handleVoidSignal(Enums::SignalTriggers::SignalTrigger)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>106</line>
    </frame>
    <frame>
      <ip>0x4160C0</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::clickSlot()</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x41AF81</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::_mfi::mf0&lt;void, Events::EventBindery&gt;::operator()(Events::EventBindery*) const</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>mem_fn_template.hpp</file>
      <line>49</line>
    </frame>
    <frame>
      <ip>0x41AA3D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>void boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt;::operator()&lt;boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;Wt::WMouseEvent&amp;&gt; &gt;(boost::_bi::type&lt;void&gt;, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;&amp;, boost::_bi::list1&lt;Wt::WMouseEvent&amp;&gt;&amp;, int)</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>bind.hpp</file>
      <line>253</line>
    </frame>
    <frame>
      <ip>0x41A599</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>void boost::_bi::bind_t&lt;void, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt; &gt;::operator()&lt;Wt::WMouseEvent&gt;(Wt::WMouseEvent&amp;)</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>bind_template.hpp</file>
      <line>32</line>
    </frame>
    <frame>
      <ip>0x419FBC</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::detail::function::void_function_obj_invoker1&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt; &gt;, void, Wt::WMouseEvent&gt;::invoke(boost::detail::function::function_buffer&amp;, Wt::WMouseEvent)</fn>
      <dir>/usr/include/boost/function</dir>
      <file>function_template.hpp</file>
      <line>153</line>
    </frame>
    <frame>
      <ip>0x520063F</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::signal1&lt;void, Wt::WMouseEvent, boost::last_value&lt;void&gt;, int, std::less&lt;int&gt;, boost::function1&lt;void, Wt::WMouseEvent&gt; &gt;::operator()(Wt::WMouseEvent)</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x14795220 is 0 bytes inside a block of size 16 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x442FD2</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Nodes::NodeValue::~NodeValue()</fn>
      <dir>/home/tom/dev/Mogu/src/Types</dir>
      <file>NodeValue.cpp</file>
      <line>23</line>
    </frame>
    <frame>
      <ip>0x443005</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Nodes::NodeValue::~NodeValue()</fn>
      <dir>/home/tom/dev/Mogu/src/Types</dir>
      <file>NodeValue.cpp</file>
      <line>25</line>
    </frame>
    <frame>
      <ip>0x41F23A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventNodeProcessor::~EventNodeProcessor()</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>EventNodeProcessor.cpp</file>
      <line>45</line>
    </frame>
    <frame>
      <ip>0x41F27B</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventNodeProcessor::~EventNodeProcessor()</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>EventNodeProcessor.cpp</file>
      <line>48</line>
    </frame>
    <frame>
      <ip>0x41B8D8</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::BroadcastMessage::BroadcastMessage(Goo::Moldable*, Events::EventNodeProcessor*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>BroadcastMessage.cpp</file>
      <line>67</line>
    </frame>
    <frame>
      <ip>0x420C7C</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::generateNewBroadcast(Goo::Moldable*, Events::EventNodeExtractor&amp;, Events::EventNodeProcessor*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>482</line>
    </frame>
    <frame>
      <ip>0x420D8C</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::generateNewBroadcast(Goo::Moldable*, Events::EventNodeExtractor&amp;)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>494</line>
    </frame>
    <frame>
      <ip>0x415FC6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::handleVoidSignal(Enums::SignalTriggers::SignalTrigger)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>106</line>
    </frame>
    <frame>
      <ip>0x4160C0</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::clickSlot()</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x41AF81</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::_mfi::mf0&lt;void, Events::EventBindery&gt;::operator()(Events::EventBindery*) const</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>mem_fn_template.hpp</file>
      <line>49</line>
    </frame>
    <frame>
      <ip>0x41AA3D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>void boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt;::operator()&lt;boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;Wt::WMouseEvent&amp;&gt; &gt;(boost::_bi::type&lt;void&gt;, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;&amp;, boost::_bi::list1&lt;Wt::WMouseEvent&amp;&gt;&amp;, int)</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>bind.hpp</file>
      <line>253</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0xa</unique>
  <tid>2</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x443128</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Nodes::NodeValue::getInt()</fn>
      <dir>/home/tom/dev/Mogu/src/Types</dir>
      <file>NodeValue.cpp</file>
      <line>59</line>
    </frame>
    <frame>
      <ip>0x41FF22</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::directListeners(Events::BroadcastMessage*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>264</line>
    </frame>
    <frame>
      <ip>0x41F91B</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::submitBroadcast(Events::BroadcastMessage*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>135</line>
    </frame>
    <frame>
      <ip>0x41F7DE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::submitBroadcast(Events::BroadcastMessage*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>101</line>
    </frame>
    <frame>
      <ip>0x41F790</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::submitBroadcast(Events::BroadcastMessage*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x41F790</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::submitBroadcast(Events::BroadcastMessage*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x415FCE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::handleVoidSignal(Enums::SignalTriggers::SignalTrigger)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>106</line>
    </frame>
    <frame>
      <ip>0x4160C0</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::clickSlot()</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x41AF81</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::_mfi::mf0&lt;void, Events::EventBindery&gt;::operator()(Events::EventBindery*) const</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>mem_fn_template.hpp</file>
      <line>49</line>
    </frame>
    <frame>
      <ip>0x41AA3D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>void boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt;::operator()&lt;boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;Wt::WMouseEvent&amp;&gt; &gt;(boost::_bi::type&lt;void&gt;, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;&amp;, boost::_bi::list1&lt;Wt::WMouseEvent&amp;&gt;&amp;, int)</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>bind.hpp</file>
      <line>253</line>
    </frame>
    <frame>
      <ip>0x41A599</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>void boost::_bi::bind_t&lt;void, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt; &gt;::operator()&lt;Wt::WMouseEvent&gt;(Wt::WMouseEvent&amp;)</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>bind_template.hpp</file>
      <line>32</line>
    </frame>
    <frame>
      <ip>0x419FBC</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::detail::function::void_function_obj_invoker1&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt; &gt;, void, Wt::WMouseEvent&gt;::invoke(boost::detail::function::function_buffer&amp;, Wt::WMouseEvent)</fn>
      <dir>/usr/include/boost/function</dir>
      <file>function_template.hpp</file>
      <line>153</line>
    </frame>
  </stack>
  <auxwhat>Address 0x14798178 is 8 bytes inside a block of size 24 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x443011</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Nodes::NodeValue::~NodeValue()</fn>
      <dir>/home/tom/dev/Mogu/src/Types</dir>
      <file>NodeValue.cpp</file>
      <line>25</line>
    </frame>
    <frame>
      <ip>0x41F23A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventNodeProcessor::~EventNodeProcessor()</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>EventNodeProcessor.cpp</file>
      <line>45</line>
    </frame>
    <frame>
      <ip>0x41F27B</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventNodeProcessor::~EventNodeProcessor()</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>EventNodeProcessor.cpp</file>
      <line>48</line>
    </frame>
    <frame>
      <ip>0x41B8D8</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::BroadcastMessage::BroadcastMessage(Goo::Moldable*, Events::EventNodeProcessor*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>BroadcastMessage.cpp</file>
      <line>67</line>
    </frame>
    <frame>
      <ip>0x420C7C</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::generateNewBroadcast(Goo::Moldable*, Events::EventNodeExtractor&amp;, Events::EventNodeProcessor*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>482</line>
    </frame>
    <frame>
      <ip>0x420D8C</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::generateNewBroadcast(Goo::Moldable*, Events::EventNodeExtractor&amp;)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>494</line>
    </frame>
    <frame>
      <ip>0x415FC6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::handleVoidSignal(Enums::SignalTriggers::SignalTrigger)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>106</line>
    </frame>
    <frame>
      <ip>0x4160C0</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::clickSlot()</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x41AF81</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::_mfi::mf0&lt;void, Events::EventBindery&gt;::operator()(Events::EventBindery*) const</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>mem_fn_template.hpp</file>
      <line>49</line>
    </frame>
    <frame>
      <ip>0x41AA3D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>void boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt;::operator()&lt;boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;Wt::WMouseEvent&amp;&gt; &gt;(boost::_bi::type&lt;void&gt;, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;&amp;, boost::_bi::list1&lt;Wt::WMouseEvent&amp;&gt;&amp;, int)</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>bind.hpp</file>
      <line>253</line>
    </frame>
    <frame>
      <ip>0x41A599</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>void boost::_bi::bind_t&lt;void, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt; &gt;::operator()&lt;Wt::WMouseEvent&gt;(Wt::WMouseEvent&amp;)</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>bind_template.hpp</file>
      <line>32</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0xb</unique>
  <tid>2</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x44312C</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Nodes::NodeValue::getInt()</fn>
      <dir>/home/tom/dev/Mogu/src/Types</dir>
      <file>NodeValue.cpp</file>
      <line>59</line>
    </frame>
    <frame>
      <ip>0x41FF22</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::directListeners(Events::BroadcastMessage*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>264</line>
    </frame>
    <frame>
      <ip>0x41F91B</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::submitBroadcast(Events::BroadcastMessage*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>135</line>
    </frame>
    <frame>
      <ip>0x41F7DE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::submitBroadcast(Events::BroadcastMessage*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>101</line>
    </frame>
    <frame>
      <ip>0x41F790</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::submitBroadcast(Events::BroadcastMessage*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x41F790</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::submitBroadcast(Events::BroadcastMessage*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x415FCE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::handleVoidSignal(Enums::SignalTriggers::SignalTrigger)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>106</line>
    </frame>
    <frame>
      <ip>0x4160C0</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::clickSlot()</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x41AF81</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::_mfi::mf0&lt;void, Events::EventBindery&gt;::operator()(Events::EventBindery*) const</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>mem_fn_template.hpp</file>
      <line>49</line>
    </frame>
    <frame>
      <ip>0x41AA3D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>void boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt;::operator()&lt;boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;Wt::WMouseEvent&amp;&gt; &gt;(boost::_bi::type&lt;void&gt;, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;&amp;, boost::_bi::list1&lt;Wt::WMouseEvent&amp;&gt;&amp;, int)</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>bind.hpp</file>
      <line>253</line>
    </frame>
    <frame>
      <ip>0x41A599</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>void boost::_bi::bind_t&lt;void, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt; &gt;::operator()&lt;Wt::WMouseEvent&gt;(Wt::WMouseEvent&amp;)</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>bind_template.hpp</file>
      <line>32</line>
    </frame>
    <frame>
      <ip>0x419FBC</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::detail::function::void_function_obj_invoker1&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt; &gt;, void, Wt::WMouseEvent&gt;::invoke(boost::detail::function::function_buffer&amp;, Wt::WMouseEvent)</fn>
      <dir>/usr/include/boost/function</dir>
      <file>function_template.hpp</file>
      <line>153</line>
    </frame>
  </stack>
  <auxwhat>Address 0x147981d8 is 8 bytes inside a block of size 16 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x442FD2</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Nodes::NodeValue::~NodeValue()</fn>
      <dir>/home/tom/dev/Mogu/src/Types</dir>
      <file>NodeValue.cpp</file>
      <line>23</line>
    </frame>
    <frame>
      <ip>0x443005</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Nodes::NodeValue::~NodeValue()</fn>
      <dir>/home/tom/dev/Mogu/src/Types</dir>
      <file>NodeValue.cpp</file>
      <line>25</line>
    </frame>
    <frame>
      <ip>0x41F23A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventNodeProcessor::~EventNodeProcessor()</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>EventNodeProcessor.cpp</file>
      <line>45</line>
    </frame>
    <frame>
      <ip>0x41F27B</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventNodeProcessor::~EventNodeProcessor()</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>EventNodeProcessor.cpp</file>
      <line>48</line>
    </frame>
    <frame>
      <ip>0x41B8D8</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::BroadcastMessage::BroadcastMessage(Goo::Moldable*, Events::EventNodeProcessor*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>BroadcastMessage.cpp</file>
      <line>67</line>
    </frame>
    <frame>
      <ip>0x420C7C</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::generateNewBroadcast(Goo::Moldable*, Events::EventNodeExtractor&amp;, Events::EventNodeProcessor*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>482</line>
    </frame>
    <frame>
      <ip>0x420D8C</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::generateNewBroadcast(Goo::Moldable*, Events::EventNodeExtractor&amp;)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>494</line>
    </frame>
    <frame>
      <ip>0x415FC6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::handleVoidSignal(Enums::SignalTriggers::SignalTrigger)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>106</line>
    </frame>
    <frame>
      <ip>0x4160C0</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::clickSlot()</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x41AF81</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::_mfi::mf0&lt;void, Events::EventBindery&gt;::operator()(Events::EventBindery*) const</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>mem_fn_template.hpp</file>
      <line>49</line>
    </frame>
    <frame>
      <ip>0x41AA3D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>void boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt;::operator()&lt;boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;Wt::WMouseEvent&amp;&gt; &gt;(boost::_bi::type&lt;void&gt;, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;&amp;, boost::_bi::list1&lt;Wt::WMouseEvent&amp;&gt;&amp;, int)</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>bind.hpp</file>
      <line>253</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0xc</unique>
  <tid>2</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x4430D1</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Nodes::NodeValue::getString()</fn>
      <dir>/home/tom/dev/Mogu/src/Types</dir>
      <file>NodeValue.cpp</file>
      <line>53</line>
    </frame>
    <frame>
      <ip>0x41FDC0</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::directListeners(Events::BroadcastMessage*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>235</line>
    </frame>
    <frame>
      <ip>0x41F91B</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::submitBroadcast(Events::BroadcastMessage*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>135</line>
    </frame>
    <frame>
      <ip>0x415FCE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::handleVoidSignal(Enums::SignalTriggers::SignalTrigger)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>106</line>
    </frame>
    <frame>
      <ip>0x4160C0</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::clickSlot()</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x41AF81</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::_mfi::mf0&lt;void, Events::EventBindery&gt;::operator()(Events::EventBindery*) const</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>mem_fn_template.hpp</file>
      <line>49</line>
    </frame>
    <frame>
      <ip>0x41AA3D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>void boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt;::operator()&lt;boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;Wt::WMouseEvent&amp;&gt; &gt;(boost::_bi::type&lt;void&gt;, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;&amp;, boost::_bi::list1&lt;Wt::WMouseEvent&amp;&gt;&amp;, int)</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>bind.hpp</file>
      <line>253</line>
    </frame>
    <frame>
      <ip>0x41A599</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>void boost::_bi::bind_t&lt;void, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt; &gt;::operator()&lt;Wt::WMouseEvent&gt;(Wt::WMouseEvent&amp;)</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>bind_template.hpp</file>
      <line>32</line>
    </frame>
    <frame>
      <ip>0x419FBC</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::detail::function::void_function_obj_invoker1&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt; &gt;, void, Wt::WMouseEvent&gt;::invoke(boost::detail::function::function_buffer&amp;, Wt::WMouseEvent)</fn>
      <dir>/usr/include/boost/function</dir>
      <file>function_template.hpp</file>
      <line>153</line>
    </frame>
    <frame>
      <ip>0x520063F</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::signal1&lt;void, Wt::WMouseEvent, boost::last_value&lt;void&gt;, int, std::less&lt;int&gt;, boost::function1&lt;void, Wt::WMouseEvent&gt; &gt;::operator()(Wt::WMouseEvent)</fn>
    </frame>
    <frame>
      <ip>0x5200A01</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::EventSignal&lt;Wt::WMouseEvent&gt;::processDynamic(Wt::JavaScriptEvent const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x52C383E</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::processSignal(Wt::EventSignalBase*, std::string const&amp;, Wt::WebRequest const&amp;, Wt::WebSession::SignalKind)</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x1479b2e8 is 8 bytes inside a block of size 24 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x443011</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Nodes::NodeValue::~NodeValue()</fn>
      <dir>/home/tom/dev/Mogu/src/Types</dir>
      <file>NodeValue.cpp</file>
      <line>25</line>
    </frame>
    <frame>
      <ip>0x41F23A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventNodeProcessor::~EventNodeProcessor()</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>EventNodeProcessor.cpp</file>
      <line>45</line>
    </frame>
    <frame>
      <ip>0x41F27B</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventNodeProcessor::~EventNodeProcessor()</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>EventNodeProcessor.cpp</file>
      <line>48</line>
    </frame>
    <frame>
      <ip>0x41B8D8</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::BroadcastMessage::BroadcastMessage(Goo::Moldable*, Events::EventNodeProcessor*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>BroadcastMessage.cpp</file>
      <line>67</line>
    </frame>
    <frame>
      <ip>0x420C7C</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::generateNewBroadcast(Goo::Moldable*, Events::EventNodeExtractor&amp;, Events::EventNodeProcessor*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>482</line>
    </frame>
    <frame>
      <ip>0x420D8C</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::generateNewBroadcast(Goo::Moldable*, Events::EventNodeExtractor&amp;)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>494</line>
    </frame>
    <frame>
      <ip>0x415FC6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::handleVoidSignal(Enums::SignalTriggers::SignalTrigger)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>106</line>
    </frame>
    <frame>
      <ip>0x4160C0</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::clickSlot()</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x41AF81</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::_mfi::mf0&lt;void, Events::EventBindery&gt;::operator()(Events::EventBindery*) const</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>mem_fn_template.hpp</file>
      <line>49</line>
    </frame>
    <frame>
      <ip>0x41AA3D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>void boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt;::operator()&lt;boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;Wt::WMouseEvent&amp;&gt; &gt;(boost::_bi::type&lt;void&gt;, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;&amp;, boost::_bi::list1&lt;Wt::WMouseEvent&amp;&gt;&amp;, int)</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>bind.hpp</file>
      <line>253</line>
    </frame>
    <frame>
      <ip>0x41A599</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>void boost::_bi::bind_t&lt;void, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt; &gt;::operator()&lt;Wt::WMouseEvent&gt;(Wt::WMouseEvent&amp;)</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>bind_template.hpp</file>
      <line>32</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0xd</unique>
  <tid>2</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x4430D5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Nodes::NodeValue::getString()</fn>
      <dir>/home/tom/dev/Mogu/src/Types</dir>
      <file>NodeValue.cpp</file>
      <line>53</line>
    </frame>
    <frame>
      <ip>0x41FDC0</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::directListeners(Events::BroadcastMessage*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>235</line>
    </frame>
    <frame>
      <ip>0x41F91B</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::submitBroadcast(Events::BroadcastMessage*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>135</line>
    </frame>
    <frame>
      <ip>0x415FCE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::handleVoidSignal(Enums::SignalTriggers::SignalTrigger)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>106</line>
    </frame>
    <frame>
      <ip>0x4160C0</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::clickSlot()</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x41AF81</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::_mfi::mf0&lt;void, Events::EventBindery&gt;::operator()(Events::EventBindery*) const</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>mem_fn_template.hpp</file>
      <line>49</line>
    </frame>
    <frame>
      <ip>0x41AA3D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>void boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt;::operator()&lt;boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;Wt::WMouseEvent&amp;&gt; &gt;(boost::_bi::type&lt;void&gt;, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;&amp;, boost::_bi::list1&lt;Wt::WMouseEvent&amp;&gt;&amp;, int)</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>bind.hpp</file>
      <line>253</line>
    </frame>
    <frame>
      <ip>0x41A599</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>void boost::_bi::bind_t&lt;void, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt; &gt;::operator()&lt;Wt::WMouseEvent&gt;(Wt::WMouseEvent&amp;)</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>bind_template.hpp</file>
      <line>32</line>
    </frame>
    <frame>
      <ip>0x419FBC</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::detail::function::void_function_obj_invoker1&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt; &gt;, void, Wt::WMouseEvent&gt;::invoke(boost::detail::function::function_buffer&amp;, Wt::WMouseEvent)</fn>
      <dir>/usr/include/boost/function</dir>
      <file>function_template.hpp</file>
      <line>153</line>
    </frame>
    <frame>
      <ip>0x520063F</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::signal1&lt;void, Wt::WMouseEvent, boost::last_value&lt;void&gt;, int, std::less&lt;int&gt;, boost::function1&lt;void, Wt::WMouseEvent&gt; &gt;::operator()(Wt::WMouseEvent)</fn>
    </frame>
    <frame>
      <ip>0x5200A01</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::EventSignal&lt;Wt::WMouseEvent&gt;::processDynamic(Wt::JavaScriptEvent const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x52C383E</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::processSignal(Wt::EventSignalBase*, std::string const&amp;, Wt::WebRequest const&amp;, Wt::WebSession::SignalKind)</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x1479b340 is 0 bytes inside a block of size 16 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x442FD2</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Nodes::NodeValue::~NodeValue()</fn>
      <dir>/home/tom/dev/Mogu/src/Types</dir>
      <file>NodeValue.cpp</file>
      <line>23</line>
    </frame>
    <frame>
      <ip>0x443005</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Nodes::NodeValue::~NodeValue()</fn>
      <dir>/home/tom/dev/Mogu/src/Types</dir>
      <file>NodeValue.cpp</file>
      <line>25</line>
    </frame>
    <frame>
      <ip>0x41F23A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventNodeProcessor::~EventNodeProcessor()</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>EventNodeProcessor.cpp</file>
      <line>45</line>
    </frame>
    <frame>
      <ip>0x41F27B</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventNodeProcessor::~EventNodeProcessor()</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>EventNodeProcessor.cpp</file>
      <line>48</line>
    </frame>
    <frame>
      <ip>0x41B8D8</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::BroadcastMessage::BroadcastMessage(Goo::Moldable*, Events::EventNodeProcessor*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>BroadcastMessage.cpp</file>
      <line>67</line>
    </frame>
    <frame>
      <ip>0x420C7C</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::generateNewBroadcast(Goo::Moldable*, Events::EventNodeExtractor&amp;, Events::EventNodeProcessor*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>482</line>
    </frame>
    <frame>
      <ip>0x420D8C</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::generateNewBroadcast(Goo::Moldable*, Events::EventNodeExtractor&amp;)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>494</line>
    </frame>
    <frame>
      <ip>0x415FC6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::handleVoidSignal(Enums::SignalTriggers::SignalTrigger)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>106</line>
    </frame>
    <frame>
      <ip>0x4160C0</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::clickSlot()</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x41AF81</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::_mfi::mf0&lt;void, Events::EventBindery&gt;::operator()(Events::EventBindery*) const</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>mem_fn_template.hpp</file>
      <line>49</line>
    </frame>
    <frame>
      <ip>0x41AA3D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>void boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt;::operator()&lt;boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;Wt::WMouseEvent&amp;&gt; &gt;(boost::_bi::type&lt;void&gt;, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;&amp;, boost::_bi::list1&lt;Wt::WMouseEvent&amp;&gt;&amp;, int)</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>bind.hpp</file>
      <line>253</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x32</unique>
  <tid>9</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x443128</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Nodes::NodeValue::getInt()</fn>
      <dir>/home/tom/dev/Mogu/src/Types</dir>
      <file>NodeValue.cpp</file>
      <line>59</line>
    </frame>
    <frame>
      <ip>0x41FF22</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::directListeners(Events::BroadcastMessage*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>264</line>
    </frame>
    <frame>
      <ip>0x41F91B</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::submitBroadcast(Events::BroadcastMessage*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>135</line>
    </frame>
    <frame>
      <ip>0x415FCE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::handleVoidSignal(Enums::SignalTriggers::SignalTrigger)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>106</line>
    </frame>
    <frame>
      <ip>0x4160C0</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::clickSlot()</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x41AF81</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::_mfi::mf0&lt;void, Events::EventBindery&gt;::operator()(Events::EventBindery*) const</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>mem_fn_template.hpp</file>
      <line>49</line>
    </frame>
    <frame>
      <ip>0x41AA3D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>void boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt;::operator()&lt;boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;Wt::WMouseEvent&amp;&gt; &gt;(boost::_bi::type&lt;void&gt;, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;&amp;, boost::_bi::list1&lt;Wt::WMouseEvent&amp;&gt;&amp;, int)</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>bind.hpp</file>
      <line>253</line>
    </frame>
    <frame>
      <ip>0x41A599</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>void boost::_bi::bind_t&lt;void, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt; &gt;::operator()&lt;Wt::WMouseEvent&gt;(Wt::WMouseEvent&amp;)</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>bind_template.hpp</file>
      <line>32</line>
    </frame>
    <frame>
      <ip>0x419FBC</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::detail::function::void_function_obj_invoker1&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt; &gt;, void, Wt::WMouseEvent&gt;::invoke(boost::detail::function::function_buffer&amp;, Wt::WMouseEvent)</fn>
      <dir>/usr/include/boost/function</dir>
      <file>function_template.hpp</file>
      <line>153</line>
    </frame>
    <frame>
      <ip>0x520063F</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::signal1&lt;void, Wt::WMouseEvent, boost::last_value&lt;void&gt;, int, std::less&lt;int&gt;, boost::function1&lt;void, Wt::WMouseEvent&gt; &gt;::operator()(Wt::WMouseEvent)</fn>
    </frame>
    <frame>
      <ip>0x5200A01</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::EventSignal&lt;Wt::WMouseEvent&gt;::processDynamic(Wt::JavaScriptEvent const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x52C383E</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::processSignal(Wt::EventSignalBase*, std::string const&amp;, Wt::WebRequest const&amp;, Wt::WebSession::SignalKind)</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x14ab7828 is 8 bytes inside a block of size 24 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x443011</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Nodes::NodeValue::~NodeValue()</fn>
      <dir>/home/tom/dev/Mogu/src/Types</dir>
      <file>NodeValue.cpp</file>
      <line>25</line>
    </frame>
    <frame>
      <ip>0x41F23A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventNodeProcessor::~EventNodeProcessor()</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>EventNodeProcessor.cpp</file>
      <line>45</line>
    </frame>
    <frame>
      <ip>0x41F27B</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventNodeProcessor::~EventNodeProcessor()</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>EventNodeProcessor.cpp</file>
      <line>48</line>
    </frame>
    <frame>
      <ip>0x41B8D8</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::BroadcastMessage::BroadcastMessage(Goo::Moldable*, Events::EventNodeProcessor*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>BroadcastMessage.cpp</file>
      <line>67</line>
    </frame>
    <frame>
      <ip>0x420C7C</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::generateNewBroadcast(Goo::Moldable*, Events::EventNodeExtractor&amp;, Events::EventNodeProcessor*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>482</line>
    </frame>
    <frame>
      <ip>0x420D8C</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::generateNewBroadcast(Goo::Moldable*, Events::EventNodeExtractor&amp;)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>494</line>
    </frame>
    <frame>
      <ip>0x415FC6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::handleVoidSignal(Enums::SignalTriggers::SignalTrigger)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>106</line>
    </frame>
    <frame>
      <ip>0x4160C0</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::clickSlot()</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x41AF81</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::_mfi::mf0&lt;void, Events::EventBindery&gt;::operator()(Events::EventBindery*) const</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>mem_fn_template.hpp</file>
      <line>49</line>
    </frame>
    <frame>
      <ip>0x41AA3D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>void boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt;::operator()&lt;boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;Wt::WMouseEvent&amp;&gt; &gt;(boost::_bi::type&lt;void&gt;, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;&amp;, boost::_bi::list1&lt;Wt::WMouseEvent&amp;&gt;&amp;, int)</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>bind.hpp</file>
      <line>253</line>
    </frame>
    <frame>
      <ip>0x41A599</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>void boost::_bi::bind_t&lt;void, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt; &gt;::operator()&lt;Wt::WMouseEvent&gt;(Wt::WMouseEvent&amp;)</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>bind_template.hpp</file>
      <line>32</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x33</unique>
  <tid>9</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x44312C</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Nodes::NodeValue::getInt()</fn>
      <dir>/home/tom/dev/Mogu/src/Types</dir>
      <file>NodeValue.cpp</file>
      <line>59</line>
    </frame>
    <frame>
      <ip>0x41FF22</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::directListeners(Events::BroadcastMessage*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>264</line>
    </frame>
    <frame>
      <ip>0x41F91B</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::submitBroadcast(Events::BroadcastMessage*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>135</line>
    </frame>
    <frame>
      <ip>0x415FCE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::handleVoidSignal(Enums::SignalTriggers::SignalTrigger)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>106</line>
    </frame>
    <frame>
      <ip>0x4160C0</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::clickSlot()</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x41AF81</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::_mfi::mf0&lt;void, Events::EventBindery&gt;::operator()(Events::EventBindery*) const</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>mem_fn_template.hpp</file>
      <line>49</line>
    </frame>
    <frame>
      <ip>0x41AA3D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>void boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt;::operator()&lt;boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;Wt::WMouseEvent&amp;&gt; &gt;(boost::_bi::type&lt;void&gt;, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;&amp;, boost::_bi::list1&lt;Wt::WMouseEvent&amp;&gt;&amp;, int)</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>bind.hpp</file>
      <line>253</line>
    </frame>
    <frame>
      <ip>0x41A599</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>void boost::_bi::bind_t&lt;void, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt; &gt;::operator()&lt;Wt::WMouseEvent&gt;(Wt::WMouseEvent&amp;)</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>bind_template.hpp</file>
      <line>32</line>
    </frame>
    <frame>
      <ip>0x419FBC</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::detail::function::void_function_obj_invoker1&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt; &gt;, void, Wt::WMouseEvent&gt;::invoke(boost::detail::function::function_buffer&amp;, Wt::WMouseEvent)</fn>
      <dir>/usr/include/boost/function</dir>
      <file>function_template.hpp</file>
      <line>153</line>
    </frame>
    <frame>
      <ip>0x520063F</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::signal1&lt;void, Wt::WMouseEvent, boost::last_value&lt;void&gt;, int, std::less&lt;int&gt;, boost::function1&lt;void, Wt::WMouseEvent&gt; &gt;::operator()(Wt::WMouseEvent)</fn>
    </frame>
    <frame>
      <ip>0x5200A01</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::EventSignal&lt;Wt::WMouseEvent&gt;::processDynamic(Wt::JavaScriptEvent const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x52C383E</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::processSignal(Wt::EventSignalBase*, std::string const&amp;, Wt::WebRequest const&amp;, Wt::WebSession::SignalKind)</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x14ab7888 is 8 bytes inside a block of size 16 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x442FD2</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Nodes::NodeValue::~NodeValue()</fn>
      <dir>/home/tom/dev/Mogu/src/Types</dir>
      <file>NodeValue.cpp</file>
      <line>23</line>
    </frame>
    <frame>
      <ip>0x443005</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Nodes::NodeValue::~NodeValue()</fn>
      <dir>/home/tom/dev/Mogu/src/Types</dir>
      <file>NodeValue.cpp</file>
      <line>25</line>
    </frame>
    <frame>
      <ip>0x41F23A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventNodeProcessor::~EventNodeProcessor()</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>EventNodeProcessor.cpp</file>
      <line>45</line>
    </frame>
    <frame>
      <ip>0x41F27B</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventNodeProcessor::~EventNodeProcessor()</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>EventNodeProcessor.cpp</file>
      <line>48</line>
    </frame>
    <frame>
      <ip>0x41B8D8</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::BroadcastMessage::BroadcastMessage(Goo::Moldable*, Events::EventNodeProcessor*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>BroadcastMessage.cpp</file>
      <line>67</line>
    </frame>
    <frame>
      <ip>0x420C7C</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::generateNewBroadcast(Goo::Moldable*, Events::EventNodeExtractor&amp;, Events::EventNodeProcessor*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>482</line>
    </frame>
    <frame>
      <ip>0x420D8C</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::generateNewBroadcast(Goo::Moldable*, Events::EventNodeExtractor&amp;)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>494</line>
    </frame>
    <frame>
      <ip>0x415FC6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::handleVoidSignal(Enums::SignalTriggers::SignalTrigger)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>106</line>
    </frame>
    <frame>
      <ip>0x4160C0</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::clickSlot()</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x41AF81</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::_mfi::mf0&lt;void, Events::EventBindery&gt;::operator()(Events::EventBindery*) const</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>mem_fn_template.hpp</file>
      <line>49</line>
    </frame>
    <frame>
      <ip>0x41AA3D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>void boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt;::operator()&lt;boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;Wt::WMouseEvent&amp;&gt; &gt;(boost::_bi::type&lt;void&gt;, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;&amp;, boost::_bi::list1&lt;Wt::WMouseEvent&amp;&gt;&amp;, int)</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>bind.hpp</file>
      <line>253</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x44</unique>
  <tid>9</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x4430D1</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Nodes::NodeValue::getString()</fn>
      <dir>/home/tom/dev/Mogu/src/Types</dir>
      <file>NodeValue.cpp</file>
      <line>53</line>
    </frame>
    <frame>
      <ip>0x4205BD</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::directListeners(Events::BroadcastMessage*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>363</line>
    </frame>
    <frame>
      <ip>0x41F91B</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::submitBroadcast(Events::BroadcastMessage*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>135</line>
    </frame>
    <frame>
      <ip>0x415FCE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::handleVoidSignal(Enums::SignalTriggers::SignalTrigger)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>106</line>
    </frame>
    <frame>
      <ip>0x4160C0</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::clickSlot()</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x41AF81</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::_mfi::mf0&lt;void, Events::EventBindery&gt;::operator()(Events::EventBindery*) const</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>mem_fn_template.hpp</file>
      <line>49</line>
    </frame>
    <frame>
      <ip>0x41AA3D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>void boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt;::operator()&lt;boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;Wt::WMouseEvent&amp;&gt; &gt;(boost::_bi::type&lt;void&gt;, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;&amp;, boost::_bi::list1&lt;Wt::WMouseEvent&amp;&gt;&amp;, int)</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>bind.hpp</file>
      <line>253</line>
    </frame>
    <frame>
      <ip>0x41A599</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>void boost::_bi::bind_t&lt;void, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt; &gt;::operator()&lt;Wt::WMouseEvent&gt;(Wt::WMouseEvent&amp;)</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>bind_template.hpp</file>
      <line>32</line>
    </frame>
    <frame>
      <ip>0x419FBC</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::detail::function::void_function_obj_invoker1&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt; &gt;, void, Wt::WMouseEvent&gt;::invoke(boost::detail::function::function_buffer&amp;, Wt::WMouseEvent)</fn>
      <dir>/usr/include/boost/function</dir>
      <file>function_template.hpp</file>
      <line>153</line>
    </frame>
    <frame>
      <ip>0x520063F</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::signal1&lt;void, Wt::WMouseEvent, boost::last_value&lt;void&gt;, int, std::less&lt;int&gt;, boost::function1&lt;void, Wt::WMouseEvent&gt; &gt;::operator()(Wt::WMouseEvent)</fn>
    </frame>
    <frame>
      <ip>0x5200A01</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::EventSignal&lt;Wt::WMouseEvent&gt;::processDynamic(Wt::JavaScriptEvent const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x52C383E</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::processSignal(Wt::EventSignalBase*, std::string const&amp;, Wt::WebRequest const&amp;, Wt::WebSession::SignalKind)</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x14c44fc8 is 8 bytes inside a block of size 24 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x443011</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Nodes::NodeValue::~NodeValue()</fn>
      <dir>/home/tom/dev/Mogu/src/Types</dir>
      <file>NodeValue.cpp</file>
      <line>25</line>
    </frame>
    <frame>
      <ip>0x41F23A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventNodeProcessor::~EventNodeProcessor()</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>EventNodeProcessor.cpp</file>
      <line>45</line>
    </frame>
    <frame>
      <ip>0x41F27B</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventNodeProcessor::~EventNodeProcessor()</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>EventNodeProcessor.cpp</file>
      <line>48</line>
    </frame>
    <frame>
      <ip>0x41B8D8</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::BroadcastMessage::BroadcastMessage(Goo::Moldable*, Events::EventNodeProcessor*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>BroadcastMessage.cpp</file>
      <line>67</line>
    </frame>
    <frame>
      <ip>0x420C7C</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::generateNewBroadcast(Goo::Moldable*, Events::EventNodeExtractor&amp;, Events::EventNodeProcessor*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>482</line>
    </frame>
    <frame>
      <ip>0x420D8C</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::generateNewBroadcast(Goo::Moldable*, Events::EventNodeExtractor&amp;)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>494</line>
    </frame>
    <frame>
      <ip>0x415FC6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::handleVoidSignal(Enums::SignalTriggers::SignalTrigger)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>106</line>
    </frame>
    <frame>
      <ip>0x4160C0</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::clickSlot()</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x41AF81</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::_mfi::mf0&lt;void, Events::EventBindery&gt;::operator()(Events::EventBindery*) const</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>mem_fn_template.hpp</file>
      <line>49</line>
    </frame>
    <frame>
      <ip>0x41AA3D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>void boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt;::operator()&lt;boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;Wt::WMouseEvent&amp;&gt; &gt;(boost::_bi::type&lt;void&gt;, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;&amp;, boost::_bi::list1&lt;Wt::WMouseEvent&amp;&gt;&amp;, int)</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>bind.hpp</file>
      <line>253</line>
    </frame>
    <frame>
      <ip>0x41A599</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>void boost::_bi::bind_t&lt;void, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt; &gt;::operator()&lt;Wt::WMouseEvent&gt;(Wt::WMouseEvent&amp;)</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>bind_template.hpp</file>
      <line>32</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x45</unique>
  <tid>9</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x4430D5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Nodes::NodeValue::getString()</fn>
      <dir>/home/tom/dev/Mogu/src/Types</dir>
      <file>NodeValue.cpp</file>
      <line>53</line>
    </frame>
    <frame>
      <ip>0x4205BD</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::directListeners(Events::BroadcastMessage*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>363</line>
    </frame>
    <frame>
      <ip>0x41F91B</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::submitBroadcast(Events::BroadcastMessage*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>135</line>
    </frame>
    <frame>
      <ip>0x415FCE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::handleVoidSignal(Enums::SignalTriggers::SignalTrigger)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>106</line>
    </frame>
    <frame>
      <ip>0x4160C0</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::clickSlot()</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x41AF81</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::_mfi::mf0&lt;void, Events::EventBindery&gt;::operator()(Events::EventBindery*) const</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>mem_fn_template.hpp</file>
      <line>49</line>
    </frame>
    <frame>
      <ip>0x41AA3D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>void boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt;::operator()&lt;boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;Wt::WMouseEvent&amp;&gt; &gt;(boost::_bi::type&lt;void&gt;, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;&amp;, boost::_bi::list1&lt;Wt::WMouseEvent&amp;&gt;&amp;, int)</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>bind.hpp</file>
      <line>253</line>
    </frame>
    <frame>
      <ip>0x41A599</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>void boost::_bi::bind_t&lt;void, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt; &gt;::operator()&lt;Wt::WMouseEvent&gt;(Wt::WMouseEvent&amp;)</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>bind_template.hpp</file>
      <line>32</line>
    </frame>
    <frame>
      <ip>0x419FBC</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::detail::function::void_function_obj_invoker1&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt; &gt;, void, Wt::WMouseEvent&gt;::invoke(boost::detail::function::function_buffer&amp;, Wt::WMouseEvent)</fn>
      <dir>/usr/include/boost/function</dir>
      <file>function_template.hpp</file>
      <line>153</line>
    </frame>
    <frame>
      <ip>0x520063F</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::signal1&lt;void, Wt::WMouseEvent, boost::last_value&lt;void&gt;, int, std::less&lt;int&gt;, boost::function1&lt;void, Wt::WMouseEvent&gt; &gt;::operator()(Wt::WMouseEvent)</fn>
    </frame>
    <frame>
      <ip>0x5200A01</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::EventSignal&lt;Wt::WMouseEvent&gt;::processDynamic(Wt::JavaScriptEvent const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x52C383E</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::processSignal(Wt::EventSignalBase*, std::string const&amp;, Wt::WebRequest const&amp;, Wt::WebSession::SignalKind)</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x14c45020 is 0 bytes inside a block of size 16 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x442FD2</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Nodes::NodeValue::~NodeValue()</fn>
      <dir>/home/tom/dev/Mogu/src/Types</dir>
      <file>NodeValue.cpp</file>
      <line>23</line>
    </frame>
    <frame>
      <ip>0x443005</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Nodes::NodeValue::~NodeValue()</fn>
      <dir>/home/tom/dev/Mogu/src/Types</dir>
      <file>NodeValue.cpp</file>
      <line>25</line>
    </frame>
    <frame>
      <ip>0x41F23A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventNodeProcessor::~EventNodeProcessor()</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>EventNodeProcessor.cpp</file>
      <line>45</line>
    </frame>
    <frame>
      <ip>0x41F27B</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventNodeProcessor::~EventNodeProcessor()</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>EventNodeProcessor.cpp</file>
      <line>48</line>
    </frame>
    <frame>
      <ip>0x41B8D8</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::BroadcastMessage::BroadcastMessage(Goo::Moldable*, Events::EventNodeProcessor*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>BroadcastMessage.cpp</file>
      <line>67</line>
    </frame>
    <frame>
      <ip>0x420C7C</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::generateNewBroadcast(Goo::Moldable*, Events::EventNodeExtractor&amp;, Events::EventNodeProcessor*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>482</line>
    </frame>
    <frame>
      <ip>0x420D8C</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::generateNewBroadcast(Goo::Moldable*, Events::EventNodeExtractor&amp;)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>494</line>
    </frame>
    <frame>
      <ip>0x415FC6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::handleVoidSignal(Enums::SignalTriggers::SignalTrigger)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>106</line>
    </frame>
    <frame>
      <ip>0x4160C0</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::clickSlot()</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x41AF81</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::_mfi::mf0&lt;void, Events::EventBindery&gt;::operator()(Events::EventBindery*) const</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>mem_fn_template.hpp</file>
      <line>49</line>
    </frame>
    <frame>
      <ip>0x41AA3D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>void boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt;::operator()&lt;boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;Wt::WMouseEvent&amp;&gt; &gt;(boost::_bi::type&lt;void&gt;, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;&amp;, boost::_bi::list1&lt;Wt::WMouseEvent&amp;&gt;&amp;, int)</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>bind.hpp</file>
      <line>253</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x46</unique>
  <tid>9</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x443128</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Nodes::NodeValue::getInt()</fn>
      <dir>/home/tom/dev/Mogu/src/Types</dir>
      <file>NodeValue.cpp</file>
      <line>59</line>
    </frame>
    <frame>
      <ip>0x420745</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::directListeners(Events::BroadcastMessage*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>391</line>
    </frame>
    <frame>
      <ip>0x41F91B</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::submitBroadcast(Events::BroadcastMessage*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>135</line>
    </frame>
    <frame>
      <ip>0x415FCE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::handleVoidSignal(Enums::SignalTriggers::SignalTrigger)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>106</line>
    </frame>
    <frame>
      <ip>0x4160C0</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::clickSlot()</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x41AF81</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::_mfi::mf0&lt;void, Events::EventBindery&gt;::operator()(Events::EventBindery*) const</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>mem_fn_template.hpp</file>
      <line>49</line>
    </frame>
    <frame>
      <ip>0x41AA3D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>void boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt;::operator()&lt;boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;Wt::WMouseEvent&amp;&gt; &gt;(boost::_bi::type&lt;void&gt;, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;&amp;, boost::_bi::list1&lt;Wt::WMouseEvent&amp;&gt;&amp;, int)</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>bind.hpp</file>
      <line>253</line>
    </frame>
    <frame>
      <ip>0x41A599</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>void boost::_bi::bind_t&lt;void, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt; &gt;::operator()&lt;Wt::WMouseEvent&gt;(Wt::WMouseEvent&amp;)</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>bind_template.hpp</file>
      <line>32</line>
    </frame>
    <frame>
      <ip>0x419FBC</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::detail::function::void_function_obj_invoker1&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt; &gt;, void, Wt::WMouseEvent&gt;::invoke(boost::detail::function::function_buffer&amp;, Wt::WMouseEvent)</fn>
      <dir>/usr/include/boost/function</dir>
      <file>function_template.hpp</file>
      <line>153</line>
    </frame>
    <frame>
      <ip>0x520063F</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::signal1&lt;void, Wt::WMouseEvent, boost::last_value&lt;void&gt;, int, std::less&lt;int&gt;, boost::function1&lt;void, Wt::WMouseEvent&gt; &gt;::operator()(Wt::WMouseEvent)</fn>
    </frame>
    <frame>
      <ip>0x5200A01</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::EventSignal&lt;Wt::WMouseEvent&gt;::processDynamic(Wt::JavaScriptEvent const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x52C383E</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::processSignal(Wt::EventSignalBase*, std::string const&amp;, Wt::WebRequest const&amp;, Wt::WebSession::SignalKind)</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x14c560c8 is 8 bytes inside a block of size 24 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x443011</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Nodes::NodeValue::~NodeValue()</fn>
      <dir>/home/tom/dev/Mogu/src/Types</dir>
      <file>NodeValue.cpp</file>
      <line>25</line>
    </frame>
    <frame>
      <ip>0x41F23A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventNodeProcessor::~EventNodeProcessor()</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>EventNodeProcessor.cpp</file>
      <line>45</line>
    </frame>
    <frame>
      <ip>0x41F27B</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventNodeProcessor::~EventNodeProcessor()</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>EventNodeProcessor.cpp</file>
      <line>48</line>
    </frame>
    <frame>
      <ip>0x41B8D8</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::BroadcastMessage::BroadcastMessage(Goo::Moldable*, Events::EventNodeProcessor*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>BroadcastMessage.cpp</file>
      <line>67</line>
    </frame>
    <frame>
      <ip>0x420C7C</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::generateNewBroadcast(Goo::Moldable*, Events::EventNodeExtractor&amp;, Events::EventNodeProcessor*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>482</line>
    </frame>
    <frame>
      <ip>0x420D8C</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::generateNewBroadcast(Goo::Moldable*, Events::EventNodeExtractor&amp;)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>494</line>
    </frame>
    <frame>
      <ip>0x415FC6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::handleVoidSignal(Enums::SignalTriggers::SignalTrigger)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>106</line>
    </frame>
    <frame>
      <ip>0x4160C0</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::clickSlot()</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x41AF81</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::_mfi::mf0&lt;void, Events::EventBindery&gt;::operator()(Events::EventBindery*) const</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>mem_fn_template.hpp</file>
      <line>49</line>
    </frame>
    <frame>
      <ip>0x41AA3D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>void boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt;::operator()&lt;boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;Wt::WMouseEvent&amp;&gt; &gt;(boost::_bi::type&lt;void&gt;, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;&amp;, boost::_bi::list1&lt;Wt::WMouseEvent&amp;&gt;&amp;, int)</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>bind.hpp</file>
      <line>253</line>
    </frame>
    <frame>
      <ip>0x41A599</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>void boost::_bi::bind_t&lt;void, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt; &gt;::operator()&lt;Wt::WMouseEvent&gt;(Wt::WMouseEvent&amp;)</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>bind_template.hpp</file>
      <line>32</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x47</unique>
  <tid>9</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x44312C</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Nodes::NodeValue::getInt()</fn>
      <dir>/home/tom/dev/Mogu/src/Types</dir>
      <file>NodeValue.cpp</file>
      <line>59</line>
    </frame>
    <frame>
      <ip>0x420745</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::directListeners(Events::BroadcastMessage*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>391</line>
    </frame>
    <frame>
      <ip>0x41F91B</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::submitBroadcast(Events::BroadcastMessage*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>135</line>
    </frame>
    <frame>
      <ip>0x415FCE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::handleVoidSignal(Enums::SignalTriggers::SignalTrigger)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>106</line>
    </frame>
    <frame>
      <ip>0x4160C0</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::clickSlot()</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x41AF81</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::_mfi::mf0&lt;void, Events::EventBindery&gt;::operator()(Events::EventBindery*) const</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>mem_fn_template.hpp</file>
      <line>49</line>
    </frame>
    <frame>
      <ip>0x41AA3D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>void boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt;::operator()&lt;boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;Wt::WMouseEvent&amp;&gt; &gt;(boost::_bi::type&lt;void&gt;, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;&amp;, boost::_bi::list1&lt;Wt::WMouseEvent&amp;&gt;&amp;, int)</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>bind.hpp</file>
      <line>253</line>
    </frame>
    <frame>
      <ip>0x41A599</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>void boost::_bi::bind_t&lt;void, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt; &gt;::operator()&lt;Wt::WMouseEvent&gt;(Wt::WMouseEvent&amp;)</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>bind_template.hpp</file>
      <line>32</line>
    </frame>
    <frame>
      <ip>0x419FBC</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::detail::function::void_function_obj_invoker1&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt; &gt;, void, Wt::WMouseEvent&gt;::invoke(boost::detail::function::function_buffer&amp;, Wt::WMouseEvent)</fn>
      <dir>/usr/include/boost/function</dir>
      <file>function_template.hpp</file>
      <line>153</line>
    </frame>
    <frame>
      <ip>0x520063F</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::signal1&lt;void, Wt::WMouseEvent, boost::last_value&lt;void&gt;, int, std::less&lt;int&gt;, boost::function1&lt;void, Wt::WMouseEvent&gt; &gt;::operator()(Wt::WMouseEvent)</fn>
    </frame>
    <frame>
      <ip>0x5200A01</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::EventSignal&lt;Wt::WMouseEvent&gt;::processDynamic(Wt::JavaScriptEvent const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x52C383E</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::processSignal(Wt::EventSignalBase*, std::string const&amp;, Wt::WebRequest const&amp;, Wt::WebSession::SignalKind)</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x14c56128 is 8 bytes inside a block of size 16 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x442FD2</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Nodes::NodeValue::~NodeValue()</fn>
      <dir>/home/tom/dev/Mogu/src/Types</dir>
      <file>NodeValue.cpp</file>
      <line>23</line>
    </frame>
    <frame>
      <ip>0x443005</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Nodes::NodeValue::~NodeValue()</fn>
      <dir>/home/tom/dev/Mogu/src/Types</dir>
      <file>NodeValue.cpp</file>
      <line>25</line>
    </frame>
    <frame>
      <ip>0x41F23A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventNodeProcessor::~EventNodeProcessor()</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>EventNodeProcessor.cpp</file>
      <line>45</line>
    </frame>
    <frame>
      <ip>0x41F27B</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventNodeProcessor::~EventNodeProcessor()</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>EventNodeProcessor.cpp</file>
      <line>48</line>
    </frame>
    <frame>
      <ip>0x41B8D8</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::BroadcastMessage::BroadcastMessage(Goo::Moldable*, Events::EventNodeProcessor*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>BroadcastMessage.cpp</file>
      <line>67</line>
    </frame>
    <frame>
      <ip>0x420C7C</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::generateNewBroadcast(Goo::Moldable*, Events::EventNodeExtractor&amp;, Events::EventNodeProcessor*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>482</line>
    </frame>
    <frame>
      <ip>0x420D8C</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::generateNewBroadcast(Goo::Moldable*, Events::EventNodeExtractor&amp;)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>494</line>
    </frame>
    <frame>
      <ip>0x415FC6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::handleVoidSignal(Enums::SignalTriggers::SignalTrigger)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>106</line>
    </frame>
    <frame>
      <ip>0x4160C0</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::clickSlot()</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x41AF81</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::_mfi::mf0&lt;void, Events::EventBindery&gt;::operator()(Events::EventBindery*) const</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>mem_fn_template.hpp</file>
      <line>49</line>
    </frame>
    <frame>
      <ip>0x41AA3D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>void boost::_bi::list1&lt;boost::_bi::value&lt;Events::EventBindery*&gt; &gt;::operator()&lt;boost::_mfi::mf0&lt;void, Events::EventBindery&gt;, boost::_bi::list1&lt;Wt::WMouseEvent&amp;&gt; &gt;(boost::_bi::type&lt;void&gt;, boost::_mfi::mf0&lt;void, Events::EventBindery&gt;&amp;, boost::_bi::list1&lt;Wt::WMouseEvent&amp;&gt;&amp;, int)</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>bind.hpp</file>
      <line>253</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4a</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x63CC306</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::compare(std::string const&amp;) const</fn>
    </frame>
    <frame>
      <ip>0x411C72</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>bool std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;(std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>basic_string.h</file>
      <line>2512</line>
    </frame>
    <frame>
      <ip>0x411050</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::less&lt;std::string&gt;::operator()(std::string const&amp;, std::string const&amp;) const</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_function.h</file>
      <line>236</line>
    </frame>
    <frame>
      <ip>0x411B5D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_lower_bound(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, std::string const&amp;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1090</line>
    </frame>
    <frame>
      <ip>0x410F36</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::find(std::string const&amp;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1536</line>
    </frame>
    <frame>
      <ip>0x4105C0</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::find(std::string const&amp;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>742</line>
    </frame>
    <frame>
      <ip>0x40F429</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::widgetIsRegistered(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>70</line>
    </frame>
    <frame>
      <ip>0x40F4C8</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>82</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x13deed50 is 32 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
    <frame>
      <ip>0x40FD9D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::detail::sp_counted_base::release()</fn>
      <dir>/usr/include/boost/smart_ptr/detail</dir>
      <file>sp_counted_base_gcc_x86.hpp</file>
      <line>145</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4b</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x63CC30C</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::compare(std::string const&amp;) const</fn>
    </frame>
    <frame>
      <ip>0x411C72</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>bool std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;(std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>basic_string.h</file>
      <line>2512</line>
    </frame>
    <frame>
      <ip>0x411050</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::less&lt;std::string&gt;::operator()(std::string const&amp;, std::string const&amp;) const</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_function.h</file>
      <line>236</line>
    </frame>
    <frame>
      <ip>0x411B5D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_lower_bound(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, std::string const&amp;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1090</line>
    </frame>
    <frame>
      <ip>0x410F36</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::find(std::string const&amp;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1536</line>
    </frame>
    <frame>
      <ip>0x4105C0</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::find(std::string const&amp;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>742</line>
    </frame>
    <frame>
      <ip>0x40F429</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::widgetIsRegistered(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>70</line>
    </frame>
    <frame>
      <ip>0x40F4C8</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>82</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x13deecd0 is 0 bytes inside a block of size 32 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x63CC88F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string()</fn>
    </frame>
    <frame>
      <ip>0x410617</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::pair&lt;std::string const, Goo::Moldable*&gt;::~pair()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_pair.h</file>
      <line>87</line>
    </frame>
    <frame>
      <ip>0x412907</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;::destroy(std::pair&lt;std::string const, Goo::Moldable*&gt;*)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>118</line>
    </frame>
    <frame>
      <ip>0x41162F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>394</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4c</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 1</what>
  <stack>
    <frame>
      <ip>0x4C2DCAB</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>bcmp</fn>
    </frame>
    <frame>
      <ip>0x63CC322</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::compare(std::string const&amp;) const</fn>
    </frame>
    <frame>
      <ip>0x411C72</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>bool std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;(std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>basic_string.h</file>
      <line>2512</line>
    </frame>
    <frame>
      <ip>0x411050</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::less&lt;std::string&gt;::operator()(std::string const&amp;, std::string const&amp;) const</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_function.h</file>
      <line>236</line>
    </frame>
    <frame>
      <ip>0x411B5D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_lower_bound(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, std::string const&amp;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1090</line>
    </frame>
    <frame>
      <ip>0x410F36</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::find(std::string const&amp;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1536</line>
    </frame>
    <frame>
      <ip>0x4105C0</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::find(std::string const&amp;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>742</line>
    </frame>
    <frame>
      <ip>0x40F429</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::widgetIsRegistered(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>70</line>
    </frame>
    <frame>
      <ip>0x40F4C8</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>82</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
  </stack>
  <auxwhat>Address 0x13deece8 is 24 bytes inside a block of size 32 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x63CC88F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string()</fn>
    </frame>
    <frame>
      <ip>0x410617</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::pair&lt;std::string const, Goo::Moldable*&gt;::~pair()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_pair.h</file>
      <line>87</line>
    </frame>
    <frame>
      <ip>0x412907</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;::destroy(std::pair&lt;std::string const, Goo::Moldable*&gt;*)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>118</line>
    </frame>
    <frame>
      <ip>0x41162F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>394</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4d</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x4115D2</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_S_right(std::_Rb_tree_node_base*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>528</line>
    </frame>
    <frame>
      <ip>0x411B8A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_lower_bound(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, std::string const&amp;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1093</line>
    </frame>
    <frame>
      <ip>0x410F36</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::find(std::string const&amp;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1536</line>
    </frame>
    <frame>
      <ip>0x4105C0</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::find(std::string const&amp;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>742</line>
    </frame>
    <frame>
      <ip>0x40F429</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::widgetIsRegistered(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>70</line>
    </frame>
    <frame>
      <ip>0x40F4C8</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>82</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
    <frame>
      <ip>0x427281</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>80</line>
    </frame>
  </stack>
  <auxwhat>Address 0x13deed48 is 24 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
    <frame>
      <ip>0x40FD9D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::detail::sp_counted_base::release()</fn>
      <dir>/usr/include/boost/smart_ptr/detail</dir>
      <file>sp_counted_base_gcc_x86.hpp</file>
      <line>145</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x55</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 1</what>
  <stack>
    <frame>
      <ip>0x4C2DCC0</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>bcmp</fn>
    </frame>
    <frame>
      <ip>0x63CC322</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::compare(std::string const&amp;) const</fn>
    </frame>
    <frame>
      <ip>0x411C72</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>bool std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;(std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>basic_string.h</file>
      <line>2512</line>
    </frame>
    <frame>
      <ip>0x411050</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::less&lt;std::string&gt;::operator()(std::string const&amp;, std::string const&amp;) const</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_function.h</file>
      <line>236</line>
    </frame>
    <frame>
      <ip>0x411B5D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_lower_bound(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, std::string const&amp;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1090</line>
    </frame>
    <frame>
      <ip>0x410F36</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::find(std::string const&amp;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1536</line>
    </frame>
    <frame>
      <ip>0x4105C0</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::find(std::string const&amp;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>742</line>
    </frame>
    <frame>
      <ip>0x40F429</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::widgetIsRegistered(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>70</line>
    </frame>
    <frame>
      <ip>0x40F4C8</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>82</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
  </stack>
  <auxwhat>Address 0xe47f829 is 25 bytes inside a block of size 28 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x63CC88F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string()</fn>
    </frame>
    <frame>
      <ip>0x410617</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::pair&lt;std::string const, Goo::Moldable*&gt;::~pair()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_pair.h</file>
      <line>87</line>
    </frame>
    <frame>
      <ip>0x412907</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;::destroy(std::pair&lt;std::string const, Goo::Moldable*&gt;*)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>118</line>
    </frame>
    <frame>
      <ip>0x41162F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>394</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x57</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x4115E4</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_S_left(std::_Rb_tree_node_base*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>520</line>
    </frame>
    <frame>
      <ip>0x411B78</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_lower_bound(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, std::string const&amp;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1091</line>
    </frame>
    <frame>
      <ip>0x410F36</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::find(std::string const&amp;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1536</line>
    </frame>
    <frame>
      <ip>0x4105C0</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::find(std::string const&amp;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>742</line>
    </frame>
    <frame>
      <ip>0x40F429</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::widgetIsRegistered(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>70</line>
    </frame>
    <frame>
      <ip>0x40F4C8</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>82</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
    <frame>
      <ip>0x427281</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>80</line>
    </frame>
  </stack>
  <auxwhat>Address 0xe47f880 is 16 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x58</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x63CC309</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::compare(std::string const&amp;) const</fn>
    </frame>
    <frame>
      <ip>0x411C72</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>bool std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;(std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>basic_string.h</file>
      <line>2512</line>
    </frame>
    <frame>
      <ip>0x411050</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::less&lt;std::string&gt;::operator()(std::string const&amp;, std::string const&amp;) const</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_function.h</file>
      <line>236</line>
    </frame>
    <frame>
      <ip>0x410F83</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::find(std::string const&amp;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1539</line>
    </frame>
    <frame>
      <ip>0x4105C0</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::find(std::string const&amp;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>742</line>
    </frame>
    <frame>
      <ip>0x40F429</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::widgetIsRegistered(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>70</line>
    </frame>
    <frame>
      <ip>0x40F4C8</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>82</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
  </stack>
  <auxwhat>Address 0xe47f890 is 32 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x59</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x63CC310</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::compare(std::string const&amp;) const</fn>
    </frame>
    <frame>
      <ip>0x411C72</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>bool std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;(std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>basic_string.h</file>
      <line>2512</line>
    </frame>
    <frame>
      <ip>0x411050</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::less&lt;std::string&gt;::operator()(std::string const&amp;, std::string const&amp;) const</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_function.h</file>
      <line>236</line>
    </frame>
    <frame>
      <ip>0x410F83</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::find(std::string const&amp;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1539</line>
    </frame>
    <frame>
      <ip>0x4105C0</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::find(std::string const&amp;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>742</line>
    </frame>
    <frame>
      <ip>0x40F429</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::widgetIsRegistered(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>70</line>
    </frame>
    <frame>
      <ip>0x40F4C8</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>82</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
  </stack>
  <auxwhat>Address 0xe47f810 is 0 bytes inside a block of size 28 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x63CC88F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string()</fn>
    </frame>
    <frame>
      <ip>0x410617</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::pair&lt;std::string const, Goo::Moldable*&gt;::~pair()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_pair.h</file>
      <line>87</line>
    </frame>
    <frame>
      <ip>0x412907</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;::destroy(std::pair&lt;std::string const, Goo::Moldable*&gt;*)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>118</line>
    </frame>
    <frame>
      <ip>0x41162F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>394</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x5a</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 1</what>
  <stack>
    <frame>
      <ip>0x4C2DCAE</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>bcmp</fn>
    </frame>
    <frame>
      <ip>0x63CC322</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::compare(std::string const&amp;) const</fn>
    </frame>
    <frame>
      <ip>0x411C72</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>bool std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;(std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>basic_string.h</file>
      <line>2512</line>
    </frame>
    <frame>
      <ip>0x411050</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::less&lt;std::string&gt;::operator()(std::string const&amp;, std::string const&amp;) const</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_function.h</file>
      <line>236</line>
    </frame>
    <frame>
      <ip>0x410F83</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::find(std::string const&amp;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1539</line>
    </frame>
    <frame>
      <ip>0x4105C0</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::find(std::string const&amp;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>742</line>
    </frame>
    <frame>
      <ip>0x40F429</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::widgetIsRegistered(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>70</line>
    </frame>
    <frame>
      <ip>0x40F4C8</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>82</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xe47f828 is 24 bytes inside a block of size 28 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x63CC88F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string()</fn>
    </frame>
    <frame>
      <ip>0x410617</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::pair&lt;std::string const, Goo::Moldable*&gt;::~pair()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_pair.h</file>
      <line>87</line>
    </frame>
    <frame>
      <ip>0x412907</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;::destroy(std::pair&lt;std::string const, Goo::Moldable*&gt;*)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>118</line>
    </frame>
    <frame>
      <ip>0x41162F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>394</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x5b</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 1</what>
  <stack>
    <frame>
      <ip>0x4C2DCC6</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>bcmp</fn>
    </frame>
    <frame>
      <ip>0x63CC322</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::compare(std::string const&amp;) const</fn>
    </frame>
    <frame>
      <ip>0x411C72</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>bool std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;(std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>basic_string.h</file>
      <line>2512</line>
    </frame>
    <frame>
      <ip>0x411050</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::less&lt;std::string&gt;::operator()(std::string const&amp;, std::string const&amp;) const</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_function.h</file>
      <line>236</line>
    </frame>
    <frame>
      <ip>0x410F83</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::find(std::string const&amp;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1539</line>
    </frame>
    <frame>
      <ip>0x4105C0</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::find(std::string const&amp;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>742</line>
    </frame>
    <frame>
      <ip>0x40F429</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::widgetIsRegistered(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>70</line>
    </frame>
    <frame>
      <ip>0x40F4C8</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>82</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xe47f829 is 25 bytes inside a block of size 28 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x63CC88F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string()</fn>
    </frame>
    <frame>
      <ip>0x410617</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::pair&lt;std::string const, Goo::Moldable*&gt;::~pair()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_pair.h</file>
      <line>87</line>
    </frame>
    <frame>
      <ip>0x412907</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;::destroy(std::pair&lt;std::string const, Goo::Moldable*&gt;*)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>118</line>
    </frame>
    <frame>
      <ip>0x41162F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>394</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x70</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x638500D</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
    <frame>
      <ip>0x427281</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>80</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xe47f880 is 16 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x71</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x63851B0</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
    <frame>
      <ip>0x427281</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>80</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xe47f888 is 24 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x72</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x63851BA</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
    <frame>
      <ip>0x427281</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>80</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xe47f878 is 8 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x73</unique>
  <tid>4</tid>
  <kind>InvalidWrite</kind>
  <what>Invalid write of size 8</what>
  <stack>
    <frame>
      <ip>0x63851C0</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
    <frame>
      <ip>0x427281</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>80</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xe5e7158 is 8 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x74</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x63851CE</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
    <frame>
      <ip>0x427281</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>80</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xe47f878 is 8 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x75</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x63851D2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
    <frame>
      <ip>0x427281</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>80</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xe48f9a0 is 16 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x76</unique>
  <tid>4</tid>
  <kind>InvalidWrite</kind>
  <what>Invalid write of size 8</what>
  <stack>
    <frame>
      <ip>0x63851DC</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
    <frame>
      <ip>0x427281</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>80</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xe48f9a8 is 24 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x77</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x63851F4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
    <frame>
      <ip>0x427281</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>80</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xe47f870 is 0 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x78</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x63850C7</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
    <frame>
      <ip>0x427281</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>80</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xe5e7150 is 0 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x79</unique>
  <tid>4</tid>
  <kind>InvalidWrite</kind>
  <what>Invalid write of size 4</what>
  <stack>
    <frame>
      <ip>0x63850CE</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
    <frame>
      <ip>0x427281</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>80</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xe5e7150 is 0 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x7a</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x63CC870</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string()</fn>
    </frame>
    <frame>
      <ip>0x410617</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::pair&lt;std::string const, Goo::Moldable*&gt;::~pair()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_pair.h</file>
      <line>87</line>
    </frame>
    <frame>
      <ip>0x412907</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;::destroy(std::pair&lt;std::string const, Goo::Moldable*&gt;*)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>118</line>
    </frame>
    <frame>
      <ip>0x41162F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>394</line>
    </frame>
    <frame>
      <ip>0x41209F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1490</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xe47f890 is 32 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x7b</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x63CC837</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
    </frame>
    <frame>
      <ip>0x63CC88F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string()</fn>
    </frame>
    <frame>
      <ip>0x410617</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::pair&lt;std::string const, Goo::Moldable*&gt;::~pair()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_pair.h</file>
      <line>87</line>
    </frame>
    <frame>
      <ip>0x412907</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;::destroy(std::pair&lt;std::string const, Goo::Moldable*&gt;*)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>118</line>
    </frame>
    <frame>
      <ip>0x41162F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>394</line>
    </frame>
    <frame>
      <ip>0x41209F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1490</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
  </stack>
  <auxwhat>Address 0xe47f820 is 16 bytes inside a block of size 28 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x63CC88F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string()</fn>
    </frame>
    <frame>
      <ip>0x410617</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::pair&lt;std::string const, Goo::Moldable*&gt;::~pair()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_pair.h</file>
      <line>87</line>
    </frame>
    <frame>
      <ip>0x412907</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;::destroy(std::pair&lt;std::string const, Goo::Moldable*&gt;*)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>118</line>
    </frame>
    <frame>
      <ip>0x41162F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>394</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x7e</unique>
  <tid>4</tid>
  <kind>InvalidFree</kind>
  <what>Invalid free() / delete / delete[] / realloc()</what>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x63CC88F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string()</fn>
    </frame>
    <frame>
      <ip>0x410617</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::pair&lt;std::string const, Goo::Moldable*&gt;::~pair()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_pair.h</file>
      <line>87</line>
    </frame>
    <frame>
      <ip>0x412907</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;::destroy(std::pair&lt;std::string const, Goo::Moldable*&gt;*)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>118</line>
    </frame>
    <frame>
      <ip>0x41162F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>394</line>
    </frame>
    <frame>
      <ip>0x41209F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1490</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
  </stack>
  <auxwhat>Address 0xe47f810 is 0 bytes inside a block of size 28 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x63CC88F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string()</fn>
    </frame>
    <frame>
      <ip>0x410617</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::pair&lt;std::string const, Goo::Moldable*&gt;::~pair()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_pair.h</file>
      <line>87</line>
    </frame>
    <frame>
      <ip>0x412907</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;::destroy(std::pair&lt;std::string const, Goo::Moldable*&gt;*)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>118</line>
    </frame>
    <frame>
      <ip>0x41162F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>394</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x7f</unique>
  <tid>4</tid>
  <kind>InvalidFree</kind>
  <what>Invalid free() / delete / delete[] / realloc()</what>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x41209F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1490</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xe47f870 is 0 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0xbf</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x638501A</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
  </stack>
  <auxwhat>Address 0xe48f9a8 is 24 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0xc0</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x6385033</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
  </stack>
  <auxwhat>Address 0xe5e7160 is 16 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0xc1</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x638503F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
  </stack>
  <auxwhat>Address 0xe5e7168 is 24 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0xc2</unique>
  <tid>4</tid>
  <kind>InvalidWrite</kind>
  <what>Invalid write of size 8</what>
  <stack>
    <frame>
      <ip>0x638504C</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
  </stack>
  <auxwhat>Address 0xe627608 is 8 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0xc3</unique>
  <tid>4</tid>
  <kind>InvalidWrite</kind>
  <what>Invalid write of size 8</what>
  <stack>
    <frame>
      <ip>0x6385050</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
  </stack>
  <auxwhat>Address 0xe5e7160 is 16 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0xc4</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x638508A</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
  </stack>
  <auxwhat>Address 0xe48f998 is 8 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0xc5</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x638508E</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
  </stack>
  <auxwhat>Address 0x13deed40 is 16 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
    <frame>
      <ip>0x40FD9D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::detail::sp_counted_base::release()</fn>
      <dir>/usr/include/boost/smart_ptr/detail</dir>
      <file>sp_counted_base_gcc_x86.hpp</file>
      <line>145</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0xc6</unique>
  <tid>4</tid>
  <kind>InvalidWrite</kind>
  <what>Invalid write of size 8</what>
  <stack>
    <frame>
      <ip>0x6385098</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
  </stack>
  <auxwhat>Address 0x13deed48 is 24 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
    <frame>
      <ip>0x40FD9D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::detail::sp_counted_base::release()</fn>
      <dir>/usr/include/boost/smart_ptr/detail</dir>
      <file>sp_counted_base_gcc_x86.hpp</file>
      <line>145</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0xc7</unique>
  <tid>4</tid>
  <kind>InvalidWrite</kind>
  <what>Invalid write of size 8</what>
  <stack>
    <frame>
      <ip>0x638509C</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
  </stack>
  <auxwhat>Address 0xe5e7158 is 8 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0xc8</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x63850A0</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
  </stack>
  <auxwhat>Address 0xe48f990 is 0 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0xc9</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x63850A2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
  </stack>
  <auxwhat>Address 0xe5e7150 is 0 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0xca</unique>
  <tid>4</tid>
  <kind>InvalidWrite</kind>
  <what>Invalid write of size 4</what>
  <stack>
    <frame>
      <ip>0x63850A5</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
  </stack>
  <auxwhat>Address 0xe5e7150 is 0 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0xcb</unique>
  <tid>4</tid>
  <kind>InvalidWrite</kind>
  <what>Invalid write of size 4</what>
  <stack>
    <frame>
      <ip>0x63850AB</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
  </stack>
  <auxwhat>Address 0xe48f990 is 0 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0xcc</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x63850E8</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
  </stack>
  <auxwhat>Address 0xe5e7160 is 16 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0xcd</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x63850F1</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
  </stack>
  <auxwhat>Address 0xe627600 is 0 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0xce</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x63850F9</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
  </stack>
  <auxwhat>Address 0xe627618 is 24 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0xcf</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x638510B</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
  </stack>
  <auxwhat>Address 0xe627610 is 16 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0xd0</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x638511D</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
  </stack>
  <auxwhat>Address 0xe5e7158 is 8 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0xd1</unique>
  <tid>4</tid>
  <kind>InvalidWrite</kind>
  <what>Invalid write of size 4</what>
  <stack>
    <frame>
      <ip>0x6385121</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
  </stack>
  <auxwhat>Address 0xe627600 is 0 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x12a</unique>
  <tid>4</tid>
  <kind>InvalidWrite</kind>
  <what>Invalid write of size 8</what>
  <stack>
    <frame>
      <ip>0x6385356</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
  </stack>
  <auxwhat>Address 0xe665d30 is 16 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
    <frame>
      <ip>0x40FD9D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::detail::sp_counted_base::release()</fn>
      <dir>/usr/include/boost/smart_ptr/detail</dir>
      <file>sp_counted_base_gcc_x86.hpp</file>
      <line>145</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x12b</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x6385325</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
  </stack>
  <auxwhat>Address 0xe5d5818 is 24 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
    <frame>
      <ip>0x40FD9D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::detail::sp_counted_base::release()</fn>
      <dir>/usr/include/boost/smart_ptr/detail</dir>
      <file>sp_counted_base_gcc_x86.hpp</file>
      <line>145</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x12c</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x638533B</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
  </stack>
  <auxwhat>Address 0x1401e4f0 is 16 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x173</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x63852FB</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
  </stack>
  <auxwhat>Address 0xe5e7160 is 16 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x174</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x6385313</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
  </stack>
  <auxwhat>Address 0xe627618 is 24 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1b3</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x638536C</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
  </stack>
  <auxwhat>Address 0xe627608 is 8 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1b4</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x6385377</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
  </stack>
  <auxwhat>Address 0xe627600 is 0 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1b7</unique>
  <tid>4</tid>
  <kind>InvalidWrite</kind>
  <what>Invalid write of size 4</what>
  <stack>
    <frame>
      <ip>0x6385130</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
  </stack>
  <auxwhat>Address 0xe665d20 is 0 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
    <frame>
      <ip>0x40FD9D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::detail::sp_counted_base::release()</fn>
      <dir>/usr/include/boost/smart_ptr/detail</dir>
      <file>sp_counted_base_gcc_x86.hpp</file>
      <line>145</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1b8</unique>
  <tid>4</tid>
  <kind>InvalidWrite</kind>
  <what>Invalid write of size 4</what>
  <stack>
    <frame>
      <ip>0x6385139</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
  </stack>
  <auxwhat>Address 0x13deed30 is 0 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
    <frame>
      <ip>0x40FD9D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::detail::sp_counted_base::release()</fn>
      <dir>/usr/include/boost/smart_ptr/detail</dir>
      <file>sp_counted_base_gcc_x86.hpp</file>
      <line>145</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1b9</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x6384D00</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
    </frame>
    <frame>
      <ip>0x6385147</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x13deed40 is 16 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
    <frame>
      <ip>0x40FD9D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::detail::sp_counted_base::release()</fn>
      <dir>/usr/include/boost/smart_ptr/detail</dir>
      <file>sp_counted_base_gcc_x86.hpp</file>
      <line>145</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1ba</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x6384D04</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
    </frame>
    <frame>
      <ip>0x6385147</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xe665d38 is 24 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
    <frame>
      <ip>0x40FD9D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::detail::sp_counted_base::release()</fn>
      <dir>/usr/include/boost/smart_ptr/detail</dir>
      <file>sp_counted_base_gcc_x86.hpp</file>
      <line>145</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1bb</unique>
  <tid>4</tid>
  <kind>InvalidWrite</kind>
  <what>Invalid write of size 8</what>
  <stack>
    <frame>
      <ip>0x6384D0B</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
    </frame>
    <frame>
      <ip>0x6385147</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x13deed40 is 16 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
    <frame>
      <ip>0x40FD9D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::detail::sp_counted_base::release()</fn>
      <dir>/usr/include/boost/smart_ptr/detail</dir>
      <file>sp_counted_base_gcc_x86.hpp</file>
      <line>145</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1bc</unique>
  <tid>4</tid>
  <kind>InvalidWrite</kind>
  <what>Invalid write of size 8</what>
  <stack>
    <frame>
      <ip>0x6384D11</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
    </frame>
    <frame>
      <ip>0x6385147</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x1405d1e8 is 8 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1bd</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x6384D15</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
    </frame>
    <frame>
      <ip>0x6385147</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x13deed38 is 8 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
    <frame>
      <ip>0x40FD9D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::detail::sp_counted_base::release()</fn>
      <dir>/usr/include/boost/smart_ptr/detail</dir>
      <file>sp_counted_base_gcc_x86.hpp</file>
      <line>145</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1be</unique>
  <tid>4</tid>
  <kind>InvalidWrite</kind>
  <what>Invalid write of size 8</what>
  <stack>
    <frame>
      <ip>0x6384D19</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
    </frame>
    <frame>
      <ip>0x6385147</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xe665d28 is 8 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
    <frame>
      <ip>0x40FD9D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::detail::sp_counted_base::release()</fn>
      <dir>/usr/include/boost/smart_ptr/detail</dir>
      <file>sp_counted_base_gcc_x86.hpp</file>
      <line>145</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1bf</unique>
  <tid>4</tid>
  <kind>InvalidWrite</kind>
  <what>Invalid write of size 8</what>
  <stack>
    <frame>
      <ip>0x6384D43</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
    </frame>
    <frame>
      <ip>0x6385147</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xe665d38 is 24 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
    <frame>
      <ip>0x40FD9D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::detail::sp_counted_base::release()</fn>
      <dir>/usr/include/boost/smart_ptr/detail</dir>
      <file>sp_counted_base_gcc_x86.hpp</file>
      <line>145</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1c0</unique>
  <tid>4</tid>
  <kind>InvalidWrite</kind>
  <what>Invalid write of size 8</what>
  <stack>
    <frame>
      <ip>0x6384D47</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
    </frame>
    <frame>
      <ip>0x6385147</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x13deed38 is 8 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
    <frame>
      <ip>0x40FD9D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::detail::sp_counted_base::release()</fn>
      <dir>/usr/include/boost/smart_ptr/detail</dir>
      <file>sp_counted_base_gcc_x86.hpp</file>
      <line>145</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1c1</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x6385148</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
  </stack>
  <auxwhat>Address 0x13deed40 is 16 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
    <frame>
      <ip>0x40FD9D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::detail::sp_counted_base::release()</fn>
      <dir>/usr/include/boost/smart_ptr/detail</dir>
      <file>sp_counted_base_gcc_x86.hpp</file>
      <line>145</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1c3</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x6385102</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
  </stack>
  <auxwhat>Address 0xe676610 is 0 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1c4</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x6385230</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
  </stack>
  <auxwhat>Address 0x1405d1f0 is 16 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1c5</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x6385239</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
  </stack>
  <auxwhat>Address 0x13fdf5a0 is 0 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1c6</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x6385200</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
  </stack>
  <auxwhat>Address 0x13deed30 is 0 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
    <frame>
      <ip>0x40FD9D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::detail::sp_counted_base::release()</fn>
      <dir>/usr/include/boost/smart_ptr/detail</dir>
      <file>sp_counted_base_gcc_x86.hpp</file>
      <line>145</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1c7</unique>
  <tid>4</tid>
  <kind>InvalidWrite</kind>
  <what>Invalid write of size 4</what>
  <stack>
    <frame>
      <ip>0x6385203</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
  </stack>
  <auxwhat>Address 0x1405d1e0 is 0 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1c8</unique>
  <tid>4</tid>
  <kind>InvalidWrite</kind>
  <what>Invalid write of size 4</what>
  <stack>
    <frame>
      <ip>0x6385205</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
  </stack>
  <auxwhat>Address 0x13deed30 is 0 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
    <frame>
      <ip>0x40FD9D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::detail::sp_counted_base::release()</fn>
      <dir>/usr/include/boost/smart_ptr/detail</dir>
      <file>sp_counted_base_gcc_x86.hpp</file>
      <line>145</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1c9</unique>
  <tid>4</tid>
  <kind>InvalidWrite</kind>
  <what>Invalid write of size 4</what>
  <stack>
    <frame>
      <ip>0x638520C</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
  </stack>
  <auxwhat>Address 0x13fdf5a0 is 0 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1ca</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x6384D00</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
    </frame>
    <frame>
      <ip>0x638521C</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x13deed40 is 16 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
    <frame>
      <ip>0x40FD9D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::detail::sp_counted_base::release()</fn>
      <dir>/usr/include/boost/smart_ptr/detail</dir>
      <file>sp_counted_base_gcc_x86.hpp</file>
      <line>145</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1cb</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x6384D04</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
    </frame>
    <frame>
      <ip>0x638521C</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x1405d1f8 is 24 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1cc</unique>
  <tid>4</tid>
  <kind>InvalidWrite</kind>
  <what>Invalid write of size 8</what>
  <stack>
    <frame>
      <ip>0x6384D0B</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
    </frame>
    <frame>
      <ip>0x638521C</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x13deed40 is 16 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
    <frame>
      <ip>0x40FD9D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::detail::sp_counted_base::release()</fn>
      <dir>/usr/include/boost/smart_ptr/detail</dir>
      <file>sp_counted_base_gcc_x86.hpp</file>
      <line>145</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1cd</unique>
  <tid>4</tid>
  <kind>InvalidWrite</kind>
  <what>Invalid write of size 8</what>
  <stack>
    <frame>
      <ip>0x6384D11</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
    </frame>
    <frame>
      <ip>0x638521C</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xe676618 is 8 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1ce</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x6384D15</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
    </frame>
    <frame>
      <ip>0x638521C</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x13deed38 is 8 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
    <frame>
      <ip>0x40FD9D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::detail::sp_counted_base::release()</fn>
      <dir>/usr/include/boost/smart_ptr/detail</dir>
      <file>sp_counted_base_gcc_x86.hpp</file>
      <line>145</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1cf</unique>
  <tid>4</tid>
  <kind>InvalidWrite</kind>
  <what>Invalid write of size 8</what>
  <stack>
    <frame>
      <ip>0x6384D19</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
    </frame>
    <frame>
      <ip>0x638521C</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x1405d1e8 is 8 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1d0</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x6384D22</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
    </frame>
    <frame>
      <ip>0x638521C</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x13deed38 is 8 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
    <frame>
      <ip>0x40FD9D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::detail::sp_counted_base::release()</fn>
      <dir>/usr/include/boost/smart_ptr/detail</dir>
      <file>sp_counted_base_gcc_x86.hpp</file>
      <line>145</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1d1</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x6384D26</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
    </frame>
    <frame>
      <ip>0x638521C</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xe665d38 is 24 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
    <frame>
      <ip>0x40FD9D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::detail::sp_counted_base::release()</fn>
      <dir>/usr/include/boost/smart_ptr/detail</dir>
      <file>sp_counted_base_gcc_x86.hpp</file>
      <line>145</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1d2</unique>
  <tid>4</tid>
  <kind>InvalidWrite</kind>
  <what>Invalid write of size 8</what>
  <stack>
    <frame>
      <ip>0x6384D50</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
    </frame>
    <frame>
      <ip>0x638521C</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xe665d38 is 24 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
    <frame>
      <ip>0x40FD9D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::detail::sp_counted_base::release()</fn>
      <dir>/usr/include/boost/smart_ptr/detail</dir>
      <file>sp_counted_base_gcc_x86.hpp</file>
      <line>145</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1d3</unique>
  <tid>4</tid>
  <kind>InvalidWrite</kind>
  <what>Invalid write of size 8</what>
  <stack>
    <frame>
      <ip>0x6384D30</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
    </frame>
    <frame>
      <ip>0x638521C</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x1405d1f8 is 24 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1d4</unique>
  <tid>4</tid>
  <kind>InvalidWrite</kind>
  <what>Invalid write of size 8</what>
  <stack>
    <frame>
      <ip>0x6384D34</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
    </frame>
    <frame>
      <ip>0x638521C</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x13deed38 is 8 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
    <frame>
      <ip>0x40FD9D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::detail::sp_counted_base::release()</fn>
      <dir>/usr/include/boost/smart_ptr/detail</dir>
      <file>sp_counted_base_gcc_x86.hpp</file>
      <line>145</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x210</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x638505D</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
  </stack>
  <auxwhat>Address 0x13fdf5a8 is 8 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x211</unique>
  <tid>4</tid>
  <kind>InvalidWrite</kind>
  <what>Invalid write of size 8</what>
  <stack>
    <frame>
      <ip>0x6385070</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
  </stack>
  <auxwhat>Address 0x1405d1f0 is 16 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x212</unique>
  <tid>4</tid>
  <kind>InvalidWrite</kind>
  <what>Invalid write of size 8</what>
  <stack>
    <frame>
      <ip>0x6385074</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
  </stack>
  <auxwhat>Address 0x13fdf5b8 is 24 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x213</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x6385078</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
  </stack>
  <auxwhat>Address 0xe665d38 is 24 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
    <frame>
      <ip>0x40FD9D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::detail::sp_counted_base::release()</fn>
      <dir>/usr/include/boost/smart_ptr/detail</dir>
      <file>sp_counted_base_gcc_x86.hpp</file>
      <line>145</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x214</unique>
  <tid>4</tid>
  <kind>InvalidWrite</kind>
  <what>Invalid write of size 8</what>
  <stack>
    <frame>
      <ip>0x638507C</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
  </stack>
  <auxwhat>Address 0x1405d1e8 is 8 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x215</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x6385274</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
  </stack>
  <auxwhat>Address 0xe665d28 is 8 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
    <frame>
      <ip>0x40FD9D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::detail::sp_counted_base::release()</fn>
      <dir>/usr/include/boost/smart_ptr/detail</dir>
      <file>sp_counted_base_gcc_x86.hpp</file>
      <line>145</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x21c</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x6385150</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
  </stack>
  <auxwhat>Address 0x1405d1f8 is 24 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x21d</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x6385154</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
  </stack>
  <auxwhat>Address 0x13deed30 is 0 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
    <frame>
      <ip>0x40FD9D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::detail::sp_counted_base::release()</fn>
      <dir>/usr/include/boost/smart_ptr/detail</dir>
      <file>sp_counted_base_gcc_x86.hpp</file>
      <line>145</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x21e</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x638515C</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
  </stack>
  <auxwhat>Address 0x13deed40 is 16 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
    <frame>
      <ip>0x40FD9D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::detail::sp_counted_base::release()</fn>
      <dir>/usr/include/boost/smart_ptr/detail</dir>
      <file>sp_counted_base_gcc_x86.hpp</file>
      <line>145</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x21f</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x6385165</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
  </stack>
  <auxwhat>Address 0xe676610 is 0 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x220</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x63852BE</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
  </stack>
  <auxwhat>Address 0x13deed48 is 24 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
    <frame>
      <ip>0x40FD9D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::detail::sp_counted_base::release()</fn>
      <dir>/usr/include/boost/smart_ptr/detail</dir>
      <file>sp_counted_base_gcc_x86.hpp</file>
      <line>145</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x221</unique>
  <tid>4</tid>
  <kind>InvalidWrite</kind>
  <what>Invalid write of size 4</what>
  <stack>
    <frame>
      <ip>0x63852CC</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
  </stack>
  <auxwhat>Address 0xe676610 is 0 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x222</unique>
  <tid>4</tid>
  <kind>InvalidWrite</kind>
  <what>Invalid write of size 4</what>
  <stack>
    <frame>
      <ip>0x63852D5</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
  </stack>
  <auxwhat>Address 0x13deed30 is 0 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
    <frame>
      <ip>0x40FD9D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::detail::sp_counted_base::release()</fn>
      <dir>/usr/include/boost/smart_ptr/detail</dir>
      <file>sp_counted_base_gcc_x86.hpp</file>
      <line>145</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x223</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x6384D00</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
    </frame>
    <frame>
      <ip>0x63852DF</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x13deed40 is 16 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
    <frame>
      <ip>0x40FD9D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::detail::sp_counted_base::release()</fn>
      <dir>/usr/include/boost/smart_ptr/detail</dir>
      <file>sp_counted_base_gcc_x86.hpp</file>
      <line>145</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x224</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x6384D04</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
    </frame>
    <frame>
      <ip>0x63852DF</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xe676628 is 24 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x225</unique>
  <tid>4</tid>
  <kind>InvalidWrite</kind>
  <what>Invalid write of size 8</what>
  <stack>
    <frame>
      <ip>0x6384D0B</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
    </frame>
    <frame>
      <ip>0x63852DF</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x13deed40 is 16 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
    <frame>
      <ip>0x40FD9D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::detail::sp_counted_base::release()</fn>
      <dir>/usr/include/boost/smart_ptr/detail</dir>
      <file>sp_counted_base_gcc_x86.hpp</file>
      <line>145</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x226</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x6384D15</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
    </frame>
    <frame>
      <ip>0x63852DF</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x13deed38 is 8 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
    <frame>
      <ip>0x40FD9D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::detail::sp_counted_base::release()</fn>
      <dir>/usr/include/boost/smart_ptr/detail</dir>
      <file>sp_counted_base_gcc_x86.hpp</file>
      <line>145</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x227</unique>
  <tid>4</tid>
  <kind>InvalidWrite</kind>
  <what>Invalid write of size 8</what>
  <stack>
    <frame>
      <ip>0x6384D19</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
    </frame>
    <frame>
      <ip>0x63852DF</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xe676618 is 8 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x228</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x6384D22</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
    </frame>
    <frame>
      <ip>0x63852DF</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x13deed38 is 8 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
    <frame>
      <ip>0x40FD9D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::detail::sp_counted_base::release()</fn>
      <dir>/usr/include/boost/smart_ptr/detail</dir>
      <file>sp_counted_base_gcc_x86.hpp</file>
      <line>145</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x229</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x6384D26</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
    </frame>
    <frame>
      <ip>0x63852DF</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x1405d1f8 is 24 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x22a</unique>
  <tid>4</tid>
  <kind>InvalidWrite</kind>
  <what>Invalid write of size 8</what>
  <stack>
    <frame>
      <ip>0x6384D50</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
    </frame>
    <frame>
      <ip>0x63852DF</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x1405d1f8 is 24 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x22b</unique>
  <tid>4</tid>
  <kind>InvalidWrite</kind>
  <what>Invalid write of size 8</what>
  <stack>
    <frame>
      <ip>0x6384D30</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
    </frame>
    <frame>
      <ip>0x63852DF</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xe676628 is 24 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x22c</unique>
  <tid>4</tid>
  <kind>InvalidWrite</kind>
  <what>Invalid write of size 8</what>
  <stack>
    <frame>
      <ip>0x6384D34</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
    </frame>
    <frame>
      <ip>0x63852DF</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x13deed38 is 8 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
    <frame>
      <ip>0x40FD9D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::detail::sp_counted_base::release()</fn>
      <dir>/usr/include/boost/smart_ptr/detail</dir>
      <file>sp_counted_base_gcc_x86.hpp</file>
      <line>145</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x22d</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x63852E0</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
  </stack>
  <auxwhat>Address 0x1405d1f8 is 24 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x22e</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x63852E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
  </stack>
  <auxwhat>Address 0x1405d1e0 is 0 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x22f</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x63852E7</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
  </stack>
  <auxwhat>Address 0xe676628 is 24 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x230</unique>
  <tid>4</tid>
  <kind>InvalidWrite</kind>
  <what>Invalid write of size 4</what>
  <stack>
    <frame>
      <ip>0x63852EB</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
  </stack>
  <auxwhat>Address 0xe676610 is 0 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x231</unique>
  <tid>4</tid>
  <kind>InvalidWrite</kind>
  <what>Invalid write of size 4</what>
  <stack>
    <frame>
      <ip>0x63852ED</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
  </stack>
  <auxwhat>Address 0x1405d1e0 is 0 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x232</unique>
  <tid>4</tid>
  <kind>InvalidWrite</kind>
  <what>Invalid write of size 4</what>
  <stack>
    <frame>
      <ip>0x63852A5</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
  </stack>
  <auxwhat>Address 0x13deed30 is 0 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
    <frame>
      <ip>0x40FD9D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::detail::sp_counted_base::release()</fn>
      <dir>/usr/include/boost/smart_ptr/detail</dir>
      <file>sp_counted_base_gcc_x86.hpp</file>
      <line>145</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x233</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x6384CA0</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
    </frame>
    <frame>
      <ip>0x63852B8</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x1405d1f8 is 24 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x234</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x6384CA4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
    </frame>
    <frame>
      <ip>0x63852B8</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xe676620 is 16 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x235</unique>
  <tid>4</tid>
  <kind>InvalidWrite</kind>
  <what>Invalid write of size 8</what>
  <stack>
    <frame>
      <ip>0x6384CAB</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
    </frame>
    <frame>
      <ip>0x63852B8</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x1405d1f8 is 24 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x236</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x6384CB5</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
    </frame>
    <frame>
      <ip>0x63852B8</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x1405d1e8 is 8 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x237</unique>
  <tid>4</tid>
  <kind>InvalidWrite</kind>
  <what>Invalid write of size 8</what>
  <stack>
    <frame>
      <ip>0x6384CB9</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
    </frame>
    <frame>
      <ip>0x63852B8</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xe676618 is 8 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x238</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x6384CC2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
    </frame>
    <frame>
      <ip>0x63852B8</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x1405d1e8 is 8 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x239</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x6384CC6</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
    </frame>
    <frame>
      <ip>0x63852B8</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x13fdf5b0 is 16 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x23a</unique>
  <tid>4</tid>
  <kind>InvalidWrite</kind>
  <what>Invalid write of size 8</what>
  <stack>
    <frame>
      <ip>0x6384CCC</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
    </frame>
    <frame>
      <ip>0x63852B8</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x13fdf5b8 is 24 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x23b</unique>
  <tid>4</tid>
  <kind>InvalidWrite</kind>
  <what>Invalid write of size 8</what>
  <stack>
    <frame>
      <ip>0x6384CD0</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
    </frame>
    <frame>
      <ip>0x63852B8</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xe676620 is 16 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x23c</unique>
  <tid>4</tid>
  <kind>InvalidWrite</kind>
  <what>Invalid write of size 8</what>
  <stack>
    <frame>
      <ip>0x6384CD4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
    </frame>
    <frame>
      <ip>0x63852B8</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x1405d1e8 is 8 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x375</unique>
  <tid>4</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x638535F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;)</fn>
    </frame>
    <frame>
      <ip>0x412088</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase_aux(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1489</line>
    </frame>
    <frame>
      <ip>0x411123</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>776</line>
    </frame>
    <frame>
      <ip>0x410748</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::erase(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>633</line>
    </frame>
    <frame>
      <ip>0x40F512</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::deregisterWidget(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x42715A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x42610F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
    </frame>
    <frame>
      <ip>0x426191</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::~Dynamic()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.h</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x5185DB6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::~WStackedWidget()</fn>
    </frame>
    <frame>
      <ip>0x51F3482</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::~WWebWidget()</fn>
    </frame>
    <frame>
      <ip>0x4271BA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::~Moldable()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>70</line>
    </frame>
  </stack>
  <auxwhat>Address 0x1401e4e8 is 8 bytes inside a block of size 48 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2A4BC</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator delete(void*)</fn>
    </frame>
    <frame>
      <ip>0x4134D9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::deallocate(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*, unsigned long)</fn>
      <dir>/usr/include/c++/4.6/ext</dir>
      <file>new_allocator.h</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x412931</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_put_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>373</line>
    </frame>
    <frame>
      <ip>0x41164E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_destroy_node(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x410CEE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1076</line>
    </frame>
    <frame>
      <ip>0x410CCB</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;*)</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_tree.h</file>
      <line>1074</line>
    </frame>
    <frame>
      <ip>0x4104B6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Goo::Moldable*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~_Rb_tree()</fn>
    </frame>
    <frame>
      <ip>0x410163</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>std::map&lt;std::string, Goo::Moldable*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Goo::Moldable*&gt; &gt; &gt;::~map()</fn>
      <dir>/usr/include/c++/4.6/bits</dir>
      <file>stl_map.h</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x40F7F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x40F855</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::~Mogu()</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x52C9A97</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::~WebSession()</fn>
    </frame>
    <frame>
      <ip>0x52BB361</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>boost::detail::sp_counted_impl_p&lt;Wt::WebSession&gt;::dispose()</fn>
    </frame>
  </stack>
</error>


<status>
  <state>FINISHED</state>
  <time>00:00:00:25.633 </time>
</status>

<error>
  <unique>0x4a8</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>24 bytes in 1 blocks are definitely lost in loss record 252 of 808</text>
    <leakedbytes>24</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5935324</ip>
      <obj>/usr/lib/libboost_signals.so.1.46.1</obj>
      <fn>boost::signals::detail::signal_base::signal_base(boost::function2&lt;bool, boost::signals::detail::stored_group, boost::signals::detail::stored_group&gt; const&amp;, boost::any const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x51FC4F6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::EventSignal&lt;Wt::WMouseEvent&gt;::EventSignal(char const*, Wt::WObject*)</fn>
    </frame>
    <frame>
      <ip>0x51F5012</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::mouseEventSignal(char const*, bool)</fn>
    </frame>
    <frame>
      <ip>0x415BF3</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::EventBindery(Goo::Moldable*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>74</line>
    </frame>
    <frame>
      <ip>0x4283E6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::do_if_has_events()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>321</line>
    </frame>
    <frame>
      <ip>0x4278C8</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::load()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>183</line>
    </frame>
    <frame>
      <ip>0x51F2743</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::doLoad(Wt::WWidget*)</fn>
    </frame>
    <frame>
      <ip>0x51F5242</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::childAdded(Wt::WWidget*)</fn>
    </frame>
    <frame>
      <ip>0x51F5369</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::addChild(Wt::WWidget*)</fn>
    </frame>
    <frame>
      <ip>0x50AC6A8</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WContainerWidget::addWidget(Wt::WWidget*)</fn>
    </frame>
    <frame>
      <ip>0x427ADA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::addGoo(std::string const&amp;)</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>211</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4a9</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>24 bytes in 1 blocks are definitely lost in loss record 253 of 808</text>
    <leakedbytes>24</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5935324</ip>
      <obj>/usr/lib/libboost_signals.so.1.46.1</obj>
      <fn>boost::signals::detail::signal_base::signal_base(boost::function2&lt;bool, boost::signals::detail::stored_group, boost::signals::detail::stored_group&gt; const&amp;, boost::any const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x51FC4F6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::EventSignal&lt;Wt::WMouseEvent&gt;::EventSignal(char const*, Wt::WObject*)</fn>
    </frame>
    <frame>
      <ip>0x51F5012</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::mouseEventSignal(char const*, bool)</fn>
    </frame>
    <frame>
      <ip>0x415CB9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::EventBindery(Goo::Moldable*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>83</line>
    </frame>
    <frame>
      <ip>0x4283E6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::do_if_has_events()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>321</line>
    </frame>
    <frame>
      <ip>0x4278C8</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::load()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>183</line>
    </frame>
    <frame>
      <ip>0x51F2743</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::doLoad(Wt::WWidget*)</fn>
    </frame>
    <frame>
      <ip>0x51F5242</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::childAdded(Wt::WWidget*)</fn>
    </frame>
    <frame>
      <ip>0x51F5369</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::addChild(Wt::WWidget*)</fn>
    </frame>
    <frame>
      <ip>0x50AC6A8</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WContainerWidget::addWidget(Wt::WWidget*)</fn>
    </frame>
    <frame>
      <ip>0x427ADA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::addGoo(std::string const&amp;)</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>211</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4aa</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>24 bytes in 1 blocks are definitely lost in loss record 254 of 808</text>
    <leakedbytes>24</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5935324</ip>
      <obj>/usr/lib/libboost_signals.so.1.46.1</obj>
      <fn>boost::signals::detail::signal_base::signal_base(boost::function2&lt;bool, boost::signals::detail::stored_group, boost::signals::detail::stored_group&gt; const&amp;, boost::any const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x51FC4F6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::EventSignal&lt;Wt::WMouseEvent&gt;::EventSignal(char const*, Wt::WObject*)</fn>
    </frame>
    <frame>
      <ip>0x51F5012</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::mouseEventSignal(char const*, bool)</fn>
    </frame>
    <frame>
      <ip>0x415D19</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::EventBindery(Goo::Moldable*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>87</line>
    </frame>
    <frame>
      <ip>0x4283E6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::do_if_has_events()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>321</line>
    </frame>
    <frame>
      <ip>0x4278C8</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::load()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>183</line>
    </frame>
    <frame>
      <ip>0x51F2743</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::doLoad(Wt::WWidget*)</fn>
    </frame>
    <frame>
      <ip>0x51F5242</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::childAdded(Wt::WWidget*)</fn>
    </frame>
    <frame>
      <ip>0x51F5369</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::addChild(Wt::WWidget*)</fn>
    </frame>
    <frame>
      <ip>0x50AC6A8</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WContainerWidget::addWidget(Wt::WWidget*)</fn>
    </frame>
    <frame>
      <ip>0x427ADA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::addGoo(std::string const&amp;)</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>211</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4ab</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>26 bytes in 1 blocks are possibly lost in loss record 255 of 808</text>
    <leakedbytes>26</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CC902</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CCA9B</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CE27C</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::replace(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x773E5BE</ip>
      <obj>/usr/lib/libboost_filesystem.so.1.46.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4ac</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>26 bytes in 1 blocks are possibly lost in loss record 256 of 808</text>
    <leakedbytes>26</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CC902</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CCA9B</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x51169E9</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WLogger::WLogger()</fn>
    </frame>
    <frame>
      <ip>0x501F9B0</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4ad</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>26 bytes in 1 blocks are possibly lost in loss record 257 of 808</text>
    <leakedbytes>26</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CC902</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CCA9B</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x51169FF</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WLogger::WLogger()</fn>
    </frame>
    <frame>
      <ip>0x501F9B0</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4ae</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>26 bytes in 1 blocks are possibly lost in loss record 258 of 808</text>
    <leakedbytes>26</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CD477</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CDC43</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::assign(std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x529998D</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::Configuration::setDefaultEntryPoint(std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5701758</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WServer::start()</fn>
    </frame>
    <frame>
      <ip>0x5701B86</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WRun(int, char**, boost::function&lt;Wt::WApplication* ()(Wt::WEnvironment const&amp;)&gt;)</fn>
    </frame>
    <frame>
      <ip>0x40E276</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>main</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>main.cpp</file>
      <line>11</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4af</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>26 bytes in 1 blocks are possibly lost in loss record 259 of 808</text>
    <leakedbytes>26</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CD477</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CDBBB</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56EBB04</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>http::server::Configuration::Configuration(http::server::Configuration const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56E86CE</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>http::server::Server::Server(http::server::Configuration const&amp;, Wt::WServer&amp;)</fn>
    </frame>
    <frame>
      <ip>0x570177A</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WServer::start()</fn>
    </frame>
    <frame>
      <ip>0x5701B86</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WRun(int, char**, boost::function&lt;Wt::WApplication* ()(Wt::WEnvironment const&amp;)&gt;)</fn>
    </frame>
    <frame>
      <ip>0x40E276</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>main</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>main.cpp</file>
      <line>11</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4b0</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>26 bytes in 1 blocks are possibly lost in loss record 260 of 808</text>
    <leakedbytes>26</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CC902</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CCA9B</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x51169E9</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WLogger::WLogger()</fn>
    </frame>
    <frame>
      <ip>0x56E86E4</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>http::server::Server::Server(http::server::Configuration const&amp;, Wt::WServer&amp;)</fn>
    </frame>
    <frame>
      <ip>0x570177A</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WServer::start()</fn>
    </frame>
    <frame>
      <ip>0x5701B86</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WRun(int, char**, boost::function&lt;Wt::WApplication* ()(Wt::WEnvironment const&amp;)&gt;)</fn>
    </frame>
    <frame>
      <ip>0x40E276</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>main</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>main.cpp</file>
      <line>11</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4b1</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>26 bytes in 1 blocks are possibly lost in loss record 261 of 808</text>
    <leakedbytes>26</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CC902</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CCA9B</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x51169FF</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WLogger::WLogger()</fn>
    </frame>
    <frame>
      <ip>0x56E86E4</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>http::server::Server::Server(http::server::Configuration const&amp;, Wt::WServer&amp;)</fn>
    </frame>
    <frame>
      <ip>0x570177A</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WServer::start()</fn>
    </frame>
    <frame>
      <ip>0x5701B86</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WRun(int, char**, boost::function&lt;Wt::WApplication* ()(Wt::WEnvironment const&amp;)&gt;)</fn>
    </frame>
    <frame>
      <ip>0x40E276</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>main</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>main.cpp</file>
      <line>11</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4b2</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>26 bytes in 1 blocks are possibly lost in loss record 262 of 808</text>
    <leakedbytes>26</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CD477</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CDBBB</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5117090</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WLogger::configure(std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5172033</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WServer::initLogger(std::string const&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x529CE78</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::Configuration::readConfiguration(bool)</fn>
    </frame>
    <frame>
      <ip>0x529D7D5</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::Configuration::Configuration(std::string const&amp;, std::string const&amp;, std::string const&amp;, Wt::WServer*)</fn>
    </frame>
    <frame>
      <ip>0x5172123</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WServer::configuration()</fn>
    </frame>
    <frame>
      <ip>0x52B639C</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebController::WebController(Wt::WServer&amp;, std::string const&amp;, bool)</fn>
    </frame>
    <frame>
      <ip>0x5700EF4</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WServer::setServerConfiguration(int, char**, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5701AB6</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WRun(int, char**, boost::function&lt;Wt::WApplication* ()(Wt::WEnvironment const&amp;)&gt;)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4b3</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>26 bytes in 1 blocks are possibly lost in loss record 263 of 808</text>
    <leakedbytes>26</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CC902</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CD1F7</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_M_leak_hard()</fn>
    </frame>
    <frame>
      <ip>0x56C6DD9</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>http::server::Configuration::readOptions(boost::program_options::variables_map const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56C7BFA</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>http::server::Configuration::setOptions(int, char**, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5700F3B</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WServer::setServerConfiguration(int, char**, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5701AB6</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WRun(int, char**, boost::function&lt;Wt::WApplication* ()(Wt::WEnvironment const&amp;)&gt;)</fn>
    </frame>
    <frame>
      <ip>0x40E276</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>main</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>main.cpp</file>
      <line>11</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4b4</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>27 bytes in 1 blocks are possibly lost in loss record 264 of 808</text>
    <leakedbytes>27</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CC902</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CCA9B</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CE27C</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::replace(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x773E629</ip>
      <obj>/usr/lib/libboost_filesystem.so.1.46.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4b5</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>27 bytes in 1 blocks are possibly lost in loss record 265 of 808</text>
    <leakedbytes>27</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x50264BF</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4b6</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>27 bytes in 1 blocks are possibly lost in loss record 266 of 808</text>
    <leakedbytes>27</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x50264D8</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4b7</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>27 bytes in 1 blocks are possibly lost in loss record 267 of 808</text>
    <leakedbytes>27</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x50264F1</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4b8</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>27 bytes in 1 blocks are possibly lost in loss record 268 of 808</text>
    <leakedbytes>27</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x502650A</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4b9</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>27 bytes in 1 blocks are possibly lost in loss record 269 of 808</text>
    <leakedbytes>27</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5026523</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4ba</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>27 bytes in 1 blocks are possibly lost in loss record 270 of 808</text>
    <leakedbytes>27</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5026558</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4bb</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>27 bytes in 1 blocks are possibly lost in loss record 271 of 808</text>
    <leakedbytes>27</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5026571</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4bc</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>27 bytes in 1 blocks are possibly lost in loss record 272 of 808</text>
    <leakedbytes>27</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x502658A</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4bd</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>27 bytes in 1 blocks are possibly lost in loss record 273 of 808</text>
    <leakedbytes>27</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x50265A3</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4be</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>27 bytes in 1 blocks are possibly lost in loss record 274 of 808</text>
    <leakedbytes>27</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x50265BC</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4bf</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>28 bytes in 1 blocks are possibly lost in loss record 275 of 808</text>
    <leakedbytes>28</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x927172F</ip>
      <obj>/usr/lib/libboost_program_options.so.1.46.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4c0</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>28 bytes in 1 blocks are possibly lost in loss record 276 of 808</text>
    <leakedbytes>28</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x502556B</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4c1</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>28 bytes in 1 blocks are possibly lost in loss record 277 of 808</text>
    <leakedbytes>28</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025AA4</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4c2</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>28 bytes in 1 blocks are possibly lost in loss record 278 of 808</text>
    <leakedbytes>28</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5026699</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4c3</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>28 bytes in 1 blocks are possibly lost in loss record 279 of 808</text>
    <leakedbytes>28</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x50266D8</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4c4</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>28 bytes in 1 blocks are possibly lost in loss record 280 of 808</text>
    <leakedbytes>28</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5171A62</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WServer::init(std::string const&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5700DF3</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WServer::WServer(std::string const&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5701A6A</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WRun(int, char**, boost::function&lt;Wt::WApplication* ()(Wt::WEnvironment const&amp;)&gt;)</fn>
    </frame>
    <frame>
      <ip>0x40E276</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>main</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>main.cpp</file>
      <line>11</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4c5</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>28 bytes in 1 blocks are possibly lost in loss record 281 of 808</text>
    <leakedbytes>28</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56C4E69</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>http::server::Configuration::Configuration(Wt::WLogger&amp;, bool)</fn>
    </frame>
    <frame>
      <ip>0x5700F1B</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WServer::setServerConfiguration(int, char**, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5701AB6</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WRun(int, char**, boost::function&lt;Wt::WApplication* ()(Wt::WEnvironment const&amp;)&gt;)</fn>
    </frame>
    <frame>
      <ip>0x40E276</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>main</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>main.cpp</file>
      <line>11</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4c6</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>29 bytes in 1 blocks are possibly lost in loss record 282 of 808</text>
    <leakedbytes>29</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x502553B</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4c7</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>29 bytes in 1 blocks are possibly lost in loss record 283 of 808</text>
    <leakedbytes>29</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x50258CB</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4c8</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>29 bytes in 1 blocks are possibly lost in loss record 284 of 808</text>
    <leakedbytes>29</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025A74</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4c9</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>29 bytes in 1 blocks are possibly lost in loss record 285 of 808</text>
    <leakedbytes>29</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025E04</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4ca</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>29 bytes in 1 blocks are possibly lost in loss record 286 of 808</text>
    <leakedbytes>29</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5026397</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4cb</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>29 bytes in 1 blocks are possibly lost in loss record 287 of 808</text>
    <leakedbytes>29</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x50263E6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4cc</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>29 bytes in 1 blocks are possibly lost in loss record 288 of 808</text>
    <leakedbytes>29</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5026400</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4cd</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>29 bytes in 1 blocks are possibly lost in loss record 289 of 808</text>
    <leakedbytes>29</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5026453</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4ce</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>29 bytes in 1 blocks are possibly lost in loss record 290 of 808</text>
    <leakedbytes>29</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x502646F</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4cf</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>29 bytes in 1 blocks are possibly lost in loss record 291 of 808</text>
    <leakedbytes>29</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x50266ED</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4d0</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>29 bytes in 1 blocks are possibly lost in loss record 292 of 808</text>
    <leakedbytes>29</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5171AC0</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WServer::init(std::string const&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5700DF3</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WServer::WServer(std::string const&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5701A6A</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WRun(int, char**, boost::function&lt;Wt::WApplication* ()(Wt::WEnvironment const&amp;)&gt;)</fn>
    </frame>
    <frame>
      <ip>0x40E276</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>main</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>main.cpp</file>
      <line>11</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4d1</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>29 bytes in 1 blocks are possibly lost in loss record 293 of 808</text>
    <leakedbytes>29</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56E8A20</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>http::server::Server::Server(http::server::Configuration const&amp;, Wt::WServer&amp;)</fn>
    </frame>
    <frame>
      <ip>0x570177A</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WServer::start()</fn>
    </frame>
    <frame>
      <ip>0x5701B86</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WRun(int, char**, boost::function&lt;Wt::WApplication* ()(Wt::WEnvironment const&amp;)&gt;)</fn>
    </frame>
    <frame>
      <ip>0x40E276</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>main</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>main.cpp</file>
      <line>11</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4d2</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>30 bytes in 1 blocks are possibly lost in loss record 294 of 808</text>
    <leakedbytes>30</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CC902</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CCA9B</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5116A5F</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WLogger::WLogger()</fn>
    </frame>
    <frame>
      <ip>0x501F9B0</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4d3</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>30 bytes in 1 blocks are possibly lost in loss record 295 of 808</text>
    <leakedbytes>30</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025463</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4d4</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>30 bytes in 1 blocks are possibly lost in loss record 296 of 808</text>
    <leakedbytes>30</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x502547B</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4d5</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>30 bytes in 1 blocks are possibly lost in loss record 297 of 808</text>
    <leakedbytes>30</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025493</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4d6</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>30 bytes in 1 blocks are possibly lost in loss record 298 of 808</text>
    <leakedbytes>30</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025553</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4d7</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>30 bytes in 1 blocks are possibly lost in loss record 299 of 808</text>
    <leakedbytes>30</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x502571B</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4d8</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>30 bytes in 1 blocks are possibly lost in loss record 300 of 808</text>
    <leakedbytes>30</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025954</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4d9</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>30 bytes in 1 blocks are possibly lost in loss record 301 of 808</text>
    <leakedbytes>30</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x50259B4</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4da</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>30 bytes in 1 blocks are possibly lost in loss record 302 of 808</text>
    <leakedbytes>30</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x50259CC</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4db</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>30 bytes in 1 blocks are possibly lost in loss record 303 of 808</text>
    <leakedbytes>30</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025A8C</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4dc</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>30 bytes in 1 blocks are possibly lost in loss record 304 of 808</text>
    <leakedbytes>30</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025C54</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4dd</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>30 bytes in 1 blocks are possibly lost in loss record 305 of 808</text>
    <leakedbytes>30</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5026363</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4de</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>30 bytes in 1 blocks are possibly lost in loss record 306 of 808</text>
    <leakedbytes>30</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x502637D</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4df</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>30 bytes in 1 blocks are possibly lost in loss record 307 of 808</text>
    <leakedbytes>30</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x50263CC</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4e0</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>30 bytes in 1 blocks are possibly lost in loss record 308 of 808</text>
    <leakedbytes>30</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5026437</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4e1</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>30 bytes in 1 blocks are possibly lost in loss record 309 of 808</text>
    <leakedbytes>30</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x50266AE</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4e2</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>30 bytes in 1 blocks are possibly lost in loss record 310 of 808</text>
    <leakedbytes>30</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x50266C3</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4e3</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>30 bytes in 1 blocks are possibly lost in loss record 311 of 808</text>
    <leakedbytes>30</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CC902</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CCA9B</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5116A5F</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WLogger::WLogger()</fn>
    </frame>
    <frame>
      <ip>0x56E86E4</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>http::server::Server::Server(http::server::Configuration const&amp;, Wt::WServer&amp;)</fn>
    </frame>
    <frame>
      <ip>0x570177A</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WServer::start()</fn>
    </frame>
    <frame>
      <ip>0x5701B86</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WRun(int, char**, boost::function&lt;Wt::WApplication* ()(Wt::WEnvironment const&amp;)&gt;)</fn>
    </frame>
    <frame>
      <ip>0x40E276</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>main</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>main.cpp</file>
      <line>11</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4e4</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>30 bytes in 1 blocks are possibly lost in loss record 312 of 808</text>
    <leakedbytes>30</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56E8ACE</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>http::server::Server::Server(http::server::Configuration const&amp;, Wt::WServer&amp;)</fn>
    </frame>
    <frame>
      <ip>0x570177A</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WServer::start()</fn>
    </frame>
    <frame>
      <ip>0x5701B86</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WRun(int, char**, boost::function&lt;Wt::WApplication* ()(Wt::WEnvironment const&amp;)&gt;)</fn>
    </frame>
    <frame>
      <ip>0x40E276</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>main</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>main.cpp</file>
      <line>11</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4e5</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>30 bytes in 1 blocks are possibly lost in loss record 313 of 808</text>
    <leakedbytes>30</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CDF14</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char*&gt;(char*, char*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CDFE8</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x511728B</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WLogger::configure(std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5172033</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WServer::initLogger(std::string const&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x529CE78</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::Configuration::readConfiguration(bool)</fn>
    </frame>
    <frame>
      <ip>0x529D7D5</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::Configuration::Configuration(std::string const&amp;, std::string const&amp;, std::string const&amp;, Wt::WServer*)</fn>
    </frame>
    <frame>
      <ip>0x5172123</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WServer::configuration()</fn>
    </frame>
    <frame>
      <ip>0x52B639C</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebController::WebController(Wt::WServer&amp;, std::string const&amp;, bool)</fn>
    </frame>
    <frame>
      <ip>0x5700EF4</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WServer::setServerConfiguration(int, char**, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5701AB6</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WRun(int, char**, boost::function&lt;Wt::WApplication* ()(Wt::WEnvironment const&amp;)&gt;)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4e6</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>31 bytes in 1 blocks are possibly lost in loss record 314 of 808</text>
    <leakedbytes>31</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x50254AB</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4e7</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>31 bytes in 1 blocks are possibly lost in loss record 315 of 808</text>
    <leakedbytes>31</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025583</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4e8</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>31 bytes in 1 blocks are possibly lost in loss record 316 of 808</text>
    <leakedbytes>31</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x50256A3</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4e9</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>31 bytes in 1 blocks are possibly lost in loss record 317 of 808</text>
    <leakedbytes>31</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025984</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4ea</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>31 bytes in 1 blocks are possibly lost in loss record 318 of 808</text>
    <leakedbytes>31</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x50259E4</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4eb</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>31 bytes in 1 blocks are possibly lost in loss record 319 of 808</text>
    <leakedbytes>31</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025ABC</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4ec</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>31 bytes in 1 blocks are possibly lost in loss record 320 of 808</text>
    <leakedbytes>31</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025BDC</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4ed</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>31 bytes in 1 blocks are possibly lost in loss record 321 of 808</text>
    <leakedbytes>31</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x502648B</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4ee</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>31 bytes in 1 blocks are possibly lost in loss record 322 of 808</text>
    <leakedbytes>31</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56E89BC</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>http::server::Server::Server(http::server::Configuration const&amp;, Wt::WServer&amp;)</fn>
    </frame>
    <frame>
      <ip>0x570177A</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WServer::start()</fn>
    </frame>
    <frame>
      <ip>0x5701B86</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WRun(int, char**, boost::function&lt;Wt::WApplication* ()(Wt::WEnvironment const&amp;)&gt;)</fn>
    </frame>
    <frame>
      <ip>0x40E276</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>main</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>main.cpp</file>
      <line>11</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4ef</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>31 bytes in 1 blocks are possibly lost in loss record 323 of 808</text>
    <leakedbytes>31</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56E8A93</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>http::server::Server::Server(http::server::Configuration const&amp;, Wt::WServer&amp;)</fn>
    </frame>
    <frame>
      <ip>0x570177A</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WServer::start()</fn>
    </frame>
    <frame>
      <ip>0x5701B86</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WRun(int, char**, boost::function&lt;Wt::WApplication* ()(Wt::WEnvironment const&amp;)&gt;)</fn>
    </frame>
    <frame>
      <ip>0x40E276</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>main</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>main.cpp</file>
      <line>11</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4f0</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>31 bytes in 1 blocks are possibly lost in loss record 324 of 808</text>
    <leakedbytes>31</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x40F099</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::Mogu(Wt::WEnvironment const&amp;)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>47</line>
    </frame>
    <frame>
      <ip>0x40E206</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>createApplication(Wt::WEnvironment const&amp;)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>main.cpp</file>
      <line>5</line>
    </frame>
    <frame>
      <ip>0x40EDB0</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::detail::function::function_invoker1&lt;Wt::WApplication* (*)(Wt::WEnvironment const&amp;), Wt::WApplication*, Wt::WEnvironment const&amp;&gt;::invoke(boost::detail::function::function_buffer&amp;, Wt::WEnvironment const&amp;)</fn>
      <dir>/usr/include/boost/function</dir>
      <file>function_template.hpp</file>
      <line>95</line>
    </frame>
    <frame>
      <ip>0x52B62A9</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebController::doCreateApplication(Wt::WebSession*)</fn>
    </frame>
    <frame>
      <ip>0x52C31C2</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::start()</fn>
    </frame>
    <frame>
      <ip>0x52C7D81</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebSession::handleRequest(Wt::WebSession::Handler&amp;)</fn>
    </frame>
    <frame>
      <ip>0x52BA5C6</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebController::handleRequest(Wt::WebRequest*)</fn>
    </frame>
    <frame>
      <ip>0x5702E55</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>http::server::WtReply::consumeRequestBody(char const*, char const*, http::server::Request::State)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x50c</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>32 bytes in 1 blocks are possibly lost in loss record 352 of 808</text>
    <leakedbytes>32</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x502544B</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x50d</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>32 bytes in 1 blocks are possibly lost in loss record 353 of 808</text>
    <leakedbytes>32</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x50255CB</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x50e</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>32 bytes in 1 blocks are possibly lost in loss record 354 of 808</text>
    <leakedbytes>32</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025763</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x50f</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>32 bytes in 1 blocks are possibly lost in loss record 355 of 808</text>
    <leakedbytes>32</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x50258FB</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x510</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>32 bytes in 1 blocks are possibly lost in loss record 356 of 808</text>
    <leakedbytes>32</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x502593C</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x511</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>32 bytes in 1 blocks are possibly lost in loss record 357 of 808</text>
    <leakedbytes>32</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025B04</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x512</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>32 bytes in 1 blocks are possibly lost in loss record 358 of 808</text>
    <leakedbytes>32</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025C9C</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x513</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>32 bytes in 1 blocks are possibly lost in loss record 359 of 808</text>
    <leakedbytes>32</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025E34</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x514</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>32 bytes in 1 blocks are possibly lost in loss record 360 of 808</text>
    <leakedbytes>32</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5171A91</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WServer::init(std::string const&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5700DF3</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WServer::WServer(std::string const&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5701A6A</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WRun(int, char**, boost::function&lt;Wt::WApplication* ()(Wt::WEnvironment const&amp;)&gt;)</fn>
    </frame>
    <frame>
      <ip>0x40E276</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>main</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>main.cpp</file>
      <line>11</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x515</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>32 bytes in 1 blocks are possibly lost in loss record 361 of 808</text>
    <leakedbytes>32</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5171AEF</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WServer::init(std::string const&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5700DF3</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WServer::WServer(std::string const&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5701A6A</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WRun(int, char**, boost::function&lt;Wt::WApplication* ()(Wt::WEnvironment const&amp;)&gt;)</fn>
    </frame>
    <frame>
      <ip>0x40E276</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>main</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>main.cpp</file>
      <line>11</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x516</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>32 bytes in 1 blocks are possibly lost in loss record 362 of 808</text>
    <leakedbytes>32</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56E8A55</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>http::server::Server::Server(http::server::Configuration const&amp;, Wt::WServer&amp;)</fn>
    </frame>
    <frame>
      <ip>0x570177A</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WServer::start()</fn>
    </frame>
    <frame>
      <ip>0x5701B86</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WRun(int, char**, boost::function&lt;Wt::WApplication* ()(Wt::WEnvironment const&amp;)&gt;)</fn>
    </frame>
    <frame>
      <ip>0x40E276</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>main</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>main.cpp</file>
      <line>11</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x518</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>33 bytes in 1 blocks are possibly lost in loss record 364 of 808</text>
    <leakedbytes>33</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025433</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x519</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>33 bytes in 1 blocks are possibly lost in loss record 365 of 808</text>
    <leakedbytes>33</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x502596C</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x51a</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>33 bytes in 1 blocks are possibly lost in loss record 366 of 808</text>
    <leakedbytes>33</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x502599C</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x51b</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>33 bytes in 1 blocks are possibly lost in loss record 367 of 808</text>
    <leakedbytes>33</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025A14</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x51c</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>33 bytes in 1 blocks are possibly lost in loss record 368 of 808</text>
    <leakedbytes>33</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025A44</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x51d</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>33 bytes in 1 blocks are possibly lost in loss record 369 of 808</text>
    <leakedbytes>33</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025D14</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x51e</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>33 bytes in 1 blocks are possibly lost in loss record 370 of 808</text>
    <leakedbytes>33</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56BF243</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x51f</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>33 bytes in 1 blocks are possibly lost in loss record 371 of 808</text>
    <leakedbytes>33</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5171A37</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WServer::init(std::string const&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5700DF3</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WServer::WServer(std::string const&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5701A6A</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WRun(int, char**, boost::function&lt;Wt::WApplication* ()(Wt::WEnvironment const&amp;)&gt;)</fn>
    </frame>
    <frame>
      <ip>0x40E276</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>main</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>main.cpp</file>
      <line>11</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x520</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>33 bytes in 1 blocks are possibly lost in loss record 372 of 808</text>
    <leakedbytes>33</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56E89EE</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>http::server::Server::Server(http::server::Configuration const&amp;, Wt::WServer&amp;)</fn>
    </frame>
    <frame>
      <ip>0x570177A</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WServer::start()</fn>
    </frame>
    <frame>
      <ip>0x5701B86</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WRun(int, char**, boost::function&lt;Wt::WApplication* ()(Wt::WEnvironment const&amp;)&gt;)</fn>
    </frame>
    <frame>
      <ip>0x40E276</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>main</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>main.cpp</file>
      <line>11</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x521</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>34 bytes in 1 blocks are possibly lost in loss record 373 of 808</text>
    <leakedbytes>34</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x501DE6F</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x522</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>34 bytes in 1 blocks are possibly lost in loss record 374 of 808</text>
    <leakedbytes>34</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5023328</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x523</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>34 bytes in 1 blocks are possibly lost in loss record 375 of 808</text>
    <leakedbytes>34</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x50254DB</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x524</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>34 bytes in 1 blocks are possibly lost in loss record 376 of 808</text>
    <leakedbytes>34</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x502550B</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x525</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>34 bytes in 1 blocks are possibly lost in loss record 377 of 808</text>
    <leakedbytes>34</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x50257DB</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x526</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>34 bytes in 1 blocks are possibly lost in loss record 378 of 808</text>
    <leakedbytes>34</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025A2C</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x527</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>34 bytes in 1 blocks are possibly lost in loss record 379 of 808</text>
    <leakedbytes>34</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025A5C</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x528</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>34 bytes in 1 blocks are possibly lost in loss record 380 of 808</text>
    <leakedbytes>34</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025AEC</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x529</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>34 bytes in 1 blocks are possibly lost in loss record 381 of 808</text>
    <leakedbytes>34</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025B7C</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x52a</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>34 bytes in 1 blocks are possibly lost in loss record 382 of 808</text>
    <leakedbytes>34</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025BF4</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x52b</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>34 bytes in 1 blocks are possibly lost in loss record 383 of 808</text>
    <leakedbytes>34</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025C6C</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x52c</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>34 bytes in 1 blocks are possibly lost in loss record 384 of 808</text>
    <leakedbytes>34</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025C84</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x52d</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>34 bytes in 1 blocks are possibly lost in loss record 385 of 808</text>
    <leakedbytes>34</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025CCC</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x52e</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>34 bytes in 1 blocks are possibly lost in loss record 386 of 808</text>
    <leakedbytes>34</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025E4C</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x52f</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>35 bytes in 1 blocks are possibly lost in loss record 387 of 808</text>
    <leakedbytes>35</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x50254F3</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x530</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>35 bytes in 1 blocks are possibly lost in loss record 388 of 808</text>
    <leakedbytes>35</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025523</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x531</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>35 bytes in 1 blocks are possibly lost in loss record 389 of 808</text>
    <leakedbytes>35</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x50255B3</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x532</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>35 bytes in 1 blocks are possibly lost in loss record 390 of 808</text>
    <leakedbytes>35</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025643</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x533</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>35 bytes in 1 blocks are possibly lost in loss record 391 of 808</text>
    <leakedbytes>35</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x50256BB</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x534</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>35 bytes in 1 blocks are possibly lost in loss record 392 of 808</text>
    <leakedbytes>35</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025733</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x535</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>35 bytes in 1 blocks are possibly lost in loss record 393 of 808</text>
    <leakedbytes>35</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x502574B</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x536</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>35 bytes in 1 blocks are possibly lost in loss record 394 of 808</text>
    <leakedbytes>35</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025793</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x537</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>35 bytes in 1 blocks are possibly lost in loss record 395 of 808</text>
    <leakedbytes>35</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x50258E3</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x538</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>35 bytes in 1 blocks are possibly lost in loss record 396 of 808</text>
    <leakedbytes>35</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025913</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x539</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>35 bytes in 1 blocks are possibly lost in loss record 397 of 808</text>
    <leakedbytes>35</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x50259FC</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x53a</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>35 bytes in 1 blocks are possibly lost in loss record 398 of 808</text>
    <leakedbytes>35</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025B1C</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x53b</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>35 bytes in 1 blocks are possibly lost in loss record 399 of 808</text>
    <leakedbytes>35</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025BC4</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x53c</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>35 bytes in 1 blocks are possibly lost in loss record 400 of 808</text>
    <leakedbytes>35</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025C3C</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x53d</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>35 bytes in 1 blocks are possibly lost in loss record 401 of 808</text>
    <leakedbytes>35</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025CB4</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x53e</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>35 bytes in 1 blocks are possibly lost in loss record 402 of 808</text>
    <leakedbytes>35</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025CFC</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x53f</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>35 bytes in 1 blocks are possibly lost in loss record 403 of 808</text>
    <leakedbytes>35</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025DBC</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x540</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>35 bytes in 1 blocks are possibly lost in loss record 404 of 808</text>
    <leakedbytes>35</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025E1C</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x541</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>35 bytes in 1 blocks are possibly lost in loss record 405 of 808</text>
    <leakedbytes>35</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56E898A</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>http::server::Server::Server(http::server::Configuration const&amp;, Wt::WServer&amp;)</fn>
    </frame>
    <frame>
      <ip>0x570177A</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WServer::start()</fn>
    </frame>
    <frame>
      <ip>0x5701B86</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WRun(int, char**, boost::function&lt;Wt::WApplication* ()(Wt::WEnvironment const&amp;)&gt;)</fn>
    </frame>
    <frame>
      <ip>0x40E276</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>main</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>main.cpp</file>
      <line>11</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x542</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>36 bytes in 1 blocks are possibly lost in loss record 406 of 808</text>
    <leakedbytes>36</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x50254C3</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x543</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>36 bytes in 1 blocks are possibly lost in loss record 407 of 808</text>
    <leakedbytes>36</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x50255E3</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x544</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>36 bytes in 1 blocks are possibly lost in loss record 408 of 808</text>
    <leakedbytes>36</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x502568B</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x545</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>36 bytes in 1 blocks are possibly lost in loss record 409 of 808</text>
    <leakedbytes>36</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025703</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x546</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>36 bytes in 1 blocks are possibly lost in loss record 410 of 808</text>
    <leakedbytes>36</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x502577B</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x547</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>36 bytes in 1 blocks are possibly lost in loss record 411 of 808</text>
    <leakedbytes>36</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x50257C3</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x548</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>36 bytes in 1 blocks are possibly lost in loss record 412 of 808</text>
    <leakedbytes>36</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025883</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x549</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>36 bytes in 1 blocks are possibly lost in loss record 413 of 808</text>
    <leakedbytes>36</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025B64</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x54a</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>36 bytes in 1 blocks are possibly lost in loss record 414 of 808</text>
    <leakedbytes>36</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025B94</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x54b</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>36 bytes in 1 blocks are possibly lost in loss record 415 of 808</text>
    <leakedbytes>36</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025C0C</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x54c</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>36 bytes in 1 blocks are possibly lost in loss record 416 of 808</text>
    <leakedbytes>36</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025CE4</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x54d</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>36 bytes in 1 blocks are possibly lost in loss record 417 of 808</text>
    <leakedbytes>36</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025DD4</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x54e</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>36 bytes in 1 blocks are possibly lost in loss record 418 of 808</text>
    <leakedbytes>36</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56BF369</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x54f</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>36 bytes in 1 blocks are possibly lost in loss record 419 of 808</text>
    <leakedbytes>36</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56C0D49</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x550</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>37 bytes in 1 blocks are possibly lost in loss record 420 of 808</text>
    <leakedbytes>37</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x502562B</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x551</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>37 bytes in 1 blocks are possibly lost in loss record 421 of 808</text>
    <leakedbytes>37</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x502565B</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x552</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>37 bytes in 1 blocks are possibly lost in loss record 422 of 808</text>
    <leakedbytes>37</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x50256D3</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x553</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>37 bytes in 1 blocks are possibly lost in loss record 423 of 808</text>
    <leakedbytes>37</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x50257AB</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x554</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>37 bytes in 1 blocks are possibly lost in loss record 424 of 808</text>
    <leakedbytes>37</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x502589B</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x555</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>37 bytes in 1 blocks are possibly lost in loss record 425 of 808</text>
    <leakedbytes>37</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025B34</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x556</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>37 bytes in 1 blocks are possibly lost in loss record 426 of 808</text>
    <leakedbytes>37</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025BAC</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x557</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>37 bytes in 1 blocks are possibly lost in loss record 427 of 808</text>
    <leakedbytes>37</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025C24</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x558</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>37 bytes in 1 blocks are possibly lost in loss record 428 of 808</text>
    <leakedbytes>37</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x51629C5</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WRandom::get()</fn>
    </frame>
    <frame>
      <ip>0x52B6588</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebController::WebController(Wt::WServer&amp;, std::string const&amp;, bool)</fn>
    </frame>
    <frame>
      <ip>0x5700EF4</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WServer::setServerConfiguration(int, char**, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5701AB6</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WRun(int, char**, boost::function&lt;Wt::WApplication* ()(Wt::WEnvironment const&amp;)&gt;)</fn>
    </frame>
    <frame>
      <ip>0x40E276</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>main</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>main.cpp</file>
      <line>11</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x559</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>37 bytes in 1 blocks are possibly lost in loss record 429 of 808</text>
    <leakedbytes>37</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CC902</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CCA9B</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x56C4F46</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>http::server::Configuration::Configuration(Wt::WLogger&amp;, bool)</fn>
    </frame>
    <frame>
      <ip>0x5700F1B</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WServer::setServerConfiguration(int, char**, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5701AB6</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WRun(int, char**, boost::function&lt;Wt::WApplication* ()(Wt::WEnvironment const&amp;)&gt;)</fn>
    </frame>
    <frame>
      <ip>0x40E276</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>main</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>main.cpp</file>
      <line>11</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x55a</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>38 bytes in 1 blocks are possibly lost in loss record 430 of 808</text>
    <leakedbytes>38</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x50255FB</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x55b</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>38 bytes in 1 blocks are possibly lost in loss record 431 of 808</text>
    <leakedbytes>38</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025673</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x55c</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>38 bytes in 1 blocks are possibly lost in loss record 432 of 808</text>
    <leakedbytes>38</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x50256EB</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x55d</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>38 bytes in 1 blocks are possibly lost in loss record 433 of 808</text>
    <leakedbytes>38</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025AD4</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x55e</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>38 bytes in 1 blocks are possibly lost in loss record 434 of 808</text>
    <leakedbytes>38</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025B4C</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x55f</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>38 bytes in 1 blocks are possibly lost in loss record 435 of 808</text>
    <leakedbytes>38</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025DEC</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x560</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>38 bytes in 1 blocks are possibly lost in loss record 436 of 808</text>
    <leakedbytes>38</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56BF26D</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x561</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>39 bytes in 1 blocks are possibly lost in loss record 437 of 808</text>
    <leakedbytes>39</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x502559B</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x562</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>39 bytes in 1 blocks are possibly lost in loss record 438 of 808</text>
    <leakedbytes>39</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025613</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x563</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>39 bytes in 1 blocks are possibly lost in loss record 439 of 808</text>
    <leakedbytes>39</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x50258B3</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x564</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>39 bytes in 1 blocks are possibly lost in loss record 440 of 808</text>
    <leakedbytes>39</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025DA4</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x565</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>39 bytes in 1 blocks are possibly lost in loss record 441 of 808</text>
    <leakedbytes>39</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56BF297</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x566</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>39 bytes in 1 blocks are possibly lost in loss record 442 of 808</text>
    <leakedbytes>39</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56C0F41</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x567</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>39 bytes in 1 blocks are possibly lost in loss record 443 of 808</text>
    <leakedbytes>39</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4430EA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Nodes::NodeValue::getString()</fn>
      <dir>/home/tom/dev/Mogu/src/Types</dir>
      <file>NodeValue.cpp</file>
      <line>53</line>
    </frame>
    <frame>
      <ip>0x43FB5D</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Parsers::StyleParser::getWidgetText(Goo::Moldable*)</fn>
      <dir>/home/tom/dev/Mogu/src/Parsers</dir>
      <file>StyleParser.cpp</file>
      <line>61</line>
    </frame>
    <frame>
      <ip>0x4276F1</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::setContentVariables()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>156</line>
    </frame>
    <frame>
      <ip>0x42702E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::Moldable(std::string const&amp;, Wt::WContainerWidget*)</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>67</line>
    </frame>
    <frame>
      <ip>0x424CF3</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::Dynamic(std::string, std::string, Wt::WContainerWidget*)</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.cpp</file>
      <line>17</line>
    </frame>
    <frame>
      <ip>0x4279F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::addGoo(std::string const&amp;)</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>197</line>
    </frame>
    <frame>
      <ip>0x4285B0</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::do_if_has_children()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>338</line>
    </frame>
    <frame>
      <ip>0x427F6E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::createContent()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>283</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x568</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>39 bytes in 1 blocks are possibly lost in loss record 444 of 808</text>
    <leakedbytes>39</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CDF14</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char*&gt;(char*, char*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CDFE8</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x52E6EB7</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::XSSFilterRemoveScript(Wt::WString&amp;)</fn>
    </frame>
    <frame>
      <ip>0x51C0B6B</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WText::setText(Wt::WString const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x51C0CF8</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WText::WText(Wt::WString const&amp;, Wt::WContainerWidget*)</fn>
    </frame>
    <frame>
      <ip>0x427D3E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::createContent()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>251</line>
    </frame>
    <frame>
      <ip>0x4278A7</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::load()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>180</line>
    </frame>
    <frame>
      <ip>0x51F2743</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::doLoad(Wt::WWidget*)</fn>
    </frame>
    <frame>
      <ip>0x51F5242</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::childAdded(Wt::WWidget*)</fn>
    </frame>
    <frame>
      <ip>0x51F5369</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::addChild(Wt::WWidget*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x57d</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>40 bytes in 1 blocks are possibly lost in loss record 465 of 808</text>
    <leakedbytes>40</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x502586B</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x57e</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>40 bytes in 1 blocks are possibly lost in loss record 466 of 808</text>
    <leakedbytes>40</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025D2C</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x57f</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>40 bytes in 1 blocks are possibly lost in loss record 467 of 808</text>
    <leakedbytes>40</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025D44</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x580</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>40 bytes in 1 blocks are possibly lost in loss record 468 of 808</text>
    <leakedbytes>40</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56BF393</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x581</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>40 bytes in 1 blocks are possibly lost in loss record 469 of 808</text>
    <leakedbytes>40</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56BF465</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x582</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>40 bytes in 1 blocks are possibly lost in loss record 470 of 808</text>
    <leakedbytes>40</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56BF48F</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x583</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>40 bytes in 1 blocks are possibly lost in loss record 471 of 808</text>
    <leakedbytes>40</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x529A410</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x529A4A9</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x529BC99</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::Configuration::readApplicationSettings(rapidxml::xml_node&lt;char&gt;*)</fn>
    </frame>
    <frame>
      <ip>0x529CECA</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::Configuration::readConfiguration(bool)</fn>
    </frame>
    <frame>
      <ip>0x529D7D5</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::Configuration::Configuration(std::string const&amp;, std::string const&amp;, std::string const&amp;, Wt::WServer*)</fn>
    </frame>
    <frame>
      <ip>0x5172123</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WServer::configuration()</fn>
    </frame>
    <frame>
      <ip>0x52B639C</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebController::WebController(Wt::WServer&amp;, std::string const&amp;, bool)</fn>
    </frame>
    <frame>
      <ip>0x5700EF4</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WServer::setServerConfiguration(int, char**, std::string const&amp;)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x58a</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>41 bytes in 1 blocks are possibly lost in loss record 478 of 808</text>
    <leakedbytes>41</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x50257F3</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x58b</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>41 bytes in 1 blocks are possibly lost in loss record 479 of 808</text>
    <leakedbytes>41</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x502580B</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x58c</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>41 bytes in 1 blocks are possibly lost in loss record 480 of 808</text>
    <leakedbytes>41</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025D5C</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x58d</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>41 bytes in 1 blocks are possibly lost in loss record 481 of 808</text>
    <leakedbytes>41</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56BF2C1</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x58e</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>41 bytes in 1 blocks are possibly lost in loss record 482 of 808</text>
    <leakedbytes>41</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56C0D9D</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x58f</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>41 bytes in 1 blocks are possibly lost in loss record 483 of 808</text>
    <leakedbytes>41</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CD477</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CD55F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::reserve(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CDA45</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::append(std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x529AB63</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::Configuration::generateSessionId()</fn>
    </frame>
    <frame>
      <ip>0x52BA163</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebController::handleRequest(Wt::WebRequest*)</fn>
    </frame>
    <frame>
      <ip>0x5702E55</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>http::server::WtReply::consumeRequestBody(char const*, char const*, http::server::Request::State)</fn>
    </frame>
    <frame>
      <ip>0x56E4BEE</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>http::server::RequestParser::parseBody(http::server::Request&amp;, boost::shared_ptr&lt;http::server::Reply&gt;, char*&amp;, char*)</fn>
    </frame>
    <frame>
      <ip>0x56D1A38</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>http::server::Connection::handleReadBody()</fn>
    </frame>
    <frame>
      <ip>0x56D2FF5</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>http::server::Connection::handleReadRequest0()</fn>
    </frame>
    <frame>
      <ip>0x56FF556</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>boost::asio::detail::reactive_socket_recv_op&lt;boost::asio::mutable_buffers_1, boost::_bi::bind_t&lt;void, boost::_mfi::mf2&lt;void, http::server::Connection, boost::system::error_code const&amp;, unsigned long&gt;, boost::_bi::list3&lt;boost::_bi::value&lt;boost::shared_ptr&lt;http::server::Connection&gt; &gt;, boost::arg&lt;1&gt; (*)(), boost::arg&lt;2&gt; (*)()&gt; &gt; &gt;::do_complete(boost::asio::detail::task_io_service*, boost::asio::detail::task_io_service_operation*, boost::system::error_code, unsigned long)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x590</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>41 bytes in 1 blocks are possibly lost in loss record 484 of 808</text>
    <leakedbytes>41</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CDF14</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char*&gt;(char*, char*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CDFE8</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CE011</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::substr(unsigned long, unsigned long) const</fn>
    </frame>
    <frame>
      <ip>0x424D7E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Dynamic::Dynamic(std::string, std::string, Wt::WContainerWidget*)</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Dynamic.cpp</file>
      <line>24</line>
    </frame>
    <frame>
      <ip>0x4279F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::addGoo(std::string const&amp;)</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>197</line>
    </frame>
    <frame>
      <ip>0x4285B0</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::do_if_has_children()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>338</line>
    </frame>
    <frame>
      <ip>0x427F6E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::createContent()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>283</line>
    </frame>
    <frame>
      <ip>0x4278A7</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::load()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>180</line>
    </frame>
    <frame>
      <ip>0x51F2743</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::doLoad(Wt::WWidget*)</fn>
    </frame>
    <frame>
      <ip>0x51F5242</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::childAdded(Wt::WWidget*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x591</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>42 bytes in 1 blocks are possibly lost in loss record 485 of 808</text>
    <leakedbytes>42</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025823</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x592</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>42 bytes in 1 blocks are possibly lost in loss record 486 of 808</text>
    <leakedbytes>42</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56BF411</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x593</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>42 bytes in 1 blocks are possibly lost in loss record 487 of 808</text>
    <leakedbytes>42</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56BF561</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x594</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>42 bytes in 1 blocks are possibly lost in loss record 488 of 808</text>
    <leakedbytes>42</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56C0DF1</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x597</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>43 bytes in 1 blocks are possibly lost in loss record 491 of 808</text>
    <leakedbytes>43</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025D8C</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x598</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>43 bytes in 1 blocks are possibly lost in loss record 492 of 808</text>
    <leakedbytes>43</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56BF3BD</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x599</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>43 bytes in 1 blocks are possibly lost in loss record 493 of 808</text>
    <leakedbytes>43</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56BF43B</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x59a</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>43 bytes in 1 blocks are possibly lost in loss record 494 of 808</text>
    <leakedbytes>43</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56C0E45</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x59b</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>43 bytes in 1 blocks are possibly lost in loss record 495 of 808</text>
    <leakedbytes>43</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56C0F95</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x59c</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>43 bytes in 1 blocks are possibly lost in loss record 496 of 808</text>
    <leakedbytes>43</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56C1139</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x59d</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>43 bytes in 1 blocks are possibly lost in loss record 497 of 808</text>
    <leakedbytes>43</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56C118D</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x59e</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>44 bytes in 1 blocks are possibly lost in loss record 498 of 808</text>
    <leakedbytes>44</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025853</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x59f</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>45 bytes in 1 blocks are possibly lost in loss record 499 of 808</text>
    <leakedbytes>45</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025D74</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x5a0</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>45 bytes in 1 blocks are possibly lost in loss record 500 of 808</text>
    <leakedbytes>45</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56C1091</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x5a1</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>45 bytes in 1 blocks are possibly lost in loss record 501 of 808</text>
    <leakedbytes>45</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56C1331</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x5a2</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>45 bytes in 1 blocks are possibly lost in loss record 502 of 808</text>
    <leakedbytes>45</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5701A52</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WRun(int, char**, boost::function&lt;Wt::WApplication* ()(Wt::WEnvironment const&amp;)&gt;)</fn>
    </frame>
    <frame>
      <ip>0x40E276</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>main</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>main.cpp</file>
      <line>11</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x5a3</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>46 bytes in 1 blocks are possibly lost in loss record 503 of 808</text>
    <leakedbytes>46</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x502583B</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x5a4</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>46 bytes in 1 blocks are possibly lost in loss record 504 of 808</text>
    <leakedbytes>46</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56BF2EB</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x5a5</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>46 bytes in 1 blocks are possibly lost in loss record 505 of 808</text>
    <leakedbytes>46</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56BF537</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x5a6</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>46 bytes in 1 blocks are possibly lost in loss record 506 of 808</text>
    <leakedbytes>46</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56C0FE9</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x5a7</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>46 bytes in 1 blocks are possibly lost in loss record 507 of 808</text>
    <leakedbytes>46</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56C10E5</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x5a8</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>46 bytes in 1 blocks are possibly lost in loss record 508 of 808</text>
    <leakedbytes>46</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x52998EB</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::Configuration::locateConfigFile(std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x51720EA</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WServer::configuration()</fn>
    </frame>
    <frame>
      <ip>0x52B639C</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebController::WebController(Wt::WServer&amp;, std::string const&amp;, bool)</fn>
    </frame>
    <frame>
      <ip>0x5700EF4</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WServer::setServerConfiguration(int, char**, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5701AB6</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WRun(int, char**, boost::function&lt;Wt::WApplication* ()(Wt::WEnvironment const&amp;)&gt;)</fn>
    </frame>
    <frame>
      <ip>0x40E276</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>main</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>main.cpp</file>
      <line>11</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x5a9</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>47 bytes in 1 blocks are possibly lost in loss record 509 of 808</text>
    <leakedbytes>47</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56BF315</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x5bf</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>48 bytes in 1 blocks are possibly lost in loss record 531 of 808</text>
    <leakedbytes>48</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56BF33F</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x5c0</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>48 bytes in 1 blocks are possibly lost in loss record 532 of 808</text>
    <leakedbytes>48</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56BF3E7</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x5c4</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>49 bytes in 1 blocks are possibly lost in loss record 536 of 808</text>
    <leakedbytes>49</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56BF212</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x5c5</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>49 bytes in 1 blocks are possibly lost in loss record 537 of 808</text>
    <leakedbytes>49</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56C12DD</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x5c6</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>49 bytes in 1 blocks are possibly lost in loss record 538 of 808</text>
    <leakedbytes>49</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x42B63F</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Redis::toVector(TurnLeft::Utils::HungryVector&lt;std::string&gt;&amp;)</fn>
      <dir>/home/tom/dev/Mogu/src/Redis</dir>
      <file>RedisCore.cpp</file>
      <line>100</line>
    </frame>
    <frame>
      <ip>0x4410F5</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Parsers::StyleParser::getWidgetChildren(Goo::Moldable*, TurnLeft::Utils::HungryVector&lt;std::string&gt;&amp;)</fn>
      <dir>/home/tom/dev/Mogu/src/Parsers</dir>
      <file>StyleParser.cpp</file>
      <line>137</line>
    </frame>
    <frame>
      <ip>0x428552</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::do_if_has_children()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>333</line>
    </frame>
    <frame>
      <ip>0x427F6E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::createContent()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>283</line>
    </frame>
    <frame>
      <ip>0x4278A7</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::load()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>180</line>
    </frame>
    <frame>
      <ip>0x51F2743</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::doLoad(Wt::WWidget*)</fn>
    </frame>
    <frame>
      <ip>0x51F5242</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::childAdded(Wt::WWidget*)</fn>
    </frame>
    <frame>
      <ip>0x51F5369</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::addChild(Wt::WWidget*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x5c7</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>50 bytes in 1 blocks are possibly lost in loss record 539 of 808</text>
    <leakedbytes>50</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5025E75</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x5c8</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>50 bytes in 1 blocks are possibly lost in loss record 540 of 808</text>
    <leakedbytes>50</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56BF58B</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x5c9</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>50 bytes in 1 blocks are possibly lost in loss record 541 of 808</text>
    <leakedbytes>50</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56C0E99</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x5ca</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>51 bytes in 1 blocks are possibly lost in loss record 542 of 808</text>
    <leakedbytes>51</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56C0EED</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x5cb</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>51 bytes in 1 blocks are possibly lost in loss record 543 of 808</text>
    <leakedbytes>51</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56C103D</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x5cc</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>52 bytes in 1 blocks are possibly lost in loss record 544 of 808</text>
    <leakedbytes>52</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56BF50D</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x5cd</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>52 bytes in 2 blocks are possibly lost in loss record 545 of 808</text>
    <leakedbytes>52</leakedbytes>
    <leakedblocks>2</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CC902</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CCA9B</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5117255</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WLogger::configure(std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5172033</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WServer::initLogger(std::string const&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x529CE78</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::Configuration::readConfiguration(bool)</fn>
    </frame>
    <frame>
      <ip>0x529D7D5</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::Configuration::Configuration(std::string const&amp;, std::string const&amp;, std::string const&amp;, Wt::WServer*)</fn>
    </frame>
    <frame>
      <ip>0x5172123</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WServer::configuration()</fn>
    </frame>
    <frame>
      <ip>0x52B639C</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebController::WebController(Wt::WServer&amp;, std::string const&amp;, bool)</fn>
    </frame>
    <frame>
      <ip>0x5700EF4</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WServer::setServerConfiguration(int, char**, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5701AB6</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WRun(int, char**, boost::function&lt;Wt::WApplication* ()(Wt::WEnvironment const&amp;)&gt;)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x5ce</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>53 bytes in 1 blocks are possibly lost in loss record 546 of 808</text>
    <leakedbytes>53</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56C1385</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x5cf</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>54 bytes in 1 blocks are possibly lost in loss record 547 of 808</text>
    <leakedbytes>54</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CD477</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CDBBB</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56EBA1B</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>http::server::Configuration::Configuration(http::server::Configuration const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56E86CE</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>http::server::Server::Server(http::server::Configuration const&amp;, Wt::WServer&amp;)</fn>
    </frame>
    <frame>
      <ip>0x570177A</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WServer::start()</fn>
    </frame>
    <frame>
      <ip>0x5701B86</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WRun(int, char**, boost::function&lt;Wt::WApplication* ()(Wt::WEnvironment const&amp;)&gt;)</fn>
    </frame>
    <frame>
      <ip>0x40E276</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>main</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>main.cpp</file>
      <line>11</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x5d0</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>54 bytes in 1 blocks are possibly lost in loss record 548 of 808</text>
    <leakedbytes>54</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x51177FA</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56C6BA3</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>http::server::Configuration::readOptions(boost::program_options::variables_map const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56C7BFA</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>http::server::Configuration::setOptions(int, char**, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5700F3B</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WServer::setServerConfiguration(int, char**, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5701AB6</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WRun(int, char**, boost::function&lt;Wt::WApplication* ()(Wt::WEnvironment const&amp;)&gt;)</fn>
    </frame>
    <frame>
      <ip>0x40E276</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>main</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>main.cpp</file>
      <line>11</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x5d1</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>55 bytes in 1 blocks are possibly lost in loss record 549 of 808</text>
    <leakedbytes>55</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56BF4B9</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x5d2</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>55 bytes in 1 blocks are possibly lost in loss record 550 of 808</text>
    <leakedbytes>55</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56C1289</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x5d7</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>57 bytes in 1 blocks are possibly lost in loss record 555 of 808</text>
    <leakedbytes>57</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CD477</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CD55F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::reserve(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5162CA7</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WRandom::generateId(int)</fn>
    </frame>
    <frame>
      <ip>0x52B659E</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebController::WebController(Wt::WServer&amp;, std::string const&amp;, bool)</fn>
    </frame>
    <frame>
      <ip>0x5700EF4</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WServer::setServerConfiguration(int, char**, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5701AB6</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WRun(int, char**, boost::function&lt;Wt::WApplication* ()(Wt::WEnvironment const&amp;)&gt;)</fn>
    </frame>
    <frame>
      <ip>0x40E276</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>main</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>main.cpp</file>
      <line>11</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x5d8</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>58 bytes in 1 blocks are possibly lost in loss record 556 of 808</text>
    <leakedbytes>58</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56C11E1</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x5da</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>61 bytes in 1 blocks are possibly lost in loss record 558 of 808</text>
    <leakedbytes>61</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CD477</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CDBBB</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56EBAEE</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>http::server::Configuration::Configuration(http::server::Configuration const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56E86CE</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>http::server::Server::Server(http::server::Configuration const&amp;, Wt::WServer&amp;)</fn>
    </frame>
    <frame>
      <ip>0x570177A</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WServer::start()</fn>
    </frame>
    <frame>
      <ip>0x5701B86</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WRun(int, char**, boost::function&lt;Wt::WApplication* ()(Wt::WEnvironment const&amp;)&gt;)</fn>
    </frame>
    <frame>
      <ip>0x40E276</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>main</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>main.cpp</file>
      <line>11</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x5db</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>61 bytes in 2 blocks are possibly lost in loss record 559 of 808</text>
    <leakedbytes>61</leakedbytes>
    <leakedblocks>2</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56CC171</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>boost::program_options::basic_command_line_parser&lt;char&gt;::basic_command_line_parser(int, char const* const*)</fn>
    </frame>
    <frame>
      <ip>0x56D0531</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>boost::program_options::basic_parsed_options&lt;char&gt; boost::program_options::parse_command_line&lt;char&gt;(int, char const* const*, boost::program_options::options_description const&amp;, int, boost::function1&lt;std::pair&lt;std::string, std::string&gt;, std::string const&amp;&gt;)</fn>
    </frame>
    <frame>
      <ip>0x56C7CB0</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>http::server::Configuration::setOptions(int, char**, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5700F3B</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WServer::setServerConfiguration(int, char**, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5701AB6</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WRun(int, char**, boost::function&lt;Wt::WApplication* ()(Wt::WEnvironment const&amp;)&gt;)</fn>
    </frame>
    <frame>
      <ip>0x40E276</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>main</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>main.cpp</file>
      <line>11</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x5dc</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>62 bytes in 1 blocks are possibly lost in loss record 560 of 808</text>
    <leakedbytes>62</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56BF4E3</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x5e4</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 568 of 808</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1FC</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x773E4A2</ip>
      <obj>/usr/lib/libboost_filesystem.so.1.46.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x5e5</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are possibly lost in loss record 569 of 808</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1FC</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x773E6C2</ip>
      <obj>/usr/lib/libboost_filesystem.so.1.46.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x5e6</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>64 bytes in 2 blocks are possibly lost in loss record 570 of 808</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>2</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x529A410</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x529C1FB</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::Configuration::readApplicationSettings(rapidxml::xml_node&lt;char&gt;*)</fn>
    </frame>
    <frame>
      <ip>0x529CECA</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::Configuration::readConfiguration(bool)</fn>
    </frame>
    <frame>
      <ip>0x529D7D5</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::Configuration::Configuration(std::string const&amp;, std::string const&amp;, std::string const&amp;, Wt::WServer*)</fn>
    </frame>
    <frame>
      <ip>0x5172123</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WServer::configuration()</fn>
    </frame>
    <frame>
      <ip>0x52B639C</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebController::WebController(Wt::WServer&amp;, std::string const&amp;, bool)</fn>
    </frame>
    <frame>
      <ip>0x5700EF4</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WServer::setServerConfiguration(int, char**, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5701AB6</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WRun(int, char**, boost::function&lt;Wt::WApplication* ()(Wt::WEnvironment const&amp;)&gt;)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x5e7</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>65 bytes in 1 blocks are possibly lost in loss record 571 of 808</text>
    <leakedbytes>65</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56C1235</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x5f8</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>72 bytes in 2 blocks are possibly lost in loss record 588 of 808</text>
    <leakedbytes>72</leakedbytes>
    <leakedblocks>2</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CC902</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CCA9B</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x52996ED</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x529C1DF</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::Configuration::readApplicationSettings(rapidxml::xml_node&lt;char&gt;*)</fn>
    </frame>
    <frame>
      <ip>0x529CECA</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::Configuration::readConfiguration(bool)</fn>
    </frame>
    <frame>
      <ip>0x529D7D5</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::Configuration::Configuration(std::string const&amp;, std::string const&amp;, std::string const&amp;, Wt::WServer*)</fn>
    </frame>
    <frame>
      <ip>0x5172123</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WServer::configuration()</fn>
    </frame>
    <frame>
      <ip>0x52B639C</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebController::WebController(Wt::WServer&amp;, std::string const&amp;, bool)</fn>
    </frame>
    <frame>
      <ip>0x5700EF4</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WServer::setServerConfiguration(int, char**, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5701AB6</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WRun(int, char**, boost::function&lt;Wt::WApplication* ()(Wt::WEnvironment const&amp;)&gt;)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x605</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>83 bytes in 1 blocks are possibly lost in loss record 601 of 808</text>
    <leakedbytes>83</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CD477</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CD55F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::reserve(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x56C7206</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>http::server::Configuration::readOptions(boost::program_options::variables_map const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56C7BFA</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>http::server::Configuration::setOptions(int, char**, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5700F3B</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WServer::setServerConfiguration(int, char**, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5701AB6</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WRun(int, char**, boost::function&lt;Wt::WApplication* ()(Wt::WEnvironment const&amp;)&gt;)</fn>
    </frame>
    <frame>
      <ip>0x40E276</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>main</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>main.cpp</file>
      <line>11</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x608</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>90 bytes in 1 blocks are possibly lost in loss record 604 of 808</text>
    <leakedbytes>90</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x773E4DA</ip>
      <obj>/usr/lib/libboost_filesystem.so.1.46.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x609</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>90 bytes in 1 blocks are possibly lost in loss record 605 of 808</text>
    <leakedbytes>90</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x773E6FA</ip>
      <obj>/usr/lib/libboost_filesystem.so.1.46.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x617</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>102 bytes in 1 blocks are possibly lost in loss record 619 of 808</text>
    <leakedbytes>102</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56C0F17</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x619</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>106 bytes in 1 blocks are possibly lost in loss record 621 of 808</text>
    <leakedbytes>106</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56C0D73</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x61a</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>108 bytes in 1 blocks are possibly lost in loss record 622 of 808</text>
    <leakedbytes>108</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56C0DC7</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x61b</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>109 bytes in 1 blocks are possibly lost in loss record 623 of 808</text>
    <leakedbytes>109</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56C0E1B</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x61c</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>110 bytes in 1 blocks are possibly lost in loss record 624 of 808</text>
    <leakedbytes>110</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56C0F6B</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x61d</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>110 bytes in 1 blocks are possibly lost in loss record 625 of 808</text>
    <leakedbytes>110</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56C110F</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x61e</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>110 bytes in 1 blocks are possibly lost in loss record 626 of 808</text>
    <leakedbytes>110</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56C1163</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x61f</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>111 bytes in 1 blocks are possibly lost in loss record 627 of 808</text>
    <leakedbytes>111</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CD477</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CD55F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::reserve(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CD814</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::append(char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5110148</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::JSlot::setJavaScript(std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x501D8DD</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x620</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>111 bytes in 1 blocks are possibly lost in loss record 628 of 808</text>
    <leakedbytes>111</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x501EAFF</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x625</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>114 bytes in 1 blocks are possibly lost in loss record 633 of 808</text>
    <leakedbytes>114</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56C1067</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x626</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>114 bytes in 1 blocks are possibly lost in loss record 634 of 808</text>
    <leakedbytes>114</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56C1307</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x627</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>116 bytes in 1 blocks are possibly lost in loss record 635 of 808</text>
    <leakedbytes>116</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56C0FBF</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x628</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>116 bytes in 1 blocks are possibly lost in loss record 636 of 808</text>
    <leakedbytes>116</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56C10BB</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x629</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>116 bytes in 1 blocks are possibly lost in loss record 637 of 808</text>
    <leakedbytes>116</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x502D6FF</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*&gt;(char*, char*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63AC3CC</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::str() const</fn>
    </frame>
    <frame>
      <ip>0x444D54</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>PacketCenter::process_encryption(PacketType)</fn>
      <dir>/home/tom/dev/Mogu/src/crypt</dir>
      <file>PacketCenter.cpp</file>
      <line>213</line>
    </frame>
    <frame>
      <ip>0x444E51</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>PacketCenter::encrypt()</fn>
      <dir>/home/tom/dev/Mogu/src/crypt</dir>
      <file>PacketCenter.cpp</file>
      <line>223</line>
    </frame>
    <frame>
      <ip>0x4153B1</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Application::encrypt(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Static.cpp</file>
      <line>31</line>
    </frame>
    <frame>
      <ip>0x4279B7</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::addGoo(std::string const&amp;)</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>197</line>
    </frame>
    <frame>
      <ip>0x4285B0</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::do_if_has_children()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>338</line>
    </frame>
    <frame>
      <ip>0x427F6E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::createContent()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>283</line>
    </frame>
    <frame>
      <ip>0x4278A7</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::load()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>180</line>
    </frame>
    <frame>
      <ip>0x51F2743</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::doLoad(Wt::WWidget*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x62a</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>116 bytes in 1 blocks are possibly lost in loss record 638 of 808</text>
    <leakedbytes>116</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x502D6FF</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*&gt;(char*, char*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63AC3CC</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::str() const</fn>
    </frame>
    <frame>
      <ip>0x444D54</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>PacketCenter::process_encryption(PacketType)</fn>
      <dir>/home/tom/dev/Mogu/src/crypt</dir>
      <file>PacketCenter.cpp</file>
      <line>213</line>
    </frame>
    <frame>
      <ip>0x444E51</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>PacketCenter::encrypt()</fn>
      <dir>/home/tom/dev/Mogu/src/crypt</dir>
      <file>PacketCenter.cpp</file>
      <line>223</line>
    </frame>
    <frame>
      <ip>0x4153B1</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Application::encrypt(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Static.cpp</file>
      <line>31</line>
    </frame>
    <frame>
      <ip>0x415538</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Application::setAuthToken(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Static.cpp</file>
      <line>62</line>
    </frame>
    <frame>
      <ip>0x40F06C</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Mogu::Mogu(Wt::WEnvironment const&amp;)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>Mogu.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x40E206</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>createApplication(Wt::WEnvironment const&amp;)</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>main.cpp</file>
      <line>5</line>
    </frame>
    <frame>
      <ip>0x40EDB0</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::detail::function::function_invoker1&lt;Wt::WApplication* (*)(Wt::WEnvironment const&amp;), Wt::WApplication*, Wt::WEnvironment const&amp;&gt;::invoke(boost::detail::function::function_buffer&amp;, Wt::WEnvironment const&amp;)</fn>
      <dir>/usr/include/boost/function</dir>
      <file>function_template.hpp</file>
      <line>95</line>
    </frame>
    <frame>
      <ip>0x52B62A9</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebController::doCreateApplication(Wt::WebSession*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x62f</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>122 bytes in 1 blocks are possibly lost in loss record 643 of 808</text>
    <leakedbytes>122</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56C12B3</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x630</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>123 bytes in 1 blocks are possibly lost in loss record 644 of 808</text>
    <leakedbytes>123</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CD477</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CD55F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::reserve(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CD814</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::append(char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5110148</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::JSlot::setJavaScript(std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x501D927</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x631</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>124 bytes in 1 blocks are possibly lost in loss record 645 of 808</text>
    <leakedbytes>124</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56C0E6F</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x632</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>126 bytes in 1 blocks are possibly lost in loss record 646 of 808</text>
    <leakedbytes>126</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56C0EC3</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x633</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>126 bytes in 1 blocks are possibly lost in loss record 647 of 808</text>
    <leakedbytes>126</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56C1013</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x63a</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>130 bytes in 1 blocks are possibly lost in loss record 654 of 808</text>
    <leakedbytes>130</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56C135B</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x63b</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>134 bytes in 1 blocks are possibly lost in loss record 655 of 808</text>
    <leakedbytes>134</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56C125F</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x63c</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>139 bytes in 1 blocks are possibly lost in loss record 656 of 808</text>
    <leakedbytes>139</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CD477</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CD55F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::reserve(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x51971F9</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::toUTF8(std::basic_string&lt;wchar_t, std::char_traits&lt;wchar_t&gt;, std::allocator&lt;wchar_t&gt; &gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x519761A</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::toUTF8(std::string const&amp;, std::locale const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5190076</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WString::WString(std::string const&amp;, Wt::CharEncoding)</fn>
    </frame>
    <frame>
      <ip>0x41FE6B</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::directListeners(Events::BroadcastMessage*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>250</line>
    </frame>
    <frame>
      <ip>0x41F91B</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::ActionCenter::submitBroadcast(Events::BroadcastMessage*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>MoldableActionCenter.cpp</file>
      <line>135</line>
    </frame>
    <frame>
      <ip>0x415FCE</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::handleVoidSignal(Enums::SignalTriggers::SignalTrigger)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>106</line>
    </frame>
    <frame>
      <ip>0x4160E0</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::mouseoverSlot()</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>131</line>
    </frame>
    <frame>
      <ip>0x41AF81</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>boost::_mfi::mf0&lt;void, Events::EventBindery&gt;::operator()(Events::EventBindery*) const</fn>
      <dir>/usr/include/boost/bind</dir>
      <file>mem_fn_template.hpp</file>
      <line>49</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x63d</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>140 bytes in 1 blocks are possibly lost in loss record 657 of 808</text>
    <leakedbytes>140</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56C11B7</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x645</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>154 bytes in 1 blocks are possibly lost in loss record 665 of 808</text>
    <leakedbytes>154</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x56C120B</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x400F305</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>call_init.part.0</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x400F3DE</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_init</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-init.c</file>
      <line>52</line>
    </frame>
    <frame>
      <ip>0x40016E9</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
    </frame>
    <frame>
      <ip>0x7</ip>
    </frame>
    <frame>
      <ip>0x7FF000382</ip>
    </frame>
    <frame>
      <ip>0x7FF000397</ip>
    </frame>
    <frame>
      <ip>0x7FF0003A1</ip>
    </frame>
  </stack>
</error>

<error>
  <unique>0x65a</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>252 bytes in 7 blocks are possibly lost in loss record 686 of 808</text>
    <leakedbytes>252</leakedbytes>
    <leakedblocks>7</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x529A410</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
    </frame>
    <frame>
      <ip>0x529BFD8</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::Configuration::readApplicationSettings(rapidxml::xml_node&lt;char&gt;*)</fn>
    </frame>
    <frame>
      <ip>0x529CECA</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::Configuration::readConfiguration(bool)</fn>
    </frame>
    <frame>
      <ip>0x529D7D5</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::Configuration::Configuration(std::string const&amp;, std::string const&amp;, std::string const&amp;, Wt::WServer*)</fn>
    </frame>
    <frame>
      <ip>0x5172123</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WServer::configuration()</fn>
    </frame>
    <frame>
      <ip>0x52B639C</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WebController::WebController(Wt::WServer&amp;, std::string const&amp;, bool)</fn>
    </frame>
    <frame>
      <ip>0x5700EF4</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WServer::setServerConfiguration(int, char**, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5701AB6</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WRun(int, char**, boost::function&lt;Wt::WApplication* ()(Wt::WEnvironment const&amp;)&gt;)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x65b</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>280 (24 direct, 256 indirect) bytes in 1 blocks are definitely lost in loss record 687 of 808</text>
    <leakedbytes>280</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5935324</ip>
      <obj>/usr/lib/libboost_signals.so.1.46.1</obj>
      <fn>boost::signals::detail::signal_base::signal_base(boost::function2&lt;bool, boost::signals::detail::stored_group, boost::signals::detail::stored_group&gt; const&amp;, boost::any const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5174C6B</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::EventSignalBase::EventSignalBase(char const*, Wt::WObject*)</fn>
    </frame>
    <frame>
      <ip>0x51FC48C</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::EventSignal&lt;Wt::WMouseEvent&gt;::EventSignal(char const*, Wt::WObject*)</fn>
    </frame>
    <frame>
      <ip>0x51F5012</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::mouseEventSignal(char const*, bool)</fn>
    </frame>
    <frame>
      <ip>0x415BF3</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::EventBindery(Goo::Moldable*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>74</line>
    </frame>
    <frame>
      <ip>0x4283E6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::do_if_has_events()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>321</line>
    </frame>
    <frame>
      <ip>0x4278C8</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::load()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>183</line>
    </frame>
    <frame>
      <ip>0x51F2743</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::doLoad(Wt::WWidget*)</fn>
    </frame>
    <frame>
      <ip>0x51F5242</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::childAdded(Wt::WWidget*)</fn>
    </frame>
    <frame>
      <ip>0x51F5369</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::addChild(Wt::WWidget*)</fn>
    </frame>
    <frame>
      <ip>0x50AC6A8</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WContainerWidget::addWidget(Wt::WWidget*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x65c</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>280 (24 direct, 256 indirect) bytes in 1 blocks are definitely lost in loss record 688 of 808</text>
    <leakedbytes>280</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5935324</ip>
      <obj>/usr/lib/libboost_signals.so.1.46.1</obj>
      <fn>boost::signals::detail::signal_base::signal_base(boost::function2&lt;bool, boost::signals::detail::stored_group, boost::signals::detail::stored_group&gt; const&amp;, boost::any const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5174C6B</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::EventSignalBase::EventSignalBase(char const*, Wt::WObject*)</fn>
    </frame>
    <frame>
      <ip>0x51FC48C</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::EventSignal&lt;Wt::WMouseEvent&gt;::EventSignal(char const*, Wt::WObject*)</fn>
    </frame>
    <frame>
      <ip>0x51F5012</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::mouseEventSignal(char const*, bool)</fn>
    </frame>
    <frame>
      <ip>0x415CB9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::EventBindery(Goo::Moldable*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>83</line>
    </frame>
    <frame>
      <ip>0x4283E6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::do_if_has_events()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>321</line>
    </frame>
    <frame>
      <ip>0x4278C8</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::load()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>183</line>
    </frame>
    <frame>
      <ip>0x51F2743</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::doLoad(Wt::WWidget*)</fn>
    </frame>
    <frame>
      <ip>0x51F5242</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::childAdded(Wt::WWidget*)</fn>
    </frame>
    <frame>
      <ip>0x51F5369</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::addChild(Wt::WWidget*)</fn>
    </frame>
    <frame>
      <ip>0x50AC6A8</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WContainerWidget::addWidget(Wt::WWidget*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x65d</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>280 (24 direct, 256 indirect) bytes in 1 blocks are definitely lost in loss record 689 of 808</text>
    <leakedbytes>280</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5935324</ip>
      <obj>/usr/lib/libboost_signals.so.1.46.1</obj>
      <fn>boost::signals::detail::signal_base::signal_base(boost::function2&lt;bool, boost::signals::detail::stored_group, boost::signals::detail::stored_group&gt; const&amp;, boost::any const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5174C6B</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::EventSignalBase::EventSignalBase(char const*, Wt::WObject*)</fn>
    </frame>
    <frame>
      <ip>0x51FC48C</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::EventSignal&lt;Wt::WMouseEvent&gt;::EventSignal(char const*, Wt::WObject*)</fn>
    </frame>
    <frame>
      <ip>0x51F5012</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::mouseEventSignal(char const*, bool)</fn>
    </frame>
    <frame>
      <ip>0x415D19</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::EventBindery(Goo::Moldable*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>87</line>
    </frame>
    <frame>
      <ip>0x4283E6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::do_if_has_events()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>321</line>
    </frame>
    <frame>
      <ip>0x4278C8</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::load()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>183</line>
    </frame>
    <frame>
      <ip>0x51F2743</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::doLoad(Wt::WWidget*)</fn>
    </frame>
    <frame>
      <ip>0x51F5242</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::childAdded(Wt::WWidget*)</fn>
    </frame>
    <frame>
      <ip>0x51F5369</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::addChild(Wt::WWidget*)</fn>
    </frame>
    <frame>
      <ip>0x50AC6A8</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WContainerWidget::addWidget(Wt::WWidget*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x686</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>537 bytes in 1 blocks are possibly lost in loss record 730 of 808</text>
    <leakedbytes>537</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CD477</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CD55F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::reserve(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63AA555</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow(int)</fn>
    </frame>
    <frame>
      <ip>0x63AECB5</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn(char const*, long)</fn>
    </frame>
    <frame>
      <ip>0x63A5CE3</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt;(std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, char const*, long)</fn>
    </frame>
    <frame>
      <ip>0x42B0B9</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Redis::join(std::string, std::string, std::string, std::string, std::string)</fn>
      <dir>/home/tom/dev/Mogu/src/Redis</dir>
      <file>RedisCore.cpp</file>
      <line>39</line>
    </frame>
    <frame>
      <ip>0x42B26A</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Redis::command(std::string, std::string, std::string, std::string, std::string)</fn>
      <dir>/home/tom/dev/Mogu/src/Redis</dir>
      <file>RedisCore.cpp</file>
      <line>63</line>
    </frame>
    <frame>
      <ip>0x43F2C8</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Parsers::StyleParser::getWidgetType(Goo::Moldable*)</fn>
      <dir>/home/tom/dev/Mogu/src/Parsers</dir>
      <file>StyleParser.cpp</file>
      <line>29</line>
    </frame>
    <frame>
      <ip>0x42752E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::setContentVariables()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>111</line>
    </frame>
    <frame>
      <ip>0x42702E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::Moldable(std::string const&amp;, Wt::WContainerWidget*)</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>67</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x6af</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>1,052 bytes in 30 blocks are possibly lost in loss record 771 of 808</text>
    <leakedbytes>1052</leakedbytes>
    <leakedblocks>30</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x63CC708</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x63CE0E4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x63CE1C2</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x42B482</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Redis::toString()</fn>
      <dir>/home/tom/dev/Mogu/src/Redis</dir>
      <file>RedisCore.cpp</file>
      <line>76</line>
    </frame>
    <frame>
      <ip>0x41C144</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventNodeExtractor::EventNodeExtractor(std::string)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>EventNodeExtractor.cpp</file>
      <line>34</line>
    </frame>
    <frame>
      <ip>0x4159CF</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::EventBindery(Goo::Moldable*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>49</line>
    </frame>
    <frame>
      <ip>0x4283E6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::do_if_has_events()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>321</line>
    </frame>
    <frame>
      <ip>0x4278C8</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::load()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>183</line>
    </frame>
    <frame>
      <ip>0x51F2743</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::doLoad(Wt::WWidget*)</fn>
    </frame>
    <frame>
      <ip>0x51F5242</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::childAdded(Wt::WWidget*)</fn>
    </frame>
    <frame>
      <ip>0x51F5369</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::addChild(Wt::WWidget*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x6c0</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>1,858 (464 direct, 1,394 indirect) bytes in 1 blocks are definitely lost in loss record 788 of 808</text>
    <leakedbytes>1858</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4279DF</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::addGoo(std::string const&amp;)</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>197</line>
    </frame>
    <frame>
      <ip>0x4285B0</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::do_if_has_children()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>338</line>
    </frame>
    <frame>
      <ip>0x427F6E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::createContent()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>283</line>
    </frame>
    <frame>
      <ip>0x4278A7</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::load()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>180</line>
    </frame>
    <frame>
      <ip>0x51F2743</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::doLoad(Wt::WWidget*)</fn>
    </frame>
    <frame>
      <ip>0x51F5242</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::childAdded(Wt::WWidget*)</fn>
    </frame>
    <frame>
      <ip>0x51F5369</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::addChild(Wt::WWidget*)</fn>
    </frame>
    <frame>
      <ip>0x50AC6A8</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WContainerWidget::addWidget(Wt::WWidget*)</fn>
    </frame>
    <frame>
      <ip>0x5185568</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WStackedWidget::addWidget(Wt::WWidget*)</fn>
    </frame>
    <frame>
      <ip>0x427AB2</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::addGoo(std::string const&amp;)</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>207</line>
    </frame>
    <frame>
      <ip>0x4285B0</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::do_if_has_children()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>338</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x6c6</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>3,040 bytes in 10 blocks are possibly lost in loss record 794 of 808</text>
    <leakedbytes>3040</leakedbytes>
    <leakedblocks>10</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C29DB4</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>calloc</fn>
    </frame>
    <frame>
      <ip>0x4012074</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.15.so</obj>
      <fn>_dl_allocate_tls</fn>
      <dir>/build/buildd/eglibc-2.15/elf</dir>
      <file>dl-tls.c</file>
      <line>297</line>
    </frame>
    <frame>
      <ip>0x6BEFABC</ip>
      <obj>/lib/x86_64-linux-gnu/libpthread-2.15.so</obj>
      <fn>pthread_create@@GLIBC_2.2.5</fn>
      <dir>/build/buildd/eglibc-2.15/nptl</dir>
      <file>allocatestack.c</file>
      <line>571</line>
    </frame>
    <frame>
      <ip>0x6E10BBE</ip>
      <obj>/usr/lib/libboost_thread.so.1.46.1</obj>
      <fn>boost::thread::start_thread()</fn>
    </frame>
    <frame>
      <ip>0x51051E4</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WIOService::start()</fn>
    </frame>
    <frame>
      <ip>0x5701795</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WServer::start()</fn>
    </frame>
    <frame>
      <ip>0x5701B86</ip>
      <obj>/usr/lib/libwthttp.so.3.2.1</obj>
      <fn>Wt::WRun(int, char**, boost::function&lt;Wt::WApplication* ()(Wt::WEnvironment const&amp;)&gt;)</fn>
    </frame>
    <frame>
      <ip>0x40E276</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>main</fn>
      <dir>/home/tom/dev/Mogu/src</dir>
      <file>main.cpp</file>
      <line>11</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x6d4</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>24,051 (2,208 direct, 21,843 indirect) bytes in 46 blocks are definitely lost in loss record 808 of 808</text>
    <leakedbytes>24051</leakedbytes>
    <leakedblocks>46</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B1C7</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4159C1</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Events::EventBindery::EventBindery(Goo::Moldable*)</fn>
      <dir>/home/tom/dev/Mogu/src/Events</dir>
      <file>Bindery.cpp</file>
      <line>49</line>
    </frame>
    <frame>
      <ip>0x4283E6</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::do_if_has_events()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>321</line>
    </frame>
    <frame>
      <ip>0x4278C8</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::load()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>183</line>
    </frame>
    <frame>
      <ip>0x51F2743</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::doLoad(Wt::WWidget*)</fn>
    </frame>
    <frame>
      <ip>0x51F5242</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::childAdded(Wt::WWidget*)</fn>
    </frame>
    <frame>
      <ip>0x51F5369</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WWebWidget::addChild(Wt::WWidget*)</fn>
    </frame>
    <frame>
      <ip>0x50AC6A8</ip>
      <obj>/usr/lib/libwt.so.3.2.1</obj>
      <fn>Wt::WContainerWidget::addWidget(Wt::WWidget*)</fn>
    </frame>
    <frame>
      <ip>0x427ADA</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::addGoo(std::string const&amp;)</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>211</line>
    </frame>
    <frame>
      <ip>0x4285B0</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::do_if_has_children()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>338</line>
    </frame>
    <frame>
      <ip>0x427F6E</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::createContent()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>283</line>
    </frame>
    <frame>
      <ip>0x4278A7</ip>
      <obj>/home/tom/dev/Mogu/mogu-server</obj>
      <fn>Goo::Moldable::load()</fn>
      <dir>/home/tom/dev/Mogu/src/Core</dir>
      <file>Moldable.cpp</file>
      <line>180</line>
    </frame>
  </stack>
</error>

<errorcounts>
  <pair>
    <count>11</count>
    <unique>0x7f</unique>
  </pair>
  <pair>
    <count>11</count>
    <unique>0x7e</unique>
  </pair>
  <pair>
    <count>33</count>
    <unique>0x7b</unique>
  </pair>
  <pair>
    <count>11</count>
    <unique>0x7a</unique>
  </pair>
  <pair>
    <count>2</count>
    <unique>0x1b4</unique>
  </pair>
  <pair>
    <count>2</count>
    <unique>0x1b3</unique>
  </pair>
  <pair>
    <count>4</count>
    <unique>0x173</unique>
  </pair>
  <pair>
    <count>2</count>
    <unique>0x375</unique>
  </pair>
  <pair>
    <count>3</count>
    <unique>0x12b</unique>
  </pair>
  <pair>
    <count>7</count>
    <unique>0x72</unique>
  </pair>
  <pair>
    <count>5</count>
    <unique>0x71</unique>
  </pair>
  <pair>
    <count>11</count>
    <unique>0x70</unique>
  </pair>
  <pair>
    <count>146</count>
    <unique>0x5b</unique>
  </pair>
  <pair>
    <count>22</count>
    <unique>0x5a</unique>
  </pair>
  <pair>
    <count>22</count>
    <unique>0x59</unique>
  </pair>
  <pair>
    <count>22</count>
    <unique>0x58</unique>
  </pair>
  <pair>
    <count>28</count>
    <unique>0x57</unique>
  </pair>
  <pair>
    <count>154</count>
    <unique>0x55</unique>
  </pair>
  <pair>
    <count>54</count>
    <unique>0x4c</unique>
  </pair>
  <pair>
    <count>54</count>
    <unique>0x4b</unique>
  </pair>
  <pair>
    <count>54</count>
    <unique>0x4a</unique>
  </pair>
  <pair>
    <count>5</count>
    <unique>0x77</unique>
  </pair>
  <pair>
    <count>2</count>
    <unique>0x12a</unique>
  </pair>
  <pair>
    <count>6</count>
    <unique>0x75</unique>
  </pair>
  <pair>
    <count>6</count>
    <unique>0x74</unique>
  </pair>
  <pair>
    <count>7</count>
    <unique>0x79</unique>
  </pair>
  <pair>
    <count>3</count>
    <unique>0xd1</unique>
  </pair>
  <pair>
    <count>3</count>
    <unique>0xd0</unique>
  </pair>
  <pair>
    <count>3</count>
    <unique>0xcf</unique>
  </pair>
  <pair>
    <count>4</count>
    <unique>0xce</unique>
  </pair>
  <pair>
    <count>4</count>
    <unique>0xcd</unique>
  </pair>
  <pair>
    <count>5</count>
    <unique>0xcc</unique>
  </pair>
  <pair>
    <count>4</count>
    <unique>0xcb</unique>
  </pair>
  <pair>
    <count>4</count>
    <unique>0xca</unique>
  </pair>
  <pair>
    <count>4</count>
    <unique>0xc9</unique>
  </pair>
  <pair>
    <count>4</count>
    <unique>0xc8</unique>
  </pair>
  <pair>
    <count>4</count>
    <unique>0xc7</unique>
  </pair>
  <pair>
    <count>2</count>
    <unique>0x215</unique>
  </pair>
  <pair>
    <count>4</count>
    <unique>0xc3</unique>
  </pair>
  <pair>
    <count>4</count>
    <unique>0xc2</unique>
  </pair>
  <pair>
    <count>4</count>
    <unique>0xc1</unique>
  </pair>
  <pair>
    <count>5</count>
    <unique>0xc0</unique>
  </pair>
  <pair>
    <count>6</count>
    <unique>0xbf</unique>
  </pair>
  <pair>
    <count>26</count>
    <unique>0x4d</unique>
  </pair>
  <pair>
    <count>6</count>
    <unique>0x78</unique>
  </pair>
  <pair>
    <count>2</count>
    <unique>0x174</unique>
  </pair>
  <pair>
    <count>4</count>
    <unique>0x76</unique>
  </pair>
  <pair>
    <count>4</count>
    <unique>0x73</unique>
  </pair>
  <pair>
    <count>2</count>
    <unique>0xc6</unique>
  </pair>
  <pair>
    <count>2</count>
    <unique>0xc5</unique>
  </pair>
  <pair>
    <count>2</count>
    <unique>0xc4</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x23c</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x23b</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x23a</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x239</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x238</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x237</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x236</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x235</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x234</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x233</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x232</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x231</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x230</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x22f</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x22e</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x22d</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x22c</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x22b</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x22a</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x229</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x228</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x227</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x226</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x225</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x224</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x223</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x222</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x221</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x220</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x21f</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x21e</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x21d</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x21c</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x214</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x213</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x212</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x211</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x210</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x1d4</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x1d3</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x1d2</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x1d1</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x1d0</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x1cf</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x1ce</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x1cd</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x1cc</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x1cb</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x1ca</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x1c9</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x1c8</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x1c7</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x1c6</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x1c5</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x1c4</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x1c3</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x1c1</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x1c0</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x1bf</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x1be</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x1bd</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x1bc</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x1bb</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x1ba</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x1b9</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x1b8</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x1b7</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x12c</unique>
  </pair>
  <pair>
    <count>2</count>
    <unique>0x47</unique>
  </pair>
  <pair>
    <count>2</count>
    <unique>0x46</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x45</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x44</unique>
  </pair>
  <pair>
    <count>19</count>
    <unique>0x3</unique>
  </pair>
  <pair>
    <count>19</count>
    <unique>0x2</unique>
  </pair>
  <pair>
    <count>5</count>
    <unique>0xd</unique>
  </pair>
  <pair>
    <count>5</count>
    <unique>0xc</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x33</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x32</unique>
  </pair>
  <pair>
    <count>4</count>
    <unique>0xb</unique>
  </pair>
  <pair>
    <count>4</count>
    <unique>0xa</unique>
  </pair>
  <pair>
    <count>4</count>
    <unique>0x9</unique>
  </pair>
  <pair>
    <count>4</count>
    <unique>0x8</unique>
  </pair>
</errorcounts>

<suppcounts>
  <pair>
    <count>2</count>
    <name>dl-hack3-cond-1</name>
  </pair>
</suppcounts>

</valgrindoutput>

