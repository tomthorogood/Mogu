[runtime options]

# This is the widget that will act as your root widget. 
# It is the first widget that will be created when a user
# visits your application, and must be the parent of any
# other children you want displayed by default.
root        :   wrapper

# This is the place where all static content (CSS,images, etc.) 
# will be served from.
document-root   :   /usr/share/Mogu 

# Subdirectories of documentroot that you want to be accessible
# directly (for the purposes of loading images, etc.)
document-subs   :   /resources

http-address    :   0.0.0.0
http-port       :   9090

# The cli options section sets sensible defaults for 
# ...command line options. This can save you having to
# type them over and over, but can be overridden by
# explicitly calling them.
# 
[cli options]
verbose : false

# Whether or not you want to always answer prompts with 'yes'.
# Be careful with this. This is your last defense against 
# unintentional data loss when importing new content! There is
# no command line override to this statement.
assume-yes  : false

always-flush: false

# The next section details which prefixes you want to [A]lways or [N]ever 
# flush when the --flush option is used. Any prefix not included here will
# be prompted (note that 'assume yes' overrides these settings). 
# A prefix listed as 'A' will always be flushed even if 'assume-yes' is false.
# A prefix listed as 'N' will never be flushed even if 'assume-yes' is true.
# A prefix listed as 'Q' will always ask no matter what the status of assume-yes is.
#
# Below is the recommended configuration.
[flush configuration]

# When you are importing new widgets, it's usually good to flush 
# old widgets so you don't wind up keeping ancient relics in your
# database for no reason.
widgets     :   A
validators  :   A
templates   :   A
temp        :   A

# The same goes for static data. You may want to set this to 'N' if
# you are storing dynamic data in this prefix, even though it's a 
# dangerous thing to do.
data        :   A 

# You should never flush user data unintentionally, unless you are
# not in a production environment.
user        :   N
group       :   N

# You shouldn't ever explicitly do anything with the meta keyspace, 
# as it's designed to be self-regulating.
meta        :   N
