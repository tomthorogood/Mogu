#-------------------------------#
# Default Build Settings

# If you wish to change the default deployment of 
# the database config, change it here.
DBCONFIG_DIR := /usr/share/Mogu

# Default optimization level is 0
o := 0

# If you already have a mogu.conf file, you can 
# make with CONFIG=/path/to/mogu.conf 
# in order to preserve it.

# Directory where the final build will 
# be deployed

INSTALL := /usr/share/Mogu

#-------------------------------#
# Executables #

# The python executable responsible for generating the default config file.
gen_config := $(CURDIR)/cli/src/cli/config_generator.py $(CONFIG)

# The final artifact executable
EXECUTABLE := mogu-server

#-------------------------------#
#
# All source files are located here
source_files := src


# Each of the subfolders within the src directory
# Anytime a new subfolder is needed, it must be 
# added here.
#
branch_subs := \
	crypt \
	Config \
	Events \
	FiniteAutomaton \
	Factories \
	Moldable \
	Parsers \
	Parsers/NodeValueParser \
   	Perspectives \
	Redis \
	Security \
	Sessions \
	Types \
	Validators \

# Directories outside the PATH that must be 
# considered when locating header files.
includes := -I$(CURDIR)/src -I/usr/local/include -I/usr/include -L/usr/local/lib

# The libraries that the Mogu executable will be linked against.
libs := -lwt -lwthttp -lboost_signals -lhiredis -lturnleft -lcrypto -lcityhash -lwt

# The location of the turnleft utilities
# If they are not found, they will be downloaded
# and built.
turnleft := /usr/local/include/TurnLeftLib/TurnLeft.h

# Create the path names for each of the source directories.
sources := $(source_files) $(foreach s, $(branch_subs), $(source_files)/$s)

# Find the *.cpp files located in each of the source directories.
cpp_files := $(foreach source, $(sources), $(wildcard $(source)/*.cpp))
check_files := $(foreach source, $(sources), $(wildcard $(source)/*.check))
# The object artifacts for the source files.
objects := $(patsubst %.cpp, %.o, $(cpp_files))

# Mogu requires C++11 standards
flags := -std=c++0x

# The c++ compiling flag
command := g++ $(flags) -Wall -O$(o) -DDBCONF_DIR=$(DBCONF_DIR)

# Location of some pre-compile requirements
MOGUIO_DIR = $(CURDIR)/cli/src/moguio
SYNTAX_PY := $(MOGUIO_DIR)/moguio/syntax.py


all: $(objects) | $(turnleft)
	@echo "Linking object files and creating executable..."
ifeq ($(dbg),on)
	@g++ $(flags) -Wall -O$(o) -DDEBUG -DTERM_ENABLED -g -pg -o $(executable) $(objects) $(libs)
else
	@g++ $(flags) -Wall -O$(o) -DNDEBUG -o $(executable) $(objects) $(libs)
endif


install: mogu.conf
	@$(MAKE) uninstall
	@mkdir -p $(INSTALL)
	@cp $< $(INSTALL)
	@cp -r resources/ $(INSTALL)
	@ln -s $(CURDIR)/$(EXECUTABLE) /usr/bin/$(EXECUTABLE)
	@ln -s $(INSTALL)/mogu /usr/bin/mogu

uninstall:
	@rm -f $(INSTALL)/$(EXECUTABLE)
	@unlink /usr/bin/mogu
	@rm -rf /etc/mogu # Deprecate
	@echo "Uninstall complete."

%.o: | $(CURDIR)/syntax/syntax.h
	@echo "Compiling $@..."
ifeq ($(dbg),on)
	@$(command) -c -O$(o) -DDEBUG -DTERM_ENABLED -g -pg $(includes) -o $@ $(patsubst %.o, %.cpp, $@) 
else
	@$(command) -DNDEBUG -c -O$(o) $(includes) -o $@ $(patsubst %.o, %.cpp, $@) 
endif

$(turnleft):
	@echo "TurnLeftLib required but not found. Installing..."
	@git clone git://www.github.com/tomthorogood/TurnLeftLib.git
	@cd TurnLeftLib && $(MAKE) && sudo $(MAKE) install
	@rm -rf TurnLeftLib

upgrade:
	@echo Uninstalling current version of Mogu
	@$(MAKE) uninstall
	@echo Building latest Mogu version
	@$(MAKE)
	@echo Installing latest Mogu version
	@$(MAKE) install

syntax: $(SYNTAX_PY)
	@echo "Autogenerated Syntax File"

$(SYNTAX_PY):
	@cd syntax && $(MAKE)

$(CURDIR)/syntax/syntax.h: syntax

clean:
	@cd $(MOGUIO_DIR) && $(MAKE) clean
	@rm -rf $(objects) $(syntax) $(check_files)
	@echo "Removed build, syntax, and check files..."
	@rm -rf *.pyc
	@cd syntax && $(MAKE) clean

purge: clean
	@rm -rf $(EXECUTABLE)
	@rm -f mogu.conf
	@echo "Mogu has been purged from your system."

mogu.conf:
	@echo "$@ not found. Generating now..."
	@sudo python $(gen_config)

moguio: $(SYNTAX_PY)
	@echo "Building the moguio Python library"
	@cd $(MOGUIO_DIR) && python setup.py install

$(DBCONF_DIR)/dbconfig.conf:
	@echo "Creating and updating $@"
	@mkdir -p $(DBCONF_DIR)
	@tail -n +3 $(CURDIR)/dbconfig.conf > $@
	@sed -i "s|<DBCONF_DIR>|$(DBCONF_DIR)|g" $@
